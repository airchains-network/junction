// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: junction/cipherpodledger/fhvms_meta.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type FhvmsMeta struct {
	ChainId   string `protobuf:"bytes,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	ChainName string `protobuf:"bytes,2,opt,name=chainName,proto3" json:"chainName,omitempty"`
	Status    bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	// proof related fields
	ProofType                     string `protobuf:"bytes,4,opt,name=proofType,proto3" json:"proofType,omitempty"`
	ProvingNetworkVerificationKey []byte `protobuf:"bytes,5,opt,name=provingNetworkVerificationKey,proto3" json:"provingNetworkVerificationKey,omitempty"`
	// da related fields
	DaProvider string `protobuf:"bytes,6,opt,name=daProvider,proto3" json:"daProvider,omitempty"`
	DaBlobId   string `protobuf:"bytes,7,opt,name=daBlobId,proto3" json:"daBlobId,omitempty"`
	// relayer related fields
	RelayerGAddress   string `protobuf:"bytes,8,opt,name=relayerGAddress,proto3" json:"relayerGAddress,omitempty"`
	RelayerAscAddress string `protobuf:"bytes,9,opt,name=relayerAscAddress,proto3" json:"relayerAscAddress,omitempty"`
	// contract related fields
	PicContractAddress          string `protobuf:"bytes,10,opt,name=picContractAddress,proto3" json:"picContractAddress,omitempty"`
	AclContractAddress          string `protobuf:"bytes,11,opt,name=aclContractAddress,proto3" json:"aclContractAddress,omitempty"`
	TfheExecutorContractAddress string `protobuf:"bytes,12,opt,name=tfheExecutorContractAddress,proto3" json:"tfheExecutorContractAddress,omitempty"`
	KmsVerifierContractAddress  string `protobuf:"bytes,13,opt,name=kmsVerifierContractAddress,proto3" json:"kmsVerifierContractAddress,omitempty"`
	GatewayContractAddress      string `protobuf:"bytes,14,opt,name=gatewayContractAddress,proto3" json:"gatewayContractAddress,omitempty"`
	AscChildContractAddress     string `protobuf:"bytes,15,opt,name=ascChildContractAddress,proto3" json:"ascChildContractAddress,omitempty"`
	// pod related fields
	LatestVerifiedPodNumber uint64 `protobuf:"varint,16,opt,name=latestVerifiedPodNumber,proto3" json:"latestVerifiedPodNumber,omitempty"`
	FinalityPodNumber       uint64 `protobuf:"varint,17,opt,name=finalityPodNumber,proto3" json:"finalityPodNumber,omitempty"`
}

func (m *FhvmsMeta) Reset()         { *m = FhvmsMeta{} }
func (m *FhvmsMeta) String() string { return proto.CompactTextString(m) }
func (*FhvmsMeta) ProtoMessage()    {}
func (*FhvmsMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_2997be451ff4723d, []int{0}
}
func (m *FhvmsMeta) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FhvmsMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FhvmsMeta.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FhvmsMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FhvmsMeta.Merge(m, src)
}
func (m *FhvmsMeta) XXX_Size() int {
	return m.Size()
}
func (m *FhvmsMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_FhvmsMeta.DiscardUnknown(m)
}

var xxx_messageInfo_FhvmsMeta proto.InternalMessageInfo

func (m *FhvmsMeta) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *FhvmsMeta) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *FhvmsMeta) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *FhvmsMeta) GetProofType() string {
	if m != nil {
		return m.ProofType
	}
	return ""
}

func (m *FhvmsMeta) GetProvingNetworkVerificationKey() []byte {
	if m != nil {
		return m.ProvingNetworkVerificationKey
	}
	return nil
}

func (m *FhvmsMeta) GetDaProvider() string {
	if m != nil {
		return m.DaProvider
	}
	return ""
}

func (m *FhvmsMeta) GetDaBlobId() string {
	if m != nil {
		return m.DaBlobId
	}
	return ""
}

func (m *FhvmsMeta) GetRelayerGAddress() string {
	if m != nil {
		return m.RelayerGAddress
	}
	return ""
}

func (m *FhvmsMeta) GetRelayerAscAddress() string {
	if m != nil {
		return m.RelayerAscAddress
	}
	return ""
}

func (m *FhvmsMeta) GetPicContractAddress() string {
	if m != nil {
		return m.PicContractAddress
	}
	return ""
}

func (m *FhvmsMeta) GetAclContractAddress() string {
	if m != nil {
		return m.AclContractAddress
	}
	return ""
}

func (m *FhvmsMeta) GetTfheExecutorContractAddress() string {
	if m != nil {
		return m.TfheExecutorContractAddress
	}
	return ""
}

func (m *FhvmsMeta) GetKmsVerifierContractAddress() string {
	if m != nil {
		return m.KmsVerifierContractAddress
	}
	return ""
}

func (m *FhvmsMeta) GetGatewayContractAddress() string {
	if m != nil {
		return m.GatewayContractAddress
	}
	return ""
}

func (m *FhvmsMeta) GetAscChildContractAddress() string {
	if m != nil {
		return m.AscChildContractAddress
	}
	return ""
}

func (m *FhvmsMeta) GetLatestVerifiedPodNumber() uint64 {
	if m != nil {
		return m.LatestVerifiedPodNumber
	}
	return 0
}

func (m *FhvmsMeta) GetFinalityPodNumber() uint64 {
	if m != nil {
		return m.FinalityPodNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*FhvmsMeta)(nil), "junction.cipherpodledger.FhvmsMeta")
}

func init() {
	proto.RegisterFile("junction/cipherpodledger/fhvms_meta.proto", fileDescriptor_2997be451ff4723d)
}

var fileDescriptor_2997be451ff4723d = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x1b, 0x18, 0x5d, 0x6b, 0x06, 0x63, 0x3e, 0x0c, 0x6b, 0x40, 0x54, 0x71, 0x0a, 0x12,
	0xb4, 0x07, 0x24, 0xc4, 0x05, 0xc4, 0x36, 0xfe, 0x68, 0x42, 0x54, 0x53, 0x85, 0x40, 0xe2, 0x82,
	0x5c, 0xfb, 0x4d, 0x63, 0x96, 0xc4, 0x91, 0xfd, 0x66, 0x5b, 0x3e, 0x05, 0x7c, 0x2c, 0x8e, 0x3b,
	0x72, 0x44, 0xed, 0x17, 0x41, 0x71, 0x9b, 0x16, 0x25, 0x6b, 0x6f, 0xf1, 0xf3, 0xfc, 0x7e, 0x8e,
	0x95, 0xf8, 0x25, 0x4f, 0x7e, 0xe4, 0xa9, 0x40, 0xa5, 0xd3, 0x81, 0x50, 0x59, 0x04, 0x26, 0xd3,
	0x32, 0x06, 0x39, 0x01, 0x33, 0x08, 0xa3, 0xf3, 0xc4, 0x7e, 0x4f, 0x00, 0x79, 0x3f, 0x33, 0x1a,
	0x35, 0x65, 0x15, 0xda, 0xaf, 0xa1, 0x8f, 0x7f, 0xb6, 0x49, 0xf7, 0x7d, 0x89, 0x7f, 0x02, 0xe4,
	0x94, 0x91, 0x6d, 0x11, 0x71, 0x95, 0x9e, 0x48, 0xe6, 0xf5, 0xbc, 0xa0, 0x3b, 0xaa, 0x96, 0xf4,
	0x21, 0xe9, 0xba, 0xc7, 0x21, 0x4f, 0x80, 0xdd, 0x70, 0xdd, 0x2a, 0xa0, 0xfb, 0xa4, 0x6d, 0x91,
	0x63, 0x6e, 0xd9, 0xcd, 0x9e, 0x17, 0x74, 0x46, 0x8b, 0x55, 0x69, 0x65, 0x46, 0xeb, 0xf0, 0x73,
	0x91, 0x01, 0xdb, 0x9a, 0x5b, 0xcb, 0x80, 0xbe, 0x25, 0x8f, 0x32, 0xa3, 0xcf, 0x55, 0x3a, 0x19,
	0x02, 0x5e, 0x68, 0x73, 0xf6, 0x05, 0x8c, 0x0a, 0x95, 0xe0, 0xe5, 0x49, 0x3f, 0x42, 0xc1, 0x6e,
	0xf5, 0xbc, 0x60, 0x67, 0xb4, 0x19, 0xa2, 0x3e, 0x21, 0x92, 0x9f, 0x96, 0x88, 0x04, 0xc3, 0xda,
	0xee, 0x25, 0xff, 0x25, 0xf4, 0x80, 0x74, 0x24, 0x3f, 0x8a, 0xf5, 0xf8, 0x44, 0xb2, 0x6d, 0xd7,
	0x2e, 0xd7, 0x34, 0x20, 0xbb, 0x06, 0x62, 0x5e, 0x80, 0xf9, 0x70, 0x28, 0xa5, 0x01, 0x6b, 0x59,
	0xc7, 0x21, 0xf5, 0x98, 0x3e, 0x25, 0x7b, 0x8b, 0xe8, 0xd0, 0x8a, 0x8a, 0xed, 0x3a, 0xb6, 0x59,
	0xd0, 0x3e, 0xa1, 0x99, 0x12, 0xc7, 0x3a, 0x45, 0xc3, 0x05, 0x56, 0x38, 0x71, 0xf8, 0x35, 0x4d,
	0xc9, 0x73, 0x11, 0xd7, 0xf9, 0xdb, 0x73, 0xbe, 0xd9, 0xd0, 0x37, 0xe4, 0x01, 0x86, 0x11, 0xbc,
	0xbb, 0x04, 0x91, 0xa3, 0x36, 0x75, 0x71, 0xc7, 0x89, 0x9b, 0x10, 0xfa, 0x9a, 0x1c, 0x9c, 0x25,
	0x76, 0xfe, 0x2d, 0xa1, 0xb1, 0xc1, 0x1d, 0xb7, 0xc1, 0x06, 0x82, 0xbe, 0x20, 0xfb, 0x13, 0x8e,
	0x70, 0xc1, 0x8b, 0xba, 0x7b, 0xd7, 0xb9, 0x6b, 0x5a, 0xfa, 0x92, 0xdc, 0xe7, 0x56, 0x1c, 0x47,
	0x2a, 0x96, 0x75, 0x71, 0xd7, 0x89, 0xeb, 0xea, 0xd2, 0x8c, 0x39, 0x82, 0xc5, 0xc5, 0x91, 0xe4,
	0xa9, 0x96, 0xc3, 0x3c, 0x19, 0x83, 0x61, 0xf7, 0x7a, 0x5e, 0xb0, 0x35, 0x5a, 0x57, 0x97, 0xff,
	0x2e, 0x54, 0x29, 0x8f, 0x15, 0x16, 0x2b, 0x67, 0xcf, 0x39, 0xcd, 0xe2, 0xe8, 0xeb, 0xef, 0xa9,
	0xef, 0x5d, 0x4d, 0x7d, 0xef, 0xef, 0xd4, 0xf7, 0x7e, 0xcd, 0xfc, 0xd6, 0xd5, 0xcc, 0x6f, 0xfd,
	0x99, 0xf9, 0xad, 0x6f, 0xaf, 0x26, 0x0a, 0xa3, 0x7c, 0xdc, 0x17, 0x3a, 0x19, 0x70, 0x65, 0xdc,
	0xf5, 0xb7, 0xcf, 0xd2, 0xf9, 0xb5, 0x1c, 0x2c, 0xa7, 0xf1, 0xb2, 0x31, 0x8f, 0x58, 0x64, 0x60,
	0xc7, 0x6d, 0x37, 0x8b, 0xcf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xa7, 0xec, 0x96, 0x11, 0xb8,
	0x03, 0x00, 0x00,
}

func (m *FhvmsMeta) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FhvmsMeta) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FhvmsMeta) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FinalityPodNumber != 0 {
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(m.FinalityPodNumber))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.LatestVerifiedPodNumber != 0 {
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(m.LatestVerifiedPodNumber))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if len(m.AscChildContractAddress) > 0 {
		i -= len(m.AscChildContractAddress)
		copy(dAtA[i:], m.AscChildContractAddress)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.AscChildContractAddress)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.GatewayContractAddress) > 0 {
		i -= len(m.GatewayContractAddress)
		copy(dAtA[i:], m.GatewayContractAddress)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.GatewayContractAddress)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.KmsVerifierContractAddress) > 0 {
		i -= len(m.KmsVerifierContractAddress)
		copy(dAtA[i:], m.KmsVerifierContractAddress)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.KmsVerifierContractAddress)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.TfheExecutorContractAddress) > 0 {
		i -= len(m.TfheExecutorContractAddress)
		copy(dAtA[i:], m.TfheExecutorContractAddress)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.TfheExecutorContractAddress)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.AclContractAddress) > 0 {
		i -= len(m.AclContractAddress)
		copy(dAtA[i:], m.AclContractAddress)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.AclContractAddress)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.PicContractAddress) > 0 {
		i -= len(m.PicContractAddress)
		copy(dAtA[i:], m.PicContractAddress)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.PicContractAddress)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.RelayerAscAddress) > 0 {
		i -= len(m.RelayerAscAddress)
		copy(dAtA[i:], m.RelayerAscAddress)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.RelayerAscAddress)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.RelayerGAddress) > 0 {
		i -= len(m.RelayerGAddress)
		copy(dAtA[i:], m.RelayerGAddress)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.RelayerGAddress)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DaBlobId) > 0 {
		i -= len(m.DaBlobId)
		copy(dAtA[i:], m.DaBlobId)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.DaBlobId)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.DaProvider) > 0 {
		i -= len(m.DaProvider)
		copy(dAtA[i:], m.DaProvider)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.DaProvider)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ProvingNetworkVerificationKey) > 0 {
		i -= len(m.ProvingNetworkVerificationKey)
		copy(dAtA[i:], m.ProvingNetworkVerificationKey)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.ProvingNetworkVerificationKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ProofType) > 0 {
		i -= len(m.ProofType)
		copy(dAtA[i:], m.ProofType)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.ProofType)))
		i--
		dAtA[i] = 0x22
	}
	if m.Status {
		i--
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.ChainName) > 0 {
		i -= len(m.ChainName)
		copy(dAtA[i:], m.ChainName)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.ChainName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintFhvmsMeta(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintFhvmsMeta(dAtA []byte, offset int, v uint64) int {
	offset -= sovFhvmsMeta(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FhvmsMeta) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.ChainName)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	if m.Status {
		n += 2
	}
	l = len(m.ProofType)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.ProvingNetworkVerificationKey)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.DaProvider)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.DaBlobId)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.RelayerGAddress)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.RelayerAscAddress)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.PicContractAddress)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.AclContractAddress)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.TfheExecutorContractAddress)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.KmsVerifierContractAddress)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.GatewayContractAddress)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	l = len(m.AscChildContractAddress)
	if l > 0 {
		n += 1 + l + sovFhvmsMeta(uint64(l))
	}
	if m.LatestVerifiedPodNumber != 0 {
		n += 2 + sovFhvmsMeta(uint64(m.LatestVerifiedPodNumber))
	}
	if m.FinalityPodNumber != 0 {
		n += 2 + sovFhvmsMeta(uint64(m.FinalityPodNumber))
	}
	return n
}

func sovFhvmsMeta(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFhvmsMeta(x uint64) (n int) {
	return sovFhvmsMeta(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FhvmsMeta) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFhvmsMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FhvmsMeta: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FhvmsMeta: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProvingNetworkVerificationKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProvingNetworkVerificationKey = append(m.ProvingNetworkVerificationKey[:0], dAtA[iNdEx:postIndex]...)
			if m.ProvingNetworkVerificationKey == nil {
				m.ProvingNetworkVerificationKey = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DaProvider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DaProvider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DaBlobId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DaBlobId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayerGAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayerGAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayerAscAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayerAscAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PicContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PicContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AclContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AclContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TfheExecutorContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TfheExecutorContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KmsVerifierContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KmsVerifierContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GatewayContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AscChildContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AscChildContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestVerifiedPodNumber", wireType)
			}
			m.LatestVerifiedPodNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LatestVerifiedPodNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalityPodNumber", wireType)
			}
			m.FinalityPodNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FinalityPodNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFhvmsMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFhvmsMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFhvmsMeta(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFhvmsMeta
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFhvmsMeta
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFhvmsMeta
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFhvmsMeta
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFhvmsMeta
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFhvmsMeta        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFhvmsMeta          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFhvmsMeta = fmt.Errorf("proto: unexpected end of group")
)
