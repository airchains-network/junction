// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package cipherpodledger

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_FhvmsMeta                             protoreflect.MessageDescriptor
	fd_FhvmsMeta_chainId                     protoreflect.FieldDescriptor
	fd_FhvmsMeta_chainName                   protoreflect.FieldDescriptor
	fd_FhvmsMeta_proofType                   protoreflect.FieldDescriptor
	fd_FhvmsMeta_daProvider                  protoreflect.FieldDescriptor
	fd_FhvmsMeta_daBlobId                    protoreflect.FieldDescriptor
	fd_FhvmsMeta_relayerGAddress             protoreflect.FieldDescriptor
	fd_FhvmsMeta_relayerAscAddress           protoreflect.FieldDescriptor
	fd_FhvmsMeta_picContractAddress          protoreflect.FieldDescriptor
	fd_FhvmsMeta_aclContractAddress          protoreflect.FieldDescriptor
	fd_FhvmsMeta_tfheExecutorContractAddress protoreflect.FieldDescriptor
	fd_FhvmsMeta_kmsVerifierContractAddress  protoreflect.FieldDescriptor
	fd_FhvmsMeta_gatewayContractAddress      protoreflect.FieldDescriptor
	fd_FhvmsMeta_ascChildContractAddress     protoreflect.FieldDescriptor
	fd_FhvmsMeta_latestVerifiedPodNumber     protoreflect.FieldDescriptor
	fd_FhvmsMeta_finalityPodNumber           protoreflect.FieldDescriptor
	fd_FhvmsMeta_status                      protoreflect.FieldDescriptor
)

func init() {
	file_junction_cipherpodledger_fhvms_meta_proto_init()
	md_FhvmsMeta = File_junction_cipherpodledger_fhvms_meta_proto.Messages().ByName("FhvmsMeta")
	fd_FhvmsMeta_chainId = md_FhvmsMeta.Fields().ByName("chainId")
	fd_FhvmsMeta_chainName = md_FhvmsMeta.Fields().ByName("chainName")
	fd_FhvmsMeta_proofType = md_FhvmsMeta.Fields().ByName("proofType")
	fd_FhvmsMeta_daProvider = md_FhvmsMeta.Fields().ByName("daProvider")
	fd_FhvmsMeta_daBlobId = md_FhvmsMeta.Fields().ByName("daBlobId")
	fd_FhvmsMeta_relayerGAddress = md_FhvmsMeta.Fields().ByName("relayerGAddress")
	fd_FhvmsMeta_relayerAscAddress = md_FhvmsMeta.Fields().ByName("relayerAscAddress")
	fd_FhvmsMeta_picContractAddress = md_FhvmsMeta.Fields().ByName("picContractAddress")
	fd_FhvmsMeta_aclContractAddress = md_FhvmsMeta.Fields().ByName("aclContractAddress")
	fd_FhvmsMeta_tfheExecutorContractAddress = md_FhvmsMeta.Fields().ByName("tfheExecutorContractAddress")
	fd_FhvmsMeta_kmsVerifierContractAddress = md_FhvmsMeta.Fields().ByName("kmsVerifierContractAddress")
	fd_FhvmsMeta_gatewayContractAddress = md_FhvmsMeta.Fields().ByName("gatewayContractAddress")
	fd_FhvmsMeta_ascChildContractAddress = md_FhvmsMeta.Fields().ByName("ascChildContractAddress")
	fd_FhvmsMeta_latestVerifiedPodNumber = md_FhvmsMeta.Fields().ByName("latestVerifiedPodNumber")
	fd_FhvmsMeta_finalityPodNumber = md_FhvmsMeta.Fields().ByName("finalityPodNumber")
	fd_FhvmsMeta_status = md_FhvmsMeta.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_FhvmsMeta)(nil)

type fastReflection_FhvmsMeta FhvmsMeta

func (x *FhvmsMeta) ProtoReflect() protoreflect.Message {
	return (*fastReflection_FhvmsMeta)(x)
}

func (x *FhvmsMeta) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_cipherpodledger_fhvms_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_FhvmsMeta_messageType fastReflection_FhvmsMeta_messageType
var _ protoreflect.MessageType = fastReflection_FhvmsMeta_messageType{}

type fastReflection_FhvmsMeta_messageType struct{}

func (x fastReflection_FhvmsMeta_messageType) Zero() protoreflect.Message {
	return (*fastReflection_FhvmsMeta)(nil)
}
func (x fastReflection_FhvmsMeta_messageType) New() protoreflect.Message {
	return new(fastReflection_FhvmsMeta)
}
func (x fastReflection_FhvmsMeta_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_FhvmsMeta
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_FhvmsMeta) Descriptor() protoreflect.MessageDescriptor {
	return md_FhvmsMeta
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_FhvmsMeta) Type() protoreflect.MessageType {
	return _fastReflection_FhvmsMeta_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_FhvmsMeta) New() protoreflect.Message {
	return new(fastReflection_FhvmsMeta)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_FhvmsMeta) Interface() protoreflect.ProtoMessage {
	return (*FhvmsMeta)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_FhvmsMeta) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_FhvmsMeta_chainId, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_FhvmsMeta_chainName, value) {
			return
		}
	}
	if x.ProofType != "" {
		value := protoreflect.ValueOfString(x.ProofType)
		if !f(fd_FhvmsMeta_proofType, value) {
			return
		}
	}
	if x.DaProvider != "" {
		value := protoreflect.ValueOfString(x.DaProvider)
		if !f(fd_FhvmsMeta_daProvider, value) {
			return
		}
	}
	if x.DaBlobId != "" {
		value := protoreflect.ValueOfString(x.DaBlobId)
		if !f(fd_FhvmsMeta_daBlobId, value) {
			return
		}
	}
	if x.RelayerGAddress != "" {
		value := protoreflect.ValueOfString(x.RelayerGAddress)
		if !f(fd_FhvmsMeta_relayerGAddress, value) {
			return
		}
	}
	if x.RelayerAscAddress != "" {
		value := protoreflect.ValueOfString(x.RelayerAscAddress)
		if !f(fd_FhvmsMeta_relayerAscAddress, value) {
			return
		}
	}
	if x.PicContractAddress != "" {
		value := protoreflect.ValueOfString(x.PicContractAddress)
		if !f(fd_FhvmsMeta_picContractAddress, value) {
			return
		}
	}
	if x.AclContractAddress != "" {
		value := protoreflect.ValueOfString(x.AclContractAddress)
		if !f(fd_FhvmsMeta_aclContractAddress, value) {
			return
		}
	}
	if x.TfheExecutorContractAddress != "" {
		value := protoreflect.ValueOfString(x.TfheExecutorContractAddress)
		if !f(fd_FhvmsMeta_tfheExecutorContractAddress, value) {
			return
		}
	}
	if x.KmsVerifierContractAddress != "" {
		value := protoreflect.ValueOfString(x.KmsVerifierContractAddress)
		if !f(fd_FhvmsMeta_kmsVerifierContractAddress, value) {
			return
		}
	}
	if x.GatewayContractAddress != "" {
		value := protoreflect.ValueOfString(x.GatewayContractAddress)
		if !f(fd_FhvmsMeta_gatewayContractAddress, value) {
			return
		}
	}
	if x.AscChildContractAddress != "" {
		value := protoreflect.ValueOfString(x.AscChildContractAddress)
		if !f(fd_FhvmsMeta_ascChildContractAddress, value) {
			return
		}
	}
	if x.LatestVerifiedPodNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LatestVerifiedPodNumber)
		if !f(fd_FhvmsMeta_latestVerifiedPodNumber, value) {
			return
		}
	}
	if x.FinalityPodNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.FinalityPodNumber)
		if !f(fd_FhvmsMeta_finalityPodNumber, value) {
			return
		}
	}
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_FhvmsMeta_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_FhvmsMeta) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.cipherpodledger.FhvmsMeta.chainId":
		return x.ChainId != ""
	case "junction.cipherpodledger.FhvmsMeta.chainName":
		return x.ChainName != ""
	case "junction.cipherpodledger.FhvmsMeta.proofType":
		return x.ProofType != ""
	case "junction.cipherpodledger.FhvmsMeta.daProvider":
		return x.DaProvider != ""
	case "junction.cipherpodledger.FhvmsMeta.daBlobId":
		return x.DaBlobId != ""
	case "junction.cipherpodledger.FhvmsMeta.relayerGAddress":
		return x.RelayerGAddress != ""
	case "junction.cipherpodledger.FhvmsMeta.relayerAscAddress":
		return x.RelayerAscAddress != ""
	case "junction.cipherpodledger.FhvmsMeta.picContractAddress":
		return x.PicContractAddress != ""
	case "junction.cipherpodledger.FhvmsMeta.aclContractAddress":
		return x.AclContractAddress != ""
	case "junction.cipherpodledger.FhvmsMeta.tfheExecutorContractAddress":
		return x.TfheExecutorContractAddress != ""
	case "junction.cipherpodledger.FhvmsMeta.kmsVerifierContractAddress":
		return x.KmsVerifierContractAddress != ""
	case "junction.cipherpodledger.FhvmsMeta.gatewayContractAddress":
		return x.GatewayContractAddress != ""
	case "junction.cipherpodledger.FhvmsMeta.ascChildContractAddress":
		return x.AscChildContractAddress != ""
	case "junction.cipherpodledger.FhvmsMeta.latestVerifiedPodNumber":
		return x.LatestVerifiedPodNumber != uint64(0)
	case "junction.cipherpodledger.FhvmsMeta.finalityPodNumber":
		return x.FinalityPodNumber != uint64(0)
	case "junction.cipherpodledger.FhvmsMeta.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.cipherpodledger.FhvmsMeta"))
		}
		panic(fmt.Errorf("message junction.cipherpodledger.FhvmsMeta does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FhvmsMeta) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.cipherpodledger.FhvmsMeta.chainId":
		x.ChainId = ""
	case "junction.cipherpodledger.FhvmsMeta.chainName":
		x.ChainName = ""
	case "junction.cipherpodledger.FhvmsMeta.proofType":
		x.ProofType = ""
	case "junction.cipherpodledger.FhvmsMeta.daProvider":
		x.DaProvider = ""
	case "junction.cipherpodledger.FhvmsMeta.daBlobId":
		x.DaBlobId = ""
	case "junction.cipherpodledger.FhvmsMeta.relayerGAddress":
		x.RelayerGAddress = ""
	case "junction.cipherpodledger.FhvmsMeta.relayerAscAddress":
		x.RelayerAscAddress = ""
	case "junction.cipherpodledger.FhvmsMeta.picContractAddress":
		x.PicContractAddress = ""
	case "junction.cipherpodledger.FhvmsMeta.aclContractAddress":
		x.AclContractAddress = ""
	case "junction.cipherpodledger.FhvmsMeta.tfheExecutorContractAddress":
		x.TfheExecutorContractAddress = ""
	case "junction.cipherpodledger.FhvmsMeta.kmsVerifierContractAddress":
		x.KmsVerifierContractAddress = ""
	case "junction.cipherpodledger.FhvmsMeta.gatewayContractAddress":
		x.GatewayContractAddress = ""
	case "junction.cipherpodledger.FhvmsMeta.ascChildContractAddress":
		x.AscChildContractAddress = ""
	case "junction.cipherpodledger.FhvmsMeta.latestVerifiedPodNumber":
		x.LatestVerifiedPodNumber = uint64(0)
	case "junction.cipherpodledger.FhvmsMeta.finalityPodNumber":
		x.FinalityPodNumber = uint64(0)
	case "junction.cipherpodledger.FhvmsMeta.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.cipherpodledger.FhvmsMeta"))
		}
		panic(fmt.Errorf("message junction.cipherpodledger.FhvmsMeta does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_FhvmsMeta) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.cipherpodledger.FhvmsMeta.chainId":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.chainName":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.proofType":
		value := x.ProofType
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.daProvider":
		value := x.DaProvider
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.daBlobId":
		value := x.DaBlobId
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.relayerGAddress":
		value := x.RelayerGAddress
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.relayerAscAddress":
		value := x.RelayerAscAddress
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.picContractAddress":
		value := x.PicContractAddress
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.aclContractAddress":
		value := x.AclContractAddress
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.tfheExecutorContractAddress":
		value := x.TfheExecutorContractAddress
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.kmsVerifierContractAddress":
		value := x.KmsVerifierContractAddress
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.gatewayContractAddress":
		value := x.GatewayContractAddress
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.ascChildContractAddress":
		value := x.AscChildContractAddress
		return protoreflect.ValueOfString(value)
	case "junction.cipherpodledger.FhvmsMeta.latestVerifiedPodNumber":
		value := x.LatestVerifiedPodNumber
		return protoreflect.ValueOfUint64(value)
	case "junction.cipherpodledger.FhvmsMeta.finalityPodNumber":
		value := x.FinalityPodNumber
		return protoreflect.ValueOfUint64(value)
	case "junction.cipherpodledger.FhvmsMeta.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.cipherpodledger.FhvmsMeta"))
		}
		panic(fmt.Errorf("message junction.cipherpodledger.FhvmsMeta does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FhvmsMeta) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.cipherpodledger.FhvmsMeta.chainId":
		x.ChainId = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.chainName":
		x.ChainName = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.proofType":
		x.ProofType = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.daProvider":
		x.DaProvider = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.daBlobId":
		x.DaBlobId = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.relayerGAddress":
		x.RelayerGAddress = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.relayerAscAddress":
		x.RelayerAscAddress = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.picContractAddress":
		x.PicContractAddress = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.aclContractAddress":
		x.AclContractAddress = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.tfheExecutorContractAddress":
		x.TfheExecutorContractAddress = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.kmsVerifierContractAddress":
		x.KmsVerifierContractAddress = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.gatewayContractAddress":
		x.GatewayContractAddress = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.ascChildContractAddress":
		x.AscChildContractAddress = value.Interface().(string)
	case "junction.cipherpodledger.FhvmsMeta.latestVerifiedPodNumber":
		x.LatestVerifiedPodNumber = value.Uint()
	case "junction.cipherpodledger.FhvmsMeta.finalityPodNumber":
		x.FinalityPodNumber = value.Uint()
	case "junction.cipherpodledger.FhvmsMeta.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.cipherpodledger.FhvmsMeta"))
		}
		panic(fmt.Errorf("message junction.cipherpodledger.FhvmsMeta does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FhvmsMeta) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.cipherpodledger.FhvmsMeta.chainId":
		panic(fmt.Errorf("field chainId of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.chainName":
		panic(fmt.Errorf("field chainName of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.proofType":
		panic(fmt.Errorf("field proofType of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.daProvider":
		panic(fmt.Errorf("field daProvider of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.daBlobId":
		panic(fmt.Errorf("field daBlobId of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.relayerGAddress":
		panic(fmt.Errorf("field relayerGAddress of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.relayerAscAddress":
		panic(fmt.Errorf("field relayerAscAddress of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.picContractAddress":
		panic(fmt.Errorf("field picContractAddress of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.aclContractAddress":
		panic(fmt.Errorf("field aclContractAddress of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.tfheExecutorContractAddress":
		panic(fmt.Errorf("field tfheExecutorContractAddress of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.kmsVerifierContractAddress":
		panic(fmt.Errorf("field kmsVerifierContractAddress of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.gatewayContractAddress":
		panic(fmt.Errorf("field gatewayContractAddress of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.ascChildContractAddress":
		panic(fmt.Errorf("field ascChildContractAddress of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.latestVerifiedPodNumber":
		panic(fmt.Errorf("field latestVerifiedPodNumber of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.finalityPodNumber":
		panic(fmt.Errorf("field finalityPodNumber of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	case "junction.cipherpodledger.FhvmsMeta.status":
		panic(fmt.Errorf("field status of message junction.cipherpodledger.FhvmsMeta is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.cipherpodledger.FhvmsMeta"))
		}
		panic(fmt.Errorf("message junction.cipherpodledger.FhvmsMeta does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_FhvmsMeta) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.cipherpodledger.FhvmsMeta.chainId":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.chainName":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.proofType":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.daProvider":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.daBlobId":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.relayerGAddress":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.relayerAscAddress":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.picContractAddress":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.aclContractAddress":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.tfheExecutorContractAddress":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.kmsVerifierContractAddress":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.gatewayContractAddress":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.ascChildContractAddress":
		return protoreflect.ValueOfString("")
	case "junction.cipherpodledger.FhvmsMeta.latestVerifiedPodNumber":
		return protoreflect.ValueOfUint64(uint64(0))
	case "junction.cipherpodledger.FhvmsMeta.finalityPodNumber":
		return protoreflect.ValueOfUint64(uint64(0))
	case "junction.cipherpodledger.FhvmsMeta.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.cipherpodledger.FhvmsMeta"))
		}
		panic(fmt.Errorf("message junction.cipherpodledger.FhvmsMeta does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_FhvmsMeta) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.cipherpodledger.FhvmsMeta", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_FhvmsMeta) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FhvmsMeta) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_FhvmsMeta) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_FhvmsMeta) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*FhvmsMeta)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DaProvider)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DaBlobId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RelayerGAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RelayerAscAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PicContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AclContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TfheExecutorContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.KmsVerifierContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GatewayContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AscChildContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LatestVerifiedPodNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.LatestVerifiedPodNumber))
		}
		if x.FinalityPodNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.FinalityPodNumber))
		}
		if x.Status {
			n += 3
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*FhvmsMeta)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x80
		}
		if x.FinalityPodNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FinalityPodNumber))
			i--
			dAtA[i] = 0x78
		}
		if x.LatestVerifiedPodNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LatestVerifiedPodNumber))
			i--
			dAtA[i] = 0x70
		}
		if len(x.AscChildContractAddress) > 0 {
			i -= len(x.AscChildContractAddress)
			copy(dAtA[i:], x.AscChildContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AscChildContractAddress)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.GatewayContractAddress) > 0 {
			i -= len(x.GatewayContractAddress)
			copy(dAtA[i:], x.GatewayContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GatewayContractAddress)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.KmsVerifierContractAddress) > 0 {
			i -= len(x.KmsVerifierContractAddress)
			copy(dAtA[i:], x.KmsVerifierContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KmsVerifierContractAddress)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.TfheExecutorContractAddress) > 0 {
			i -= len(x.TfheExecutorContractAddress)
			copy(dAtA[i:], x.TfheExecutorContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TfheExecutorContractAddress)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.AclContractAddress) > 0 {
			i -= len(x.AclContractAddress)
			copy(dAtA[i:], x.AclContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AclContractAddress)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.PicContractAddress) > 0 {
			i -= len(x.PicContractAddress)
			copy(dAtA[i:], x.PicContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PicContractAddress)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.RelayerAscAddress) > 0 {
			i -= len(x.RelayerAscAddress)
			copy(dAtA[i:], x.RelayerAscAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RelayerAscAddress)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.RelayerGAddress) > 0 {
			i -= len(x.RelayerGAddress)
			copy(dAtA[i:], x.RelayerGAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RelayerGAddress)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.DaBlobId) > 0 {
			i -= len(x.DaBlobId)
			copy(dAtA[i:], x.DaBlobId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DaBlobId)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.DaProvider) > 0 {
			i -= len(x.DaProvider)
			copy(dAtA[i:], x.DaProvider)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DaProvider)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ProofType) > 0 {
			i -= len(x.ProofType)
			copy(dAtA[i:], x.ProofType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofType)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*FhvmsMeta)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: FhvmsMeta: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: FhvmsMeta: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DaProvider", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DaProvider = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DaBlobId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DaBlobId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RelayerGAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RelayerGAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RelayerAscAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RelayerAscAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PicContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PicContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AclContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AclContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TfheExecutorContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TfheExecutorContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KmsVerifierContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KmsVerifierContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GatewayContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GatewayContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AscChildContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AscChildContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestVerifiedPodNumber", wireType)
				}
				x.LatestVerifiedPodNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LatestVerifiedPodNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinalityPodNumber", wireType)
				}
				x.FinalityPodNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FinalityPodNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 16:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: junction/cipherpodledger/fhvms_meta.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FhvmsMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId                     string `protobuf:"bytes,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	ChainName                   string `protobuf:"bytes,2,opt,name=chainName,proto3" json:"chainName,omitempty"`
	ProofType                   string `protobuf:"bytes,3,opt,name=proofType,proto3" json:"proofType,omitempty"`
	DaProvider                  string `protobuf:"bytes,4,opt,name=daProvider,proto3" json:"daProvider,omitempty"`
	DaBlobId                    string `protobuf:"bytes,5,opt,name=daBlobId,proto3" json:"daBlobId,omitempty"`
	RelayerGAddress             string `protobuf:"bytes,6,opt,name=relayerGAddress,proto3" json:"relayerGAddress,omitempty"`
	RelayerAscAddress           string `protobuf:"bytes,7,opt,name=relayerAscAddress,proto3" json:"relayerAscAddress,omitempty"`
	PicContractAddress          string `protobuf:"bytes,8,opt,name=picContractAddress,proto3" json:"picContractAddress,omitempty"`
	AclContractAddress          string `protobuf:"bytes,9,opt,name=aclContractAddress,proto3" json:"aclContractAddress,omitempty"`
	TfheExecutorContractAddress string `protobuf:"bytes,10,opt,name=tfheExecutorContractAddress,proto3" json:"tfheExecutorContractAddress,omitempty"`
	KmsVerifierContractAddress  string `protobuf:"bytes,11,opt,name=kmsVerifierContractAddress,proto3" json:"kmsVerifierContractAddress,omitempty"`
	GatewayContractAddress      string `protobuf:"bytes,12,opt,name=gatewayContractAddress,proto3" json:"gatewayContractAddress,omitempty"`
	AscChildContractAddress     string `protobuf:"bytes,13,opt,name=ascChildContractAddress,proto3" json:"ascChildContractAddress,omitempty"`
	LatestVerifiedPodNumber     uint64 `protobuf:"varint,14,opt,name=latestVerifiedPodNumber,proto3" json:"latestVerifiedPodNumber,omitempty"`
	FinalityPodNumber           uint64 `protobuf:"varint,15,opt,name=finalityPodNumber,proto3" json:"finalityPodNumber,omitempty"`
	Status                      bool   `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FhvmsMeta) Reset() {
	*x = FhvmsMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_cipherpodledger_fhvms_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FhvmsMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FhvmsMeta) ProtoMessage() {}

// Deprecated: Use FhvmsMeta.ProtoReflect.Descriptor instead.
func (*FhvmsMeta) Descriptor() ([]byte, []int) {
	return file_junction_cipherpodledger_fhvms_meta_proto_rawDescGZIP(), []int{0}
}

func (x *FhvmsMeta) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *FhvmsMeta) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *FhvmsMeta) GetProofType() string {
	if x != nil {
		return x.ProofType
	}
	return ""
}

func (x *FhvmsMeta) GetDaProvider() string {
	if x != nil {
		return x.DaProvider
	}
	return ""
}

func (x *FhvmsMeta) GetDaBlobId() string {
	if x != nil {
		return x.DaBlobId
	}
	return ""
}

func (x *FhvmsMeta) GetRelayerGAddress() string {
	if x != nil {
		return x.RelayerGAddress
	}
	return ""
}

func (x *FhvmsMeta) GetRelayerAscAddress() string {
	if x != nil {
		return x.RelayerAscAddress
	}
	return ""
}

func (x *FhvmsMeta) GetPicContractAddress() string {
	if x != nil {
		return x.PicContractAddress
	}
	return ""
}

func (x *FhvmsMeta) GetAclContractAddress() string {
	if x != nil {
		return x.AclContractAddress
	}
	return ""
}

func (x *FhvmsMeta) GetTfheExecutorContractAddress() string {
	if x != nil {
		return x.TfheExecutorContractAddress
	}
	return ""
}

func (x *FhvmsMeta) GetKmsVerifierContractAddress() string {
	if x != nil {
		return x.KmsVerifierContractAddress
	}
	return ""
}

func (x *FhvmsMeta) GetGatewayContractAddress() string {
	if x != nil {
		return x.GatewayContractAddress
	}
	return ""
}

func (x *FhvmsMeta) GetAscChildContractAddress() string {
	if x != nil {
		return x.AscChildContractAddress
	}
	return ""
}

func (x *FhvmsMeta) GetLatestVerifiedPodNumber() uint64 {
	if x != nil {
		return x.LatestVerifiedPodNumber
	}
	return 0
}

func (x *FhvmsMeta) GetFinalityPodNumber() uint64 {
	if x != nil {
		return x.FinalityPodNumber
	}
	return 0
}

func (x *FhvmsMeta) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_junction_cipherpodledger_fhvms_meta_proto protoreflect.FileDescriptor

var file_junction_cipherpodledger_fhvms_meta_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x70, 0x6f, 0x64, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x66, 0x68, 0x76, 0x6d, 0x73,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x6a, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x70, 0x6f, 0x64, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x22, 0xc9, 0x05, 0x0a, 0x09, 0x46, 0x68, 0x76, 0x6d, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x42,
	0x6c, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x42,
	0x6c, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x73, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x73, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a,
	0x12, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x69, 0x63, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a,
	0x12, 0x61, 0x63, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x63, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a,
	0x1b, 0x74, 0x66, 0x68, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1b, 0x74, 0x66, 0x68, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x3e, 0x0a, 0x1a, 0x6b, 0x6d, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x6b, 0x6d, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x36, 0x0a, 0x16, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x61, 0x73, 0x63, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61, 0x73, 0x63, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x17, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x50, 0x6f, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x6f, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0xda, 0x01, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x70, 0x6f, 0x64, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x42, 0x0e, 0x46, 0x68, 0x76, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x70, 0x6f, 0x64, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0xa2,
	0x02, 0x03, 0x4a, 0x43, 0x58, 0xaa, 0x02, 0x18, 0x4a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x70, 0x6f, 0x64, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0xca, 0x02, 0x18, 0x4a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x43, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x70, 0x6f, 0x64, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0xe2, 0x02, 0x24, 0x4a, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x70, 0x6f, 0x64,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x19, 0x4a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x43,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x70, 0x6f, 0x64, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_junction_cipherpodledger_fhvms_meta_proto_rawDescOnce sync.Once
	file_junction_cipherpodledger_fhvms_meta_proto_rawDescData = file_junction_cipherpodledger_fhvms_meta_proto_rawDesc
)

func file_junction_cipherpodledger_fhvms_meta_proto_rawDescGZIP() []byte {
	file_junction_cipherpodledger_fhvms_meta_proto_rawDescOnce.Do(func() {
		file_junction_cipherpodledger_fhvms_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_junction_cipherpodledger_fhvms_meta_proto_rawDescData)
	})
	return file_junction_cipherpodledger_fhvms_meta_proto_rawDescData
}

var file_junction_cipherpodledger_fhvms_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_junction_cipherpodledger_fhvms_meta_proto_goTypes = []interface{}{
	(*FhvmsMeta)(nil), // 0: junction.cipherpodledger.FhvmsMeta
}
var file_junction_cipherpodledger_fhvms_meta_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_junction_cipherpodledger_fhvms_meta_proto_init() }
func file_junction_cipherpodledger_fhvms_meta_proto_init() {
	if File_junction_cipherpodledger_fhvms_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_junction_cipherpodledger_fhvms_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FhvmsMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_junction_cipherpodledger_fhvms_meta_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_junction_cipherpodledger_fhvms_meta_proto_goTypes,
		DependencyIndexes: file_junction_cipherpodledger_fhvms_meta_proto_depIdxs,
		MessageInfos:      file_junction_cipherpodledger_fhvms_meta_proto_msgTypes,
	}.Build()
	File_junction_cipherpodledger_fhvms_meta_proto = out.File
	file_junction_cipherpodledger_fhvms_meta_proto_rawDesc = nil
	file_junction_cipherpodledger_fhvms_meta_proto_goTypes = nil
	file_junction_cipherpodledger_fhvms_meta_proto_depIdxs = nil
}
