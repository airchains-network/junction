// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package wasmv1

import (
	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_StoreCodeProposal                        protoreflect.MessageDescriptor
	fd_StoreCodeProposal_title                  protoreflect.FieldDescriptor
	fd_StoreCodeProposal_description            protoreflect.FieldDescriptor
	fd_StoreCodeProposal_run_as                 protoreflect.FieldDescriptor
	fd_StoreCodeProposal_wasm_byte_code         protoreflect.FieldDescriptor
	fd_StoreCodeProposal_instantiate_permission protoreflect.FieldDescriptor
	fd_StoreCodeProposal_unpin_code             protoreflect.FieldDescriptor
	fd_StoreCodeProposal_source                 protoreflect.FieldDescriptor
	fd_StoreCodeProposal_builder                protoreflect.FieldDescriptor
	fd_StoreCodeProposal_code_hash              protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_StoreCodeProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("StoreCodeProposal")
	fd_StoreCodeProposal_title = md_StoreCodeProposal.Fields().ByName("title")
	fd_StoreCodeProposal_description = md_StoreCodeProposal.Fields().ByName("description")
	fd_StoreCodeProposal_run_as = md_StoreCodeProposal.Fields().ByName("run_as")
	fd_StoreCodeProposal_wasm_byte_code = md_StoreCodeProposal.Fields().ByName("wasm_byte_code")
	fd_StoreCodeProposal_instantiate_permission = md_StoreCodeProposal.Fields().ByName("instantiate_permission")
	fd_StoreCodeProposal_unpin_code = md_StoreCodeProposal.Fields().ByName("unpin_code")
	fd_StoreCodeProposal_source = md_StoreCodeProposal.Fields().ByName("source")
	fd_StoreCodeProposal_builder = md_StoreCodeProposal.Fields().ByName("builder")
	fd_StoreCodeProposal_code_hash = md_StoreCodeProposal.Fields().ByName("code_hash")
}

var _ protoreflect.Message = (*fastReflection_StoreCodeProposal)(nil)

type fastReflection_StoreCodeProposal StoreCodeProposal

func (x *StoreCodeProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_StoreCodeProposal)(x)
}

func (x *StoreCodeProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_StoreCodeProposal_messageType fastReflection_StoreCodeProposal_messageType
var _ protoreflect.MessageType = fastReflection_StoreCodeProposal_messageType{}

type fastReflection_StoreCodeProposal_messageType struct{}

func (x fastReflection_StoreCodeProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_StoreCodeProposal)(nil)
}
func (x fastReflection_StoreCodeProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_StoreCodeProposal)
}
func (x fastReflection_StoreCodeProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_StoreCodeProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_StoreCodeProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_StoreCodeProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_StoreCodeProposal) Type() protoreflect.MessageType {
	return _fastReflection_StoreCodeProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_StoreCodeProposal) New() protoreflect.Message {
	return new(fastReflection_StoreCodeProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_StoreCodeProposal) Interface() protoreflect.ProtoMessage {
	return (*StoreCodeProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_StoreCodeProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_StoreCodeProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_StoreCodeProposal_description, value) {
			return
		}
	}
	if x.RunAs != "" {
		value := protoreflect.ValueOfString(x.RunAs)
		if !f(fd_StoreCodeProposal_run_as, value) {
			return
		}
	}
	if len(x.WasmByteCode) != 0 {
		value := protoreflect.ValueOfBytes(x.WasmByteCode)
		if !f(fd_StoreCodeProposal_wasm_byte_code, value) {
			return
		}
	}
	if x.InstantiatePermission != nil {
		value := protoreflect.ValueOfMessage(x.InstantiatePermission.ProtoReflect())
		if !f(fd_StoreCodeProposal_instantiate_permission, value) {
			return
		}
	}
	if x.UnpinCode != false {
		value := protoreflect.ValueOfBool(x.UnpinCode)
		if !f(fd_StoreCodeProposal_unpin_code, value) {
			return
		}
	}
	if x.Source != "" {
		value := protoreflect.ValueOfString(x.Source)
		if !f(fd_StoreCodeProposal_source, value) {
			return
		}
	}
	if x.Builder != "" {
		value := protoreflect.ValueOfString(x.Builder)
		if !f(fd_StoreCodeProposal_builder, value) {
			return
		}
	}
	if len(x.CodeHash) != 0 {
		value := protoreflect.ValueOfBytes(x.CodeHash)
		if !f(fd_StoreCodeProposal_code_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_StoreCodeProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreCodeProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.StoreCodeProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.StoreCodeProposal.run_as":
		return x.RunAs != ""
	case "junction.wasm.v1.StoreCodeProposal.wasm_byte_code":
		return len(x.WasmByteCode) != 0
	case "junction.wasm.v1.StoreCodeProposal.instantiate_permission":
		return x.InstantiatePermission != nil
	case "junction.wasm.v1.StoreCodeProposal.unpin_code":
		return x.UnpinCode != false
	case "junction.wasm.v1.StoreCodeProposal.source":
		return x.Source != ""
	case "junction.wasm.v1.StoreCodeProposal.builder":
		return x.Builder != ""
	case "junction.wasm.v1.StoreCodeProposal.code_hash":
		return len(x.CodeHash) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreCodeProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreCodeProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreCodeProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreCodeProposal.title":
		x.Title = ""
	case "junction.wasm.v1.StoreCodeProposal.description":
		x.Description = ""
	case "junction.wasm.v1.StoreCodeProposal.run_as":
		x.RunAs = ""
	case "junction.wasm.v1.StoreCodeProposal.wasm_byte_code":
		x.WasmByteCode = nil
	case "junction.wasm.v1.StoreCodeProposal.instantiate_permission":
		x.InstantiatePermission = nil
	case "junction.wasm.v1.StoreCodeProposal.unpin_code":
		x.UnpinCode = false
	case "junction.wasm.v1.StoreCodeProposal.source":
		x.Source = ""
	case "junction.wasm.v1.StoreCodeProposal.builder":
		x.Builder = ""
	case "junction.wasm.v1.StoreCodeProposal.code_hash":
		x.CodeHash = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreCodeProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreCodeProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_StoreCodeProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.StoreCodeProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreCodeProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreCodeProposal.run_as":
		value := x.RunAs
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreCodeProposal.wasm_byte_code":
		value := x.WasmByteCode
		return protoreflect.ValueOfBytes(value)
	case "junction.wasm.v1.StoreCodeProposal.instantiate_permission":
		value := x.InstantiatePermission
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "junction.wasm.v1.StoreCodeProposal.unpin_code":
		value := x.UnpinCode
		return protoreflect.ValueOfBool(value)
	case "junction.wasm.v1.StoreCodeProposal.source":
		value := x.Source
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreCodeProposal.builder":
		value := x.Builder
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreCodeProposal.code_hash":
		value := x.CodeHash
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreCodeProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreCodeProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreCodeProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreCodeProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.StoreCodeProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.StoreCodeProposal.run_as":
		x.RunAs = value.Interface().(string)
	case "junction.wasm.v1.StoreCodeProposal.wasm_byte_code":
		x.WasmByteCode = value.Bytes()
	case "junction.wasm.v1.StoreCodeProposal.instantiate_permission":
		x.InstantiatePermission = value.Message().Interface().(*AccessConfig)
	case "junction.wasm.v1.StoreCodeProposal.unpin_code":
		x.UnpinCode = value.Bool()
	case "junction.wasm.v1.StoreCodeProposal.source":
		x.Source = value.Interface().(string)
	case "junction.wasm.v1.StoreCodeProposal.builder":
		x.Builder = value.Interface().(string)
	case "junction.wasm.v1.StoreCodeProposal.code_hash":
		x.CodeHash = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreCodeProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreCodeProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreCodeProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreCodeProposal.instantiate_permission":
		if x.InstantiatePermission == nil {
			x.InstantiatePermission = new(AccessConfig)
		}
		return protoreflect.ValueOfMessage(x.InstantiatePermission.ProtoReflect())
	case "junction.wasm.v1.StoreCodeProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.StoreCodeProposal is not mutable"))
	case "junction.wasm.v1.StoreCodeProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.StoreCodeProposal is not mutable"))
	case "junction.wasm.v1.StoreCodeProposal.run_as":
		panic(fmt.Errorf("field run_as of message junction.wasm.v1.StoreCodeProposal is not mutable"))
	case "junction.wasm.v1.StoreCodeProposal.wasm_byte_code":
		panic(fmt.Errorf("field wasm_byte_code of message junction.wasm.v1.StoreCodeProposal is not mutable"))
	case "junction.wasm.v1.StoreCodeProposal.unpin_code":
		panic(fmt.Errorf("field unpin_code of message junction.wasm.v1.StoreCodeProposal is not mutable"))
	case "junction.wasm.v1.StoreCodeProposal.source":
		panic(fmt.Errorf("field source of message junction.wasm.v1.StoreCodeProposal is not mutable"))
	case "junction.wasm.v1.StoreCodeProposal.builder":
		panic(fmt.Errorf("field builder of message junction.wasm.v1.StoreCodeProposal is not mutable"))
	case "junction.wasm.v1.StoreCodeProposal.code_hash":
		panic(fmt.Errorf("field code_hash of message junction.wasm.v1.StoreCodeProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreCodeProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreCodeProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_StoreCodeProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreCodeProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreCodeProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreCodeProposal.run_as":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreCodeProposal.wasm_byte_code":
		return protoreflect.ValueOfBytes(nil)
	case "junction.wasm.v1.StoreCodeProposal.instantiate_permission":
		m := new(AccessConfig)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "junction.wasm.v1.StoreCodeProposal.unpin_code":
		return protoreflect.ValueOfBool(false)
	case "junction.wasm.v1.StoreCodeProposal.source":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreCodeProposal.builder":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreCodeProposal.code_hash":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreCodeProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreCodeProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_StoreCodeProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.StoreCodeProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_StoreCodeProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreCodeProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_StoreCodeProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_StoreCodeProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*StoreCodeProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RunAs)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.WasmByteCode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InstantiatePermission != nil {
			l = options.Size(x.InstantiatePermission)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UnpinCode {
			n += 2
		}
		l = len(x.Source)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Builder)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CodeHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*StoreCodeProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CodeHash) > 0 {
			i -= len(x.CodeHash)
			copy(dAtA[i:], x.CodeHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CodeHash)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Builder) > 0 {
			i -= len(x.Builder)
			copy(dAtA[i:], x.Builder)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Builder)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Source) > 0 {
			i -= len(x.Source)
			copy(dAtA[i:], x.Source)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Source)))
			i--
			dAtA[i] = 0x4a
		}
		if x.UnpinCode {
			i--
			if x.UnpinCode {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if x.InstantiatePermission != nil {
			encoded, err := options.Marshal(x.InstantiatePermission)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.WasmByteCode) > 0 {
			i -= len(x.WasmByteCode)
			copy(dAtA[i:], x.WasmByteCode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WasmByteCode)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.RunAs) > 0 {
			i -= len(x.RunAs)
			copy(dAtA[i:], x.RunAs)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RunAs)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*StoreCodeProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StoreCodeProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StoreCodeProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RunAs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RunAs = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WasmByteCode", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WasmByteCode = append(x.WasmByteCode[:0], dAtA[iNdEx:postIndex]...)
				if x.WasmByteCode == nil {
					x.WasmByteCode = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InstantiatePermission", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.InstantiatePermission == nil {
					x.InstantiatePermission = &AccessConfig{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InstantiatePermission); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnpinCode", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UnpinCode = bool(v != 0)
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Source = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Builder", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Builder = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CodeHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CodeHash = append(x.CodeHash[:0], dAtA[iNdEx:postIndex]...)
				if x.CodeHash == nil {
					x.CodeHash = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_InstantiateContractProposal_8_list)(nil)

type _InstantiateContractProposal_8_list struct {
	list *[]*v1beta1.Coin
}

func (x *_InstantiateContractProposal_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_InstantiateContractProposal_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_InstantiateContractProposal_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_InstantiateContractProposal_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_InstantiateContractProposal_8_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_InstantiateContractProposal_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_InstantiateContractProposal_8_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_InstantiateContractProposal_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_InstantiateContractProposal             protoreflect.MessageDescriptor
	fd_InstantiateContractProposal_title       protoreflect.FieldDescriptor
	fd_InstantiateContractProposal_description protoreflect.FieldDescriptor
	fd_InstantiateContractProposal_run_as      protoreflect.FieldDescriptor
	fd_InstantiateContractProposal_admin       protoreflect.FieldDescriptor
	fd_InstantiateContractProposal_code_id     protoreflect.FieldDescriptor
	fd_InstantiateContractProposal_label       protoreflect.FieldDescriptor
	fd_InstantiateContractProposal_msg         protoreflect.FieldDescriptor
	fd_InstantiateContractProposal_funds       protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_InstantiateContractProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("InstantiateContractProposal")
	fd_InstantiateContractProposal_title = md_InstantiateContractProposal.Fields().ByName("title")
	fd_InstantiateContractProposal_description = md_InstantiateContractProposal.Fields().ByName("description")
	fd_InstantiateContractProposal_run_as = md_InstantiateContractProposal.Fields().ByName("run_as")
	fd_InstantiateContractProposal_admin = md_InstantiateContractProposal.Fields().ByName("admin")
	fd_InstantiateContractProposal_code_id = md_InstantiateContractProposal.Fields().ByName("code_id")
	fd_InstantiateContractProposal_label = md_InstantiateContractProposal.Fields().ByName("label")
	fd_InstantiateContractProposal_msg = md_InstantiateContractProposal.Fields().ByName("msg")
	fd_InstantiateContractProposal_funds = md_InstantiateContractProposal.Fields().ByName("funds")
}

var _ protoreflect.Message = (*fastReflection_InstantiateContractProposal)(nil)

type fastReflection_InstantiateContractProposal InstantiateContractProposal

func (x *InstantiateContractProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InstantiateContractProposal)(x)
}

func (x *InstantiateContractProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InstantiateContractProposal_messageType fastReflection_InstantiateContractProposal_messageType
var _ protoreflect.MessageType = fastReflection_InstantiateContractProposal_messageType{}

type fastReflection_InstantiateContractProposal_messageType struct{}

func (x fastReflection_InstantiateContractProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InstantiateContractProposal)(nil)
}
func (x fastReflection_InstantiateContractProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_InstantiateContractProposal)
}
func (x fastReflection_InstantiateContractProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InstantiateContractProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InstantiateContractProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_InstantiateContractProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InstantiateContractProposal) Type() protoreflect.MessageType {
	return _fastReflection_InstantiateContractProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InstantiateContractProposal) New() protoreflect.Message {
	return new(fastReflection_InstantiateContractProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InstantiateContractProposal) Interface() protoreflect.ProtoMessage {
	return (*InstantiateContractProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InstantiateContractProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_InstantiateContractProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_InstantiateContractProposal_description, value) {
			return
		}
	}
	if x.RunAs != "" {
		value := protoreflect.ValueOfString(x.RunAs)
		if !f(fd_InstantiateContractProposal_run_as, value) {
			return
		}
	}
	if x.Admin != "" {
		value := protoreflect.ValueOfString(x.Admin)
		if !f(fd_InstantiateContractProposal_admin, value) {
			return
		}
	}
	if x.CodeId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CodeId)
		if !f(fd_InstantiateContractProposal_code_id, value) {
			return
		}
	}
	if x.Label != "" {
		value := protoreflect.ValueOfString(x.Label)
		if !f(fd_InstantiateContractProposal_label, value) {
			return
		}
	}
	if len(x.Msg) != 0 {
		value := protoreflect.ValueOfBytes(x.Msg)
		if !f(fd_InstantiateContractProposal_msg, value) {
			return
		}
	}
	if len(x.Funds) != 0 {
		value := protoreflect.ValueOfList(&_InstantiateContractProposal_8_list{list: &x.Funds})
		if !f(fd_InstantiateContractProposal_funds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InstantiateContractProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContractProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.InstantiateContractProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.InstantiateContractProposal.run_as":
		return x.RunAs != ""
	case "junction.wasm.v1.InstantiateContractProposal.admin":
		return x.Admin != ""
	case "junction.wasm.v1.InstantiateContractProposal.code_id":
		return x.CodeId != uint64(0)
	case "junction.wasm.v1.InstantiateContractProposal.label":
		return x.Label != ""
	case "junction.wasm.v1.InstantiateContractProposal.msg":
		return len(x.Msg) != 0
	case "junction.wasm.v1.InstantiateContractProposal.funds":
		return len(x.Funds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InstantiateContractProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContractProposal.title":
		x.Title = ""
	case "junction.wasm.v1.InstantiateContractProposal.description":
		x.Description = ""
	case "junction.wasm.v1.InstantiateContractProposal.run_as":
		x.RunAs = ""
	case "junction.wasm.v1.InstantiateContractProposal.admin":
		x.Admin = ""
	case "junction.wasm.v1.InstantiateContractProposal.code_id":
		x.CodeId = uint64(0)
	case "junction.wasm.v1.InstantiateContractProposal.label":
		x.Label = ""
	case "junction.wasm.v1.InstantiateContractProposal.msg":
		x.Msg = nil
	case "junction.wasm.v1.InstantiateContractProposal.funds":
		x.Funds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InstantiateContractProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.InstantiateContractProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContractProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContractProposal.run_as":
		value := x.RunAs
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContractProposal.admin":
		value := x.Admin
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContractProposal.code_id":
		value := x.CodeId
		return protoreflect.ValueOfUint64(value)
	case "junction.wasm.v1.InstantiateContractProposal.label":
		value := x.Label
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContractProposal.msg":
		value := x.Msg
		return protoreflect.ValueOfBytes(value)
	case "junction.wasm.v1.InstantiateContractProposal.funds":
		if len(x.Funds) == 0 {
			return protoreflect.ValueOfList(&_InstantiateContractProposal_8_list{})
		}
		listValue := &_InstantiateContractProposal_8_list{list: &x.Funds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContractProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InstantiateContractProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContractProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContractProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContractProposal.run_as":
		x.RunAs = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContractProposal.admin":
		x.Admin = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContractProposal.code_id":
		x.CodeId = value.Uint()
	case "junction.wasm.v1.InstantiateContractProposal.label":
		x.Label = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContractProposal.msg":
		x.Msg = value.Bytes()
	case "junction.wasm.v1.InstantiateContractProposal.funds":
		lv := value.List()
		clv := lv.(*_InstantiateContractProposal_8_list)
		x.Funds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InstantiateContractProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContractProposal.funds":
		if x.Funds == nil {
			x.Funds = []*v1beta1.Coin{}
		}
		value := &_InstantiateContractProposal_8_list{list: &x.Funds}
		return protoreflect.ValueOfList(value)
	case "junction.wasm.v1.InstantiateContractProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.InstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.InstantiateContractProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.InstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.InstantiateContractProposal.run_as":
		panic(fmt.Errorf("field run_as of message junction.wasm.v1.InstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.InstantiateContractProposal.admin":
		panic(fmt.Errorf("field admin of message junction.wasm.v1.InstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.InstantiateContractProposal.code_id":
		panic(fmt.Errorf("field code_id of message junction.wasm.v1.InstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.InstantiateContractProposal.label":
		panic(fmt.Errorf("field label of message junction.wasm.v1.InstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.InstantiateContractProposal.msg":
		panic(fmt.Errorf("field msg of message junction.wasm.v1.InstantiateContractProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InstantiateContractProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContractProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContractProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContractProposal.run_as":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContractProposal.admin":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContractProposal.code_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "junction.wasm.v1.InstantiateContractProposal.label":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContractProposal.msg":
		return protoreflect.ValueOfBytes(nil)
	case "junction.wasm.v1.InstantiateContractProposal.funds":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_InstantiateContractProposal_8_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InstantiateContractProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.InstantiateContractProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InstantiateContractProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InstantiateContractProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InstantiateContractProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InstantiateContractProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InstantiateContractProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RunAs)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Admin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CodeId != 0 {
			n += 1 + runtime.Sov(uint64(x.CodeId))
		}
		l = len(x.Label)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Msg)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Funds) > 0 {
			for _, e := range x.Funds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InstantiateContractProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Funds) > 0 {
			for iNdEx := len(x.Funds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Funds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.Msg) > 0 {
			i -= len(x.Msg)
			copy(dAtA[i:], x.Msg)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Msg)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Label) > 0 {
			i -= len(x.Label)
			copy(dAtA[i:], x.Label)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Label)))
			i--
			dAtA[i] = 0x32
		}
		if x.CodeId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CodeId))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Admin) > 0 {
			i -= len(x.Admin)
			copy(dAtA[i:], x.Admin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Admin)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.RunAs) > 0 {
			i -= len(x.RunAs)
			copy(dAtA[i:], x.RunAs)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RunAs)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InstantiateContractProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InstantiateContractProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InstantiateContractProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RunAs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RunAs = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Admin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CodeId", wireType)
				}
				x.CodeId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CodeId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Label = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Msg = append(x.Msg[:0], dAtA[iNdEx:postIndex]...)
				if x.Msg == nil {
					x.Msg = []byte{}
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Funds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Funds = append(x.Funds, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Funds[len(x.Funds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_InstantiateContract2Proposal_8_list)(nil)

type _InstantiateContract2Proposal_8_list struct {
	list *[]*v1beta1.Coin
}

func (x *_InstantiateContract2Proposal_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_InstantiateContract2Proposal_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_InstantiateContract2Proposal_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_InstantiateContract2Proposal_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_InstantiateContract2Proposal_8_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_InstantiateContract2Proposal_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_InstantiateContract2Proposal_8_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_InstantiateContract2Proposal_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_InstantiateContract2Proposal             protoreflect.MessageDescriptor
	fd_InstantiateContract2Proposal_title       protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_description protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_run_as      protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_admin       protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_code_id     protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_label       protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_msg         protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_funds       protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_salt        protoreflect.FieldDescriptor
	fd_InstantiateContract2Proposal_fix_msg     protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_InstantiateContract2Proposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("InstantiateContract2Proposal")
	fd_InstantiateContract2Proposal_title = md_InstantiateContract2Proposal.Fields().ByName("title")
	fd_InstantiateContract2Proposal_description = md_InstantiateContract2Proposal.Fields().ByName("description")
	fd_InstantiateContract2Proposal_run_as = md_InstantiateContract2Proposal.Fields().ByName("run_as")
	fd_InstantiateContract2Proposal_admin = md_InstantiateContract2Proposal.Fields().ByName("admin")
	fd_InstantiateContract2Proposal_code_id = md_InstantiateContract2Proposal.Fields().ByName("code_id")
	fd_InstantiateContract2Proposal_label = md_InstantiateContract2Proposal.Fields().ByName("label")
	fd_InstantiateContract2Proposal_msg = md_InstantiateContract2Proposal.Fields().ByName("msg")
	fd_InstantiateContract2Proposal_funds = md_InstantiateContract2Proposal.Fields().ByName("funds")
	fd_InstantiateContract2Proposal_salt = md_InstantiateContract2Proposal.Fields().ByName("salt")
	fd_InstantiateContract2Proposal_fix_msg = md_InstantiateContract2Proposal.Fields().ByName("fix_msg")
}

var _ protoreflect.Message = (*fastReflection_InstantiateContract2Proposal)(nil)

type fastReflection_InstantiateContract2Proposal InstantiateContract2Proposal

func (x *InstantiateContract2Proposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InstantiateContract2Proposal)(x)
}

func (x *InstantiateContract2Proposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InstantiateContract2Proposal_messageType fastReflection_InstantiateContract2Proposal_messageType
var _ protoreflect.MessageType = fastReflection_InstantiateContract2Proposal_messageType{}

type fastReflection_InstantiateContract2Proposal_messageType struct{}

func (x fastReflection_InstantiateContract2Proposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InstantiateContract2Proposal)(nil)
}
func (x fastReflection_InstantiateContract2Proposal_messageType) New() protoreflect.Message {
	return new(fastReflection_InstantiateContract2Proposal)
}
func (x fastReflection_InstantiateContract2Proposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InstantiateContract2Proposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InstantiateContract2Proposal) Descriptor() protoreflect.MessageDescriptor {
	return md_InstantiateContract2Proposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InstantiateContract2Proposal) Type() protoreflect.MessageType {
	return _fastReflection_InstantiateContract2Proposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InstantiateContract2Proposal) New() protoreflect.Message {
	return new(fastReflection_InstantiateContract2Proposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InstantiateContract2Proposal) Interface() protoreflect.ProtoMessage {
	return (*InstantiateContract2Proposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InstantiateContract2Proposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_InstantiateContract2Proposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_InstantiateContract2Proposal_description, value) {
			return
		}
	}
	if x.RunAs != "" {
		value := protoreflect.ValueOfString(x.RunAs)
		if !f(fd_InstantiateContract2Proposal_run_as, value) {
			return
		}
	}
	if x.Admin != "" {
		value := protoreflect.ValueOfString(x.Admin)
		if !f(fd_InstantiateContract2Proposal_admin, value) {
			return
		}
	}
	if x.CodeId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CodeId)
		if !f(fd_InstantiateContract2Proposal_code_id, value) {
			return
		}
	}
	if x.Label != "" {
		value := protoreflect.ValueOfString(x.Label)
		if !f(fd_InstantiateContract2Proposal_label, value) {
			return
		}
	}
	if len(x.Msg) != 0 {
		value := protoreflect.ValueOfBytes(x.Msg)
		if !f(fd_InstantiateContract2Proposal_msg, value) {
			return
		}
	}
	if len(x.Funds) != 0 {
		value := protoreflect.ValueOfList(&_InstantiateContract2Proposal_8_list{list: &x.Funds})
		if !f(fd_InstantiateContract2Proposal_funds, value) {
			return
		}
	}
	if len(x.Salt) != 0 {
		value := protoreflect.ValueOfBytes(x.Salt)
		if !f(fd_InstantiateContract2Proposal_salt, value) {
			return
		}
	}
	if x.FixMsg != false {
		value := protoreflect.ValueOfBool(x.FixMsg)
		if !f(fd_InstantiateContract2Proposal_fix_msg, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InstantiateContract2Proposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContract2Proposal.title":
		return x.Title != ""
	case "junction.wasm.v1.InstantiateContract2Proposal.description":
		return x.Description != ""
	case "junction.wasm.v1.InstantiateContract2Proposal.run_as":
		return x.RunAs != ""
	case "junction.wasm.v1.InstantiateContract2Proposal.admin":
		return x.Admin != ""
	case "junction.wasm.v1.InstantiateContract2Proposal.code_id":
		return x.CodeId != uint64(0)
	case "junction.wasm.v1.InstantiateContract2Proposal.label":
		return x.Label != ""
	case "junction.wasm.v1.InstantiateContract2Proposal.msg":
		return len(x.Msg) != 0
	case "junction.wasm.v1.InstantiateContract2Proposal.funds":
		return len(x.Funds) != 0
	case "junction.wasm.v1.InstantiateContract2Proposal.salt":
		return len(x.Salt) != 0
	case "junction.wasm.v1.InstantiateContract2Proposal.fix_msg":
		return x.FixMsg != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContract2Proposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContract2Proposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InstantiateContract2Proposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContract2Proposal.title":
		x.Title = ""
	case "junction.wasm.v1.InstantiateContract2Proposal.description":
		x.Description = ""
	case "junction.wasm.v1.InstantiateContract2Proposal.run_as":
		x.RunAs = ""
	case "junction.wasm.v1.InstantiateContract2Proposal.admin":
		x.Admin = ""
	case "junction.wasm.v1.InstantiateContract2Proposal.code_id":
		x.CodeId = uint64(0)
	case "junction.wasm.v1.InstantiateContract2Proposal.label":
		x.Label = ""
	case "junction.wasm.v1.InstantiateContract2Proposal.msg":
		x.Msg = nil
	case "junction.wasm.v1.InstantiateContract2Proposal.funds":
		x.Funds = nil
	case "junction.wasm.v1.InstantiateContract2Proposal.salt":
		x.Salt = nil
	case "junction.wasm.v1.InstantiateContract2Proposal.fix_msg":
		x.FixMsg = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContract2Proposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContract2Proposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InstantiateContract2Proposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.InstantiateContract2Proposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.run_as":
		value := x.RunAs
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.admin":
		value := x.Admin
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.code_id":
		value := x.CodeId
		return protoreflect.ValueOfUint64(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.label":
		value := x.Label
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.msg":
		value := x.Msg
		return protoreflect.ValueOfBytes(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.funds":
		if len(x.Funds) == 0 {
			return protoreflect.ValueOfList(&_InstantiateContract2Proposal_8_list{})
		}
		listValue := &_InstantiateContract2Proposal_8_list{list: &x.Funds}
		return protoreflect.ValueOfList(listValue)
	case "junction.wasm.v1.InstantiateContract2Proposal.salt":
		value := x.Salt
		return protoreflect.ValueOfBytes(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.fix_msg":
		value := x.FixMsg
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContract2Proposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContract2Proposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InstantiateContract2Proposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContract2Proposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContract2Proposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContract2Proposal.run_as":
		x.RunAs = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContract2Proposal.admin":
		x.Admin = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContract2Proposal.code_id":
		x.CodeId = value.Uint()
	case "junction.wasm.v1.InstantiateContract2Proposal.label":
		x.Label = value.Interface().(string)
	case "junction.wasm.v1.InstantiateContract2Proposal.msg":
		x.Msg = value.Bytes()
	case "junction.wasm.v1.InstantiateContract2Proposal.funds":
		lv := value.List()
		clv := lv.(*_InstantiateContract2Proposal_8_list)
		x.Funds = *clv.list
	case "junction.wasm.v1.InstantiateContract2Proposal.salt":
		x.Salt = value.Bytes()
	case "junction.wasm.v1.InstantiateContract2Proposal.fix_msg":
		x.FixMsg = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContract2Proposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContract2Proposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InstantiateContract2Proposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContract2Proposal.funds":
		if x.Funds == nil {
			x.Funds = []*v1beta1.Coin{}
		}
		value := &_InstantiateContract2Proposal_8_list{list: &x.Funds}
		return protoreflect.ValueOfList(value)
	case "junction.wasm.v1.InstantiateContract2Proposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	case "junction.wasm.v1.InstantiateContract2Proposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	case "junction.wasm.v1.InstantiateContract2Proposal.run_as":
		panic(fmt.Errorf("field run_as of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	case "junction.wasm.v1.InstantiateContract2Proposal.admin":
		panic(fmt.Errorf("field admin of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	case "junction.wasm.v1.InstantiateContract2Proposal.code_id":
		panic(fmt.Errorf("field code_id of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	case "junction.wasm.v1.InstantiateContract2Proposal.label":
		panic(fmt.Errorf("field label of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	case "junction.wasm.v1.InstantiateContract2Proposal.msg":
		panic(fmt.Errorf("field msg of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	case "junction.wasm.v1.InstantiateContract2Proposal.salt":
		panic(fmt.Errorf("field salt of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	case "junction.wasm.v1.InstantiateContract2Proposal.fix_msg":
		panic(fmt.Errorf("field fix_msg of message junction.wasm.v1.InstantiateContract2Proposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContract2Proposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContract2Proposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InstantiateContract2Proposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.InstantiateContract2Proposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContract2Proposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContract2Proposal.run_as":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContract2Proposal.admin":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContract2Proposal.code_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "junction.wasm.v1.InstantiateContract2Proposal.label":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.InstantiateContract2Proposal.msg":
		return protoreflect.ValueOfBytes(nil)
	case "junction.wasm.v1.InstantiateContract2Proposal.funds":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_InstantiateContract2Proposal_8_list{list: &list})
	case "junction.wasm.v1.InstantiateContract2Proposal.salt":
		return protoreflect.ValueOfBytes(nil)
	case "junction.wasm.v1.InstantiateContract2Proposal.fix_msg":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.InstantiateContract2Proposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.InstantiateContract2Proposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InstantiateContract2Proposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.InstantiateContract2Proposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InstantiateContract2Proposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InstantiateContract2Proposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InstantiateContract2Proposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InstantiateContract2Proposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InstantiateContract2Proposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RunAs)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Admin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CodeId != 0 {
			n += 1 + runtime.Sov(uint64(x.CodeId))
		}
		l = len(x.Label)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Msg)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Funds) > 0 {
			for _, e := range x.Funds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Salt)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.FixMsg {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InstantiateContract2Proposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.FixMsg {
			i--
			if x.FixMsg {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x50
		}
		if len(x.Salt) > 0 {
			i -= len(x.Salt)
			copy(dAtA[i:], x.Salt)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Salt)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.Funds) > 0 {
			for iNdEx := len(x.Funds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Funds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.Msg) > 0 {
			i -= len(x.Msg)
			copy(dAtA[i:], x.Msg)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Msg)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Label) > 0 {
			i -= len(x.Label)
			copy(dAtA[i:], x.Label)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Label)))
			i--
			dAtA[i] = 0x32
		}
		if x.CodeId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CodeId))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Admin) > 0 {
			i -= len(x.Admin)
			copy(dAtA[i:], x.Admin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Admin)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.RunAs) > 0 {
			i -= len(x.RunAs)
			copy(dAtA[i:], x.RunAs)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RunAs)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InstantiateContract2Proposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InstantiateContract2Proposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InstantiateContract2Proposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RunAs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RunAs = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Admin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CodeId", wireType)
				}
				x.CodeId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CodeId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Label = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Msg = append(x.Msg[:0], dAtA[iNdEx:postIndex]...)
				if x.Msg == nil {
					x.Msg = []byte{}
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Funds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Funds = append(x.Funds, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Funds[len(x.Funds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Salt", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Salt = append(x.Salt[:0], dAtA[iNdEx:postIndex]...)
				if x.Salt == nil {
					x.Salt = []byte{}
				}
				iNdEx = postIndex
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FixMsg", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.FixMsg = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MigrateContractProposal             protoreflect.MessageDescriptor
	fd_MigrateContractProposal_title       protoreflect.FieldDescriptor
	fd_MigrateContractProposal_description protoreflect.FieldDescriptor
	fd_MigrateContractProposal_contract    protoreflect.FieldDescriptor
	fd_MigrateContractProposal_code_id     protoreflect.FieldDescriptor
	fd_MigrateContractProposal_msg         protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_MigrateContractProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("MigrateContractProposal")
	fd_MigrateContractProposal_title = md_MigrateContractProposal.Fields().ByName("title")
	fd_MigrateContractProposal_description = md_MigrateContractProposal.Fields().ByName("description")
	fd_MigrateContractProposal_contract = md_MigrateContractProposal.Fields().ByName("contract")
	fd_MigrateContractProposal_code_id = md_MigrateContractProposal.Fields().ByName("code_id")
	fd_MigrateContractProposal_msg = md_MigrateContractProposal.Fields().ByName("msg")
}

var _ protoreflect.Message = (*fastReflection_MigrateContractProposal)(nil)

type fastReflection_MigrateContractProposal MigrateContractProposal

func (x *MigrateContractProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MigrateContractProposal)(x)
}

func (x *MigrateContractProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MigrateContractProposal_messageType fastReflection_MigrateContractProposal_messageType
var _ protoreflect.MessageType = fastReflection_MigrateContractProposal_messageType{}

type fastReflection_MigrateContractProposal_messageType struct{}

func (x fastReflection_MigrateContractProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MigrateContractProposal)(nil)
}
func (x fastReflection_MigrateContractProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_MigrateContractProposal)
}
func (x fastReflection_MigrateContractProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MigrateContractProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MigrateContractProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_MigrateContractProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MigrateContractProposal) Type() protoreflect.MessageType {
	return _fastReflection_MigrateContractProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MigrateContractProposal) New() protoreflect.Message {
	return new(fastReflection_MigrateContractProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MigrateContractProposal) Interface() protoreflect.ProtoMessage {
	return (*MigrateContractProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MigrateContractProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MigrateContractProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MigrateContractProposal_description, value) {
			return
		}
	}
	if x.Contract != "" {
		value := protoreflect.ValueOfString(x.Contract)
		if !f(fd_MigrateContractProposal_contract, value) {
			return
		}
	}
	if x.CodeId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CodeId)
		if !f(fd_MigrateContractProposal_code_id, value) {
			return
		}
	}
	if len(x.Msg) != 0 {
		value := protoreflect.ValueOfBytes(x.Msg)
		if !f(fd_MigrateContractProposal_msg, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MigrateContractProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.MigrateContractProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.MigrateContractProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.MigrateContractProposal.contract":
		return x.Contract != ""
	case "junction.wasm.v1.MigrateContractProposal.code_id":
		return x.CodeId != uint64(0)
	case "junction.wasm.v1.MigrateContractProposal.msg":
		return len(x.Msg) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.MigrateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.MigrateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MigrateContractProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.MigrateContractProposal.title":
		x.Title = ""
	case "junction.wasm.v1.MigrateContractProposal.description":
		x.Description = ""
	case "junction.wasm.v1.MigrateContractProposal.contract":
		x.Contract = ""
	case "junction.wasm.v1.MigrateContractProposal.code_id":
		x.CodeId = uint64(0)
	case "junction.wasm.v1.MigrateContractProposal.msg":
		x.Msg = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.MigrateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.MigrateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MigrateContractProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.MigrateContractProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.MigrateContractProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.MigrateContractProposal.contract":
		value := x.Contract
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.MigrateContractProposal.code_id":
		value := x.CodeId
		return protoreflect.ValueOfUint64(value)
	case "junction.wasm.v1.MigrateContractProposal.msg":
		value := x.Msg
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.MigrateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.MigrateContractProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MigrateContractProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.MigrateContractProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.MigrateContractProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.MigrateContractProposal.contract":
		x.Contract = value.Interface().(string)
	case "junction.wasm.v1.MigrateContractProposal.code_id":
		x.CodeId = value.Uint()
	case "junction.wasm.v1.MigrateContractProposal.msg":
		x.Msg = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.MigrateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.MigrateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MigrateContractProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.MigrateContractProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.MigrateContractProposal is not mutable"))
	case "junction.wasm.v1.MigrateContractProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.MigrateContractProposal is not mutable"))
	case "junction.wasm.v1.MigrateContractProposal.contract":
		panic(fmt.Errorf("field contract of message junction.wasm.v1.MigrateContractProposal is not mutable"))
	case "junction.wasm.v1.MigrateContractProposal.code_id":
		panic(fmt.Errorf("field code_id of message junction.wasm.v1.MigrateContractProposal is not mutable"))
	case "junction.wasm.v1.MigrateContractProposal.msg":
		panic(fmt.Errorf("field msg of message junction.wasm.v1.MigrateContractProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.MigrateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.MigrateContractProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MigrateContractProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.MigrateContractProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.MigrateContractProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.MigrateContractProposal.contract":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.MigrateContractProposal.code_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "junction.wasm.v1.MigrateContractProposal.msg":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.MigrateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.MigrateContractProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MigrateContractProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.MigrateContractProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MigrateContractProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MigrateContractProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MigrateContractProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MigrateContractProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MigrateContractProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Contract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CodeId != 0 {
			n += 1 + runtime.Sov(uint64(x.CodeId))
		}
		l = len(x.Msg)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MigrateContractProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Msg) > 0 {
			i -= len(x.Msg)
			copy(dAtA[i:], x.Msg)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Msg)))
			i--
			dAtA[i] = 0x32
		}
		if x.CodeId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CodeId))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Contract) > 0 {
			i -= len(x.Contract)
			copy(dAtA[i:], x.Contract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Contract)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MigrateContractProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MigrateContractProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MigrateContractProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Contract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CodeId", wireType)
				}
				x.CodeId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CodeId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Msg = append(x.Msg[:0], dAtA[iNdEx:postIndex]...)
				if x.Msg == nil {
					x.Msg = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SudoContractProposal             protoreflect.MessageDescriptor
	fd_SudoContractProposal_title       protoreflect.FieldDescriptor
	fd_SudoContractProposal_description protoreflect.FieldDescriptor
	fd_SudoContractProposal_contract    protoreflect.FieldDescriptor
	fd_SudoContractProposal_msg         protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_SudoContractProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("SudoContractProposal")
	fd_SudoContractProposal_title = md_SudoContractProposal.Fields().ByName("title")
	fd_SudoContractProposal_description = md_SudoContractProposal.Fields().ByName("description")
	fd_SudoContractProposal_contract = md_SudoContractProposal.Fields().ByName("contract")
	fd_SudoContractProposal_msg = md_SudoContractProposal.Fields().ByName("msg")
}

var _ protoreflect.Message = (*fastReflection_SudoContractProposal)(nil)

type fastReflection_SudoContractProposal SudoContractProposal

func (x *SudoContractProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SudoContractProposal)(x)
}

func (x *SudoContractProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SudoContractProposal_messageType fastReflection_SudoContractProposal_messageType
var _ protoreflect.MessageType = fastReflection_SudoContractProposal_messageType{}

type fastReflection_SudoContractProposal_messageType struct{}

func (x fastReflection_SudoContractProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SudoContractProposal)(nil)
}
func (x fastReflection_SudoContractProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_SudoContractProposal)
}
func (x fastReflection_SudoContractProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SudoContractProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SudoContractProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_SudoContractProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SudoContractProposal) Type() protoreflect.MessageType {
	return _fastReflection_SudoContractProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SudoContractProposal) New() protoreflect.Message {
	return new(fastReflection_SudoContractProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SudoContractProposal) Interface() protoreflect.ProtoMessage {
	return (*SudoContractProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SudoContractProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_SudoContractProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_SudoContractProposal_description, value) {
			return
		}
	}
	if x.Contract != "" {
		value := protoreflect.ValueOfString(x.Contract)
		if !f(fd_SudoContractProposal_contract, value) {
			return
		}
	}
	if len(x.Msg) != 0 {
		value := protoreflect.ValueOfBytes(x.Msg)
		if !f(fd_SudoContractProposal_msg, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SudoContractProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.SudoContractProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.SudoContractProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.SudoContractProposal.contract":
		return x.Contract != ""
	case "junction.wasm.v1.SudoContractProposal.msg":
		return len(x.Msg) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.SudoContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.SudoContractProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SudoContractProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.SudoContractProposal.title":
		x.Title = ""
	case "junction.wasm.v1.SudoContractProposal.description":
		x.Description = ""
	case "junction.wasm.v1.SudoContractProposal.contract":
		x.Contract = ""
	case "junction.wasm.v1.SudoContractProposal.msg":
		x.Msg = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.SudoContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.SudoContractProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SudoContractProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.SudoContractProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.SudoContractProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.SudoContractProposal.contract":
		value := x.Contract
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.SudoContractProposal.msg":
		value := x.Msg
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.SudoContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.SudoContractProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SudoContractProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.SudoContractProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.SudoContractProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.SudoContractProposal.contract":
		x.Contract = value.Interface().(string)
	case "junction.wasm.v1.SudoContractProposal.msg":
		x.Msg = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.SudoContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.SudoContractProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SudoContractProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.SudoContractProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.SudoContractProposal is not mutable"))
	case "junction.wasm.v1.SudoContractProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.SudoContractProposal is not mutable"))
	case "junction.wasm.v1.SudoContractProposal.contract":
		panic(fmt.Errorf("field contract of message junction.wasm.v1.SudoContractProposal is not mutable"))
	case "junction.wasm.v1.SudoContractProposal.msg":
		panic(fmt.Errorf("field msg of message junction.wasm.v1.SudoContractProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.SudoContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.SudoContractProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SudoContractProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.SudoContractProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.SudoContractProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.SudoContractProposal.contract":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.SudoContractProposal.msg":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.SudoContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.SudoContractProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SudoContractProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.SudoContractProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SudoContractProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SudoContractProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SudoContractProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SudoContractProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SudoContractProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Contract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Msg)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SudoContractProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Msg) > 0 {
			i -= len(x.Msg)
			copy(dAtA[i:], x.Msg)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Msg)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Contract) > 0 {
			i -= len(x.Contract)
			copy(dAtA[i:], x.Contract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Contract)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SudoContractProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SudoContractProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SudoContractProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Contract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Msg = append(x.Msg[:0], dAtA[iNdEx:postIndex]...)
				if x.Msg == nil {
					x.Msg = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ExecuteContractProposal_6_list)(nil)

type _ExecuteContractProposal_6_list struct {
	list *[]*v1beta1.Coin
}

func (x *_ExecuteContractProposal_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ExecuteContractProposal_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ExecuteContractProposal_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_ExecuteContractProposal_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ExecuteContractProposal_6_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecuteContractProposal_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ExecuteContractProposal_6_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecuteContractProposal_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ExecuteContractProposal             protoreflect.MessageDescriptor
	fd_ExecuteContractProposal_title       protoreflect.FieldDescriptor
	fd_ExecuteContractProposal_description protoreflect.FieldDescriptor
	fd_ExecuteContractProposal_run_as      protoreflect.FieldDescriptor
	fd_ExecuteContractProposal_contract    protoreflect.FieldDescriptor
	fd_ExecuteContractProposal_msg         protoreflect.FieldDescriptor
	fd_ExecuteContractProposal_funds       protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_ExecuteContractProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("ExecuteContractProposal")
	fd_ExecuteContractProposal_title = md_ExecuteContractProposal.Fields().ByName("title")
	fd_ExecuteContractProposal_description = md_ExecuteContractProposal.Fields().ByName("description")
	fd_ExecuteContractProposal_run_as = md_ExecuteContractProposal.Fields().ByName("run_as")
	fd_ExecuteContractProposal_contract = md_ExecuteContractProposal.Fields().ByName("contract")
	fd_ExecuteContractProposal_msg = md_ExecuteContractProposal.Fields().ByName("msg")
	fd_ExecuteContractProposal_funds = md_ExecuteContractProposal.Fields().ByName("funds")
}

var _ protoreflect.Message = (*fastReflection_ExecuteContractProposal)(nil)

type fastReflection_ExecuteContractProposal ExecuteContractProposal

func (x *ExecuteContractProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ExecuteContractProposal)(x)
}

func (x *ExecuteContractProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ExecuteContractProposal_messageType fastReflection_ExecuteContractProposal_messageType
var _ protoreflect.MessageType = fastReflection_ExecuteContractProposal_messageType{}

type fastReflection_ExecuteContractProposal_messageType struct{}

func (x fastReflection_ExecuteContractProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ExecuteContractProposal)(nil)
}
func (x fastReflection_ExecuteContractProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_ExecuteContractProposal)
}
func (x fastReflection_ExecuteContractProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ExecuteContractProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ExecuteContractProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_ExecuteContractProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ExecuteContractProposal) Type() protoreflect.MessageType {
	return _fastReflection_ExecuteContractProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ExecuteContractProposal) New() protoreflect.Message {
	return new(fastReflection_ExecuteContractProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ExecuteContractProposal) Interface() protoreflect.ProtoMessage {
	return (*ExecuteContractProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ExecuteContractProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_ExecuteContractProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_ExecuteContractProposal_description, value) {
			return
		}
	}
	if x.RunAs != "" {
		value := protoreflect.ValueOfString(x.RunAs)
		if !f(fd_ExecuteContractProposal_run_as, value) {
			return
		}
	}
	if x.Contract != "" {
		value := protoreflect.ValueOfString(x.Contract)
		if !f(fd_ExecuteContractProposal_contract, value) {
			return
		}
	}
	if len(x.Msg) != 0 {
		value := protoreflect.ValueOfBytes(x.Msg)
		if !f(fd_ExecuteContractProposal_msg, value) {
			return
		}
	}
	if len(x.Funds) != 0 {
		value := protoreflect.ValueOfList(&_ExecuteContractProposal_6_list{list: &x.Funds})
		if !f(fd_ExecuteContractProposal_funds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ExecuteContractProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.ExecuteContractProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.ExecuteContractProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.ExecuteContractProposal.run_as":
		return x.RunAs != ""
	case "junction.wasm.v1.ExecuteContractProposal.contract":
		return x.Contract != ""
	case "junction.wasm.v1.ExecuteContractProposal.msg":
		return len(x.Msg) != 0
	case "junction.wasm.v1.ExecuteContractProposal.funds":
		return len(x.Funds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ExecuteContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ExecuteContractProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExecuteContractProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.ExecuteContractProposal.title":
		x.Title = ""
	case "junction.wasm.v1.ExecuteContractProposal.description":
		x.Description = ""
	case "junction.wasm.v1.ExecuteContractProposal.run_as":
		x.RunAs = ""
	case "junction.wasm.v1.ExecuteContractProposal.contract":
		x.Contract = ""
	case "junction.wasm.v1.ExecuteContractProposal.msg":
		x.Msg = nil
	case "junction.wasm.v1.ExecuteContractProposal.funds":
		x.Funds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ExecuteContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ExecuteContractProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ExecuteContractProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.ExecuteContractProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.ExecuteContractProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.ExecuteContractProposal.run_as":
		value := x.RunAs
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.ExecuteContractProposal.contract":
		value := x.Contract
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.ExecuteContractProposal.msg":
		value := x.Msg
		return protoreflect.ValueOfBytes(value)
	case "junction.wasm.v1.ExecuteContractProposal.funds":
		if len(x.Funds) == 0 {
			return protoreflect.ValueOfList(&_ExecuteContractProposal_6_list{})
		}
		listValue := &_ExecuteContractProposal_6_list{list: &x.Funds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ExecuteContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ExecuteContractProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExecuteContractProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.ExecuteContractProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.ExecuteContractProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.ExecuteContractProposal.run_as":
		x.RunAs = value.Interface().(string)
	case "junction.wasm.v1.ExecuteContractProposal.contract":
		x.Contract = value.Interface().(string)
	case "junction.wasm.v1.ExecuteContractProposal.msg":
		x.Msg = value.Bytes()
	case "junction.wasm.v1.ExecuteContractProposal.funds":
		lv := value.List()
		clv := lv.(*_ExecuteContractProposal_6_list)
		x.Funds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ExecuteContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ExecuteContractProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExecuteContractProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.ExecuteContractProposal.funds":
		if x.Funds == nil {
			x.Funds = []*v1beta1.Coin{}
		}
		value := &_ExecuteContractProposal_6_list{list: &x.Funds}
		return protoreflect.ValueOfList(value)
	case "junction.wasm.v1.ExecuteContractProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.ExecuteContractProposal is not mutable"))
	case "junction.wasm.v1.ExecuteContractProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.ExecuteContractProposal is not mutable"))
	case "junction.wasm.v1.ExecuteContractProposal.run_as":
		panic(fmt.Errorf("field run_as of message junction.wasm.v1.ExecuteContractProposal is not mutable"))
	case "junction.wasm.v1.ExecuteContractProposal.contract":
		panic(fmt.Errorf("field contract of message junction.wasm.v1.ExecuteContractProposal is not mutable"))
	case "junction.wasm.v1.ExecuteContractProposal.msg":
		panic(fmt.Errorf("field msg of message junction.wasm.v1.ExecuteContractProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ExecuteContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ExecuteContractProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ExecuteContractProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.ExecuteContractProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.ExecuteContractProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.ExecuteContractProposal.run_as":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.ExecuteContractProposal.contract":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.ExecuteContractProposal.msg":
		return protoreflect.ValueOfBytes(nil)
	case "junction.wasm.v1.ExecuteContractProposal.funds":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_ExecuteContractProposal_6_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ExecuteContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ExecuteContractProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ExecuteContractProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.ExecuteContractProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ExecuteContractProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExecuteContractProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ExecuteContractProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ExecuteContractProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ExecuteContractProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RunAs)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Contract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Msg)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Funds) > 0 {
			for _, e := range x.Funds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ExecuteContractProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Funds) > 0 {
			for iNdEx := len(x.Funds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Funds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Msg) > 0 {
			i -= len(x.Msg)
			copy(dAtA[i:], x.Msg)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Msg)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Contract) > 0 {
			i -= len(x.Contract)
			copy(dAtA[i:], x.Contract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Contract)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.RunAs) > 0 {
			i -= len(x.RunAs)
			copy(dAtA[i:], x.RunAs)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RunAs)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ExecuteContractProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ExecuteContractProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ExecuteContractProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RunAs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RunAs = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Contract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Msg = append(x.Msg[:0], dAtA[iNdEx:postIndex]...)
				if x.Msg == nil {
					x.Msg = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Funds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Funds = append(x.Funds, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Funds[len(x.Funds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_UpdateAdminProposal             protoreflect.MessageDescriptor
	fd_UpdateAdminProposal_title       protoreflect.FieldDescriptor
	fd_UpdateAdminProposal_description protoreflect.FieldDescriptor
	fd_UpdateAdminProposal_new_admin   protoreflect.FieldDescriptor
	fd_UpdateAdminProposal_contract    protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_UpdateAdminProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("UpdateAdminProposal")
	fd_UpdateAdminProposal_title = md_UpdateAdminProposal.Fields().ByName("title")
	fd_UpdateAdminProposal_description = md_UpdateAdminProposal.Fields().ByName("description")
	fd_UpdateAdminProposal_new_admin = md_UpdateAdminProposal.Fields().ByName("new_admin")
	fd_UpdateAdminProposal_contract = md_UpdateAdminProposal.Fields().ByName("contract")
}

var _ protoreflect.Message = (*fastReflection_UpdateAdminProposal)(nil)

type fastReflection_UpdateAdminProposal UpdateAdminProposal

func (x *UpdateAdminProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpdateAdminProposal)(x)
}

func (x *UpdateAdminProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpdateAdminProposal_messageType fastReflection_UpdateAdminProposal_messageType
var _ protoreflect.MessageType = fastReflection_UpdateAdminProposal_messageType{}

type fastReflection_UpdateAdminProposal_messageType struct{}

func (x fastReflection_UpdateAdminProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpdateAdminProposal)(nil)
}
func (x fastReflection_UpdateAdminProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_UpdateAdminProposal)
}
func (x fastReflection_UpdateAdminProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateAdminProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpdateAdminProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateAdminProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpdateAdminProposal) Type() protoreflect.MessageType {
	return _fastReflection_UpdateAdminProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpdateAdminProposal) New() protoreflect.Message {
	return new(fastReflection_UpdateAdminProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpdateAdminProposal) Interface() protoreflect.ProtoMessage {
	return (*UpdateAdminProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpdateAdminProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_UpdateAdminProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_UpdateAdminProposal_description, value) {
			return
		}
	}
	if x.NewAdmin != "" {
		value := protoreflect.ValueOfString(x.NewAdmin)
		if !f(fd_UpdateAdminProposal_new_admin, value) {
			return
		}
	}
	if x.Contract != "" {
		value := protoreflect.ValueOfString(x.Contract)
		if !f(fd_UpdateAdminProposal_contract, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpdateAdminProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateAdminProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.UpdateAdminProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.UpdateAdminProposal.new_admin":
		return x.NewAdmin != ""
	case "junction.wasm.v1.UpdateAdminProposal.contract":
		return x.Contract != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateAdminProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateAdminProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateAdminProposal.title":
		x.Title = ""
	case "junction.wasm.v1.UpdateAdminProposal.description":
		x.Description = ""
	case "junction.wasm.v1.UpdateAdminProposal.new_admin":
		x.NewAdmin = ""
	case "junction.wasm.v1.UpdateAdminProposal.contract":
		x.Contract = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateAdminProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpdateAdminProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.UpdateAdminProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.UpdateAdminProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.UpdateAdminProposal.new_admin":
		value := x.NewAdmin
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.UpdateAdminProposal.contract":
		value := x.Contract
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateAdminProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateAdminProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateAdminProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.UpdateAdminProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.UpdateAdminProposal.new_admin":
		x.NewAdmin = value.Interface().(string)
	case "junction.wasm.v1.UpdateAdminProposal.contract":
		x.Contract = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateAdminProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateAdminProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateAdminProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.UpdateAdminProposal is not mutable"))
	case "junction.wasm.v1.UpdateAdminProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.UpdateAdminProposal is not mutable"))
	case "junction.wasm.v1.UpdateAdminProposal.new_admin":
		panic(fmt.Errorf("field new_admin of message junction.wasm.v1.UpdateAdminProposal is not mutable"))
	case "junction.wasm.v1.UpdateAdminProposal.contract":
		panic(fmt.Errorf("field contract of message junction.wasm.v1.UpdateAdminProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateAdminProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpdateAdminProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateAdminProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.UpdateAdminProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.UpdateAdminProposal.new_admin":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.UpdateAdminProposal.contract":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateAdminProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpdateAdminProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.UpdateAdminProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpdateAdminProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateAdminProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpdateAdminProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpdateAdminProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpdateAdminProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NewAdmin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Contract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpdateAdminProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Contract) > 0 {
			i -= len(x.Contract)
			copy(dAtA[i:], x.Contract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Contract)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.NewAdmin) > 0 {
			i -= len(x.NewAdmin)
			copy(dAtA[i:], x.NewAdmin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NewAdmin)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpdateAdminProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateAdminProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateAdminProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewAdmin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NewAdmin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Contract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ClearAdminProposal             protoreflect.MessageDescriptor
	fd_ClearAdminProposal_title       protoreflect.FieldDescriptor
	fd_ClearAdminProposal_description protoreflect.FieldDescriptor
	fd_ClearAdminProposal_contract    protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_ClearAdminProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("ClearAdminProposal")
	fd_ClearAdminProposal_title = md_ClearAdminProposal.Fields().ByName("title")
	fd_ClearAdminProposal_description = md_ClearAdminProposal.Fields().ByName("description")
	fd_ClearAdminProposal_contract = md_ClearAdminProposal.Fields().ByName("contract")
}

var _ protoreflect.Message = (*fastReflection_ClearAdminProposal)(nil)

type fastReflection_ClearAdminProposal ClearAdminProposal

func (x *ClearAdminProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ClearAdminProposal)(x)
}

func (x *ClearAdminProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ClearAdminProposal_messageType fastReflection_ClearAdminProposal_messageType
var _ protoreflect.MessageType = fastReflection_ClearAdminProposal_messageType{}

type fastReflection_ClearAdminProposal_messageType struct{}

func (x fastReflection_ClearAdminProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ClearAdminProposal)(nil)
}
func (x fastReflection_ClearAdminProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_ClearAdminProposal)
}
func (x fastReflection_ClearAdminProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ClearAdminProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ClearAdminProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_ClearAdminProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ClearAdminProposal) Type() protoreflect.MessageType {
	return _fastReflection_ClearAdminProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ClearAdminProposal) New() protoreflect.Message {
	return new(fastReflection_ClearAdminProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ClearAdminProposal) Interface() protoreflect.ProtoMessage {
	return (*ClearAdminProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ClearAdminProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_ClearAdminProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_ClearAdminProposal_description, value) {
			return
		}
	}
	if x.Contract != "" {
		value := protoreflect.ValueOfString(x.Contract)
		if !f(fd_ClearAdminProposal_contract, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ClearAdminProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.ClearAdminProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.ClearAdminProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.ClearAdminProposal.contract":
		return x.Contract != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ClearAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ClearAdminProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClearAdminProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.ClearAdminProposal.title":
		x.Title = ""
	case "junction.wasm.v1.ClearAdminProposal.description":
		x.Description = ""
	case "junction.wasm.v1.ClearAdminProposal.contract":
		x.Contract = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ClearAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ClearAdminProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ClearAdminProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.ClearAdminProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.ClearAdminProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.ClearAdminProposal.contract":
		value := x.Contract
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ClearAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ClearAdminProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClearAdminProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.ClearAdminProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.ClearAdminProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.ClearAdminProposal.contract":
		x.Contract = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ClearAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ClearAdminProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClearAdminProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.ClearAdminProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.ClearAdminProposal is not mutable"))
	case "junction.wasm.v1.ClearAdminProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.ClearAdminProposal is not mutable"))
	case "junction.wasm.v1.ClearAdminProposal.contract":
		panic(fmt.Errorf("field contract of message junction.wasm.v1.ClearAdminProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ClearAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ClearAdminProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ClearAdminProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.ClearAdminProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.ClearAdminProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.ClearAdminProposal.contract":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.ClearAdminProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.ClearAdminProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ClearAdminProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.ClearAdminProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ClearAdminProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClearAdminProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ClearAdminProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ClearAdminProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ClearAdminProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Contract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ClearAdminProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Contract) > 0 {
			i -= len(x.Contract)
			copy(dAtA[i:], x.Contract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Contract)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ClearAdminProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClearAdminProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClearAdminProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Contract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_PinCodesProposal_3_list)(nil)

type _PinCodesProposal_3_list struct {
	list *[]uint64
}

func (x *_PinCodesProposal_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_PinCodesProposal_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_PinCodesProposal_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_PinCodesProposal_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_PinCodesProposal_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message PinCodesProposal at list field CodeIds as it is not of Message kind"))
}

func (x *_PinCodesProposal_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_PinCodesProposal_3_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_PinCodesProposal_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_PinCodesProposal             protoreflect.MessageDescriptor
	fd_PinCodesProposal_title       protoreflect.FieldDescriptor
	fd_PinCodesProposal_description protoreflect.FieldDescriptor
	fd_PinCodesProposal_code_ids    protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_PinCodesProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("PinCodesProposal")
	fd_PinCodesProposal_title = md_PinCodesProposal.Fields().ByName("title")
	fd_PinCodesProposal_description = md_PinCodesProposal.Fields().ByName("description")
	fd_PinCodesProposal_code_ids = md_PinCodesProposal.Fields().ByName("code_ids")
}

var _ protoreflect.Message = (*fastReflection_PinCodesProposal)(nil)

type fastReflection_PinCodesProposal PinCodesProposal

func (x *PinCodesProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_PinCodesProposal)(x)
}

func (x *PinCodesProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_PinCodesProposal_messageType fastReflection_PinCodesProposal_messageType
var _ protoreflect.MessageType = fastReflection_PinCodesProposal_messageType{}

type fastReflection_PinCodesProposal_messageType struct{}

func (x fastReflection_PinCodesProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_PinCodesProposal)(nil)
}
func (x fastReflection_PinCodesProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_PinCodesProposal)
}
func (x fastReflection_PinCodesProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_PinCodesProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_PinCodesProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_PinCodesProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_PinCodesProposal) Type() protoreflect.MessageType {
	return _fastReflection_PinCodesProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_PinCodesProposal) New() protoreflect.Message {
	return new(fastReflection_PinCodesProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_PinCodesProposal) Interface() protoreflect.ProtoMessage {
	return (*PinCodesProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_PinCodesProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_PinCodesProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_PinCodesProposal_description, value) {
			return
		}
	}
	if len(x.CodeIds) != 0 {
		value := protoreflect.ValueOfList(&_PinCodesProposal_3_list{list: &x.CodeIds})
		if !f(fd_PinCodesProposal_code_ids, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_PinCodesProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.PinCodesProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.PinCodesProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.PinCodesProposal.code_ids":
		return len(x.CodeIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.PinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.PinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PinCodesProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.PinCodesProposal.title":
		x.Title = ""
	case "junction.wasm.v1.PinCodesProposal.description":
		x.Description = ""
	case "junction.wasm.v1.PinCodesProposal.code_ids":
		x.CodeIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.PinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.PinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_PinCodesProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.PinCodesProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.PinCodesProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.PinCodesProposal.code_ids":
		if len(x.CodeIds) == 0 {
			return protoreflect.ValueOfList(&_PinCodesProposal_3_list{})
		}
		listValue := &_PinCodesProposal_3_list{list: &x.CodeIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.PinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.PinCodesProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PinCodesProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.PinCodesProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.PinCodesProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.PinCodesProposal.code_ids":
		lv := value.List()
		clv := lv.(*_PinCodesProposal_3_list)
		x.CodeIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.PinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.PinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PinCodesProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.PinCodesProposal.code_ids":
		if x.CodeIds == nil {
			x.CodeIds = []uint64{}
		}
		value := &_PinCodesProposal_3_list{list: &x.CodeIds}
		return protoreflect.ValueOfList(value)
	case "junction.wasm.v1.PinCodesProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.PinCodesProposal is not mutable"))
	case "junction.wasm.v1.PinCodesProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.PinCodesProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.PinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.PinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_PinCodesProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.PinCodesProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.PinCodesProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.PinCodesProposal.code_ids":
		list := []uint64{}
		return protoreflect.ValueOfList(&_PinCodesProposal_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.PinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.PinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_PinCodesProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.PinCodesProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_PinCodesProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PinCodesProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_PinCodesProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_PinCodesProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*PinCodesProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CodeIds) > 0 {
			l = 0
			for _, e := range x.CodeIds {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*PinCodesProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CodeIds) > 0 {
			var pksize2 int
			for _, num := range x.CodeIds {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.CodeIds {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*PinCodesProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PinCodesProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PinCodesProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.CodeIds = append(x.CodeIds, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.CodeIds) == 0 {
						x.CodeIds = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.CodeIds = append(x.CodeIds, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CodeIds", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_UnpinCodesProposal_3_list)(nil)

type _UnpinCodesProposal_3_list struct {
	list *[]uint64
}

func (x *_UnpinCodesProposal_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UnpinCodesProposal_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_UnpinCodesProposal_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_UnpinCodesProposal_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_UnpinCodesProposal_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message UnpinCodesProposal at list field CodeIds as it is not of Message kind"))
}

func (x *_UnpinCodesProposal_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_UnpinCodesProposal_3_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_UnpinCodesProposal_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UnpinCodesProposal             protoreflect.MessageDescriptor
	fd_UnpinCodesProposal_title       protoreflect.FieldDescriptor
	fd_UnpinCodesProposal_description protoreflect.FieldDescriptor
	fd_UnpinCodesProposal_code_ids    protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_UnpinCodesProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("UnpinCodesProposal")
	fd_UnpinCodesProposal_title = md_UnpinCodesProposal.Fields().ByName("title")
	fd_UnpinCodesProposal_description = md_UnpinCodesProposal.Fields().ByName("description")
	fd_UnpinCodesProposal_code_ids = md_UnpinCodesProposal.Fields().ByName("code_ids")
}

var _ protoreflect.Message = (*fastReflection_UnpinCodesProposal)(nil)

type fastReflection_UnpinCodesProposal UnpinCodesProposal

func (x *UnpinCodesProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UnpinCodesProposal)(x)
}

func (x *UnpinCodesProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UnpinCodesProposal_messageType fastReflection_UnpinCodesProposal_messageType
var _ protoreflect.MessageType = fastReflection_UnpinCodesProposal_messageType{}

type fastReflection_UnpinCodesProposal_messageType struct{}

func (x fastReflection_UnpinCodesProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UnpinCodesProposal)(nil)
}
func (x fastReflection_UnpinCodesProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_UnpinCodesProposal)
}
func (x fastReflection_UnpinCodesProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UnpinCodesProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UnpinCodesProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_UnpinCodesProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UnpinCodesProposal) Type() protoreflect.MessageType {
	return _fastReflection_UnpinCodesProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UnpinCodesProposal) New() protoreflect.Message {
	return new(fastReflection_UnpinCodesProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UnpinCodesProposal) Interface() protoreflect.ProtoMessage {
	return (*UnpinCodesProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UnpinCodesProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_UnpinCodesProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_UnpinCodesProposal_description, value) {
			return
		}
	}
	if len(x.CodeIds) != 0 {
		value := protoreflect.ValueOfList(&_UnpinCodesProposal_3_list{list: &x.CodeIds})
		if !f(fd_UnpinCodesProposal_code_ids, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UnpinCodesProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.UnpinCodesProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.UnpinCodesProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.UnpinCodesProposal.code_ids":
		return len(x.CodeIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UnpinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UnpinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UnpinCodesProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.UnpinCodesProposal.title":
		x.Title = ""
	case "junction.wasm.v1.UnpinCodesProposal.description":
		x.Description = ""
	case "junction.wasm.v1.UnpinCodesProposal.code_ids":
		x.CodeIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UnpinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UnpinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UnpinCodesProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.UnpinCodesProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.UnpinCodesProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.UnpinCodesProposal.code_ids":
		if len(x.CodeIds) == 0 {
			return protoreflect.ValueOfList(&_UnpinCodesProposal_3_list{})
		}
		listValue := &_UnpinCodesProposal_3_list{list: &x.CodeIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UnpinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UnpinCodesProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UnpinCodesProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.UnpinCodesProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.UnpinCodesProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.UnpinCodesProposal.code_ids":
		lv := value.List()
		clv := lv.(*_UnpinCodesProposal_3_list)
		x.CodeIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UnpinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UnpinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UnpinCodesProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.UnpinCodesProposal.code_ids":
		if x.CodeIds == nil {
			x.CodeIds = []uint64{}
		}
		value := &_UnpinCodesProposal_3_list{list: &x.CodeIds}
		return protoreflect.ValueOfList(value)
	case "junction.wasm.v1.UnpinCodesProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.UnpinCodesProposal is not mutable"))
	case "junction.wasm.v1.UnpinCodesProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.UnpinCodesProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UnpinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UnpinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UnpinCodesProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.UnpinCodesProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.UnpinCodesProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.UnpinCodesProposal.code_ids":
		list := []uint64{}
		return protoreflect.ValueOfList(&_UnpinCodesProposal_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UnpinCodesProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UnpinCodesProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UnpinCodesProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.UnpinCodesProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UnpinCodesProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UnpinCodesProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UnpinCodesProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UnpinCodesProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UnpinCodesProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CodeIds) > 0 {
			l = 0
			for _, e := range x.CodeIds {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UnpinCodesProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CodeIds) > 0 {
			var pksize2 int
			for _, num := range x.CodeIds {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.CodeIds {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UnpinCodesProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UnpinCodesProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UnpinCodesProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.CodeIds = append(x.CodeIds, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.CodeIds) == 0 {
						x.CodeIds = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.CodeIds = append(x.CodeIds, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CodeIds", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AccessConfigUpdate                        protoreflect.MessageDescriptor
	fd_AccessConfigUpdate_code_id                protoreflect.FieldDescriptor
	fd_AccessConfigUpdate_instantiate_permission protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_AccessConfigUpdate = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("AccessConfigUpdate")
	fd_AccessConfigUpdate_code_id = md_AccessConfigUpdate.Fields().ByName("code_id")
	fd_AccessConfigUpdate_instantiate_permission = md_AccessConfigUpdate.Fields().ByName("instantiate_permission")
}

var _ protoreflect.Message = (*fastReflection_AccessConfigUpdate)(nil)

type fastReflection_AccessConfigUpdate AccessConfigUpdate

func (x *AccessConfigUpdate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AccessConfigUpdate)(x)
}

func (x *AccessConfigUpdate) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AccessConfigUpdate_messageType fastReflection_AccessConfigUpdate_messageType
var _ protoreflect.MessageType = fastReflection_AccessConfigUpdate_messageType{}

type fastReflection_AccessConfigUpdate_messageType struct{}

func (x fastReflection_AccessConfigUpdate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AccessConfigUpdate)(nil)
}
func (x fastReflection_AccessConfigUpdate_messageType) New() protoreflect.Message {
	return new(fastReflection_AccessConfigUpdate)
}
func (x fastReflection_AccessConfigUpdate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AccessConfigUpdate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AccessConfigUpdate) Descriptor() protoreflect.MessageDescriptor {
	return md_AccessConfigUpdate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AccessConfigUpdate) Type() protoreflect.MessageType {
	return _fastReflection_AccessConfigUpdate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AccessConfigUpdate) New() protoreflect.Message {
	return new(fastReflection_AccessConfigUpdate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AccessConfigUpdate) Interface() protoreflect.ProtoMessage {
	return (*AccessConfigUpdate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AccessConfigUpdate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CodeId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CodeId)
		if !f(fd_AccessConfigUpdate_code_id, value) {
			return
		}
	}
	if x.InstantiatePermission != nil {
		value := protoreflect.ValueOfMessage(x.InstantiatePermission.ProtoReflect())
		if !f(fd_AccessConfigUpdate_instantiate_permission, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AccessConfigUpdate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.AccessConfigUpdate.code_id":
		return x.CodeId != uint64(0)
	case "junction.wasm.v1.AccessConfigUpdate.instantiate_permission":
		return x.InstantiatePermission != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.AccessConfigUpdate"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.AccessConfigUpdate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AccessConfigUpdate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.AccessConfigUpdate.code_id":
		x.CodeId = uint64(0)
	case "junction.wasm.v1.AccessConfigUpdate.instantiate_permission":
		x.InstantiatePermission = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.AccessConfigUpdate"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.AccessConfigUpdate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AccessConfigUpdate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.AccessConfigUpdate.code_id":
		value := x.CodeId
		return protoreflect.ValueOfUint64(value)
	case "junction.wasm.v1.AccessConfigUpdate.instantiate_permission":
		value := x.InstantiatePermission
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.AccessConfigUpdate"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.AccessConfigUpdate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AccessConfigUpdate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.AccessConfigUpdate.code_id":
		x.CodeId = value.Uint()
	case "junction.wasm.v1.AccessConfigUpdate.instantiate_permission":
		x.InstantiatePermission = value.Message().Interface().(*AccessConfig)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.AccessConfigUpdate"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.AccessConfigUpdate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AccessConfigUpdate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.AccessConfigUpdate.instantiate_permission":
		if x.InstantiatePermission == nil {
			x.InstantiatePermission = new(AccessConfig)
		}
		return protoreflect.ValueOfMessage(x.InstantiatePermission.ProtoReflect())
	case "junction.wasm.v1.AccessConfigUpdate.code_id":
		panic(fmt.Errorf("field code_id of message junction.wasm.v1.AccessConfigUpdate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.AccessConfigUpdate"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.AccessConfigUpdate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AccessConfigUpdate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.AccessConfigUpdate.code_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "junction.wasm.v1.AccessConfigUpdate.instantiate_permission":
		m := new(AccessConfig)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.AccessConfigUpdate"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.AccessConfigUpdate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AccessConfigUpdate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.AccessConfigUpdate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AccessConfigUpdate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AccessConfigUpdate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AccessConfigUpdate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AccessConfigUpdate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AccessConfigUpdate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.CodeId != 0 {
			n += 1 + runtime.Sov(uint64(x.CodeId))
		}
		if x.InstantiatePermission != nil {
			l = options.Size(x.InstantiatePermission)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AccessConfigUpdate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.InstantiatePermission != nil {
			encoded, err := options.Marshal(x.InstantiatePermission)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.CodeId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CodeId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AccessConfigUpdate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AccessConfigUpdate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AccessConfigUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CodeId", wireType)
				}
				x.CodeId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CodeId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InstantiatePermission", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.InstantiatePermission == nil {
					x.InstantiatePermission = &AccessConfig{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InstantiatePermission); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_UpdateInstantiateConfigProposal_3_list)(nil)

type _UpdateInstantiateConfigProposal_3_list struct {
	list *[]*AccessConfigUpdate
}

func (x *_UpdateInstantiateConfigProposal_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UpdateInstantiateConfigProposal_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UpdateInstantiateConfigProposal_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AccessConfigUpdate)
	(*x.list)[i] = concreteValue
}

func (x *_UpdateInstantiateConfigProposal_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AccessConfigUpdate)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UpdateInstantiateConfigProposal_3_list) AppendMutable() protoreflect.Value {
	v := new(AccessConfigUpdate)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UpdateInstantiateConfigProposal_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UpdateInstantiateConfigProposal_3_list) NewElement() protoreflect.Value {
	v := new(AccessConfigUpdate)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UpdateInstantiateConfigProposal_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UpdateInstantiateConfigProposal                       protoreflect.MessageDescriptor
	fd_UpdateInstantiateConfigProposal_title                 protoreflect.FieldDescriptor
	fd_UpdateInstantiateConfigProposal_description           protoreflect.FieldDescriptor
	fd_UpdateInstantiateConfigProposal_access_config_updates protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_UpdateInstantiateConfigProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("UpdateInstantiateConfigProposal")
	fd_UpdateInstantiateConfigProposal_title = md_UpdateInstantiateConfigProposal.Fields().ByName("title")
	fd_UpdateInstantiateConfigProposal_description = md_UpdateInstantiateConfigProposal.Fields().ByName("description")
	fd_UpdateInstantiateConfigProposal_access_config_updates = md_UpdateInstantiateConfigProposal.Fields().ByName("access_config_updates")
}

var _ protoreflect.Message = (*fastReflection_UpdateInstantiateConfigProposal)(nil)

type fastReflection_UpdateInstantiateConfigProposal UpdateInstantiateConfigProposal

func (x *UpdateInstantiateConfigProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpdateInstantiateConfigProposal)(x)
}

func (x *UpdateInstantiateConfigProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpdateInstantiateConfigProposal_messageType fastReflection_UpdateInstantiateConfigProposal_messageType
var _ protoreflect.MessageType = fastReflection_UpdateInstantiateConfigProposal_messageType{}

type fastReflection_UpdateInstantiateConfigProposal_messageType struct{}

func (x fastReflection_UpdateInstantiateConfigProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpdateInstantiateConfigProposal)(nil)
}
func (x fastReflection_UpdateInstantiateConfigProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_UpdateInstantiateConfigProposal)
}
func (x fastReflection_UpdateInstantiateConfigProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateInstantiateConfigProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpdateInstantiateConfigProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateInstantiateConfigProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpdateInstantiateConfigProposal) Type() protoreflect.MessageType {
	return _fastReflection_UpdateInstantiateConfigProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpdateInstantiateConfigProposal) New() protoreflect.Message {
	return new(fastReflection_UpdateInstantiateConfigProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpdateInstantiateConfigProposal) Interface() protoreflect.ProtoMessage {
	return (*UpdateInstantiateConfigProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpdateInstantiateConfigProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_UpdateInstantiateConfigProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_UpdateInstantiateConfigProposal_description, value) {
			return
		}
	}
	if len(x.AccessConfigUpdates) != 0 {
		value := protoreflect.ValueOfList(&_UpdateInstantiateConfigProposal_3_list{list: &x.AccessConfigUpdates})
		if !f(fd_UpdateInstantiateConfigProposal_access_config_updates, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpdateInstantiateConfigProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates":
		return len(x.AccessConfigUpdates) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateInstantiateConfigProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateInstantiateConfigProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateInstantiateConfigProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.title":
		x.Title = ""
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.description":
		x.Description = ""
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates":
		x.AccessConfigUpdates = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateInstantiateConfigProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateInstantiateConfigProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpdateInstantiateConfigProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates":
		if len(x.AccessConfigUpdates) == 0 {
			return protoreflect.ValueOfList(&_UpdateInstantiateConfigProposal_3_list{})
		}
		listValue := &_UpdateInstantiateConfigProposal_3_list{list: &x.AccessConfigUpdates}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateInstantiateConfigProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateInstantiateConfigProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateInstantiateConfigProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates":
		lv := value.List()
		clv := lv.(*_UpdateInstantiateConfigProposal_3_list)
		x.AccessConfigUpdates = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateInstantiateConfigProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateInstantiateConfigProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateInstantiateConfigProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates":
		if x.AccessConfigUpdates == nil {
			x.AccessConfigUpdates = []*AccessConfigUpdate{}
		}
		value := &_UpdateInstantiateConfigProposal_3_list{list: &x.AccessConfigUpdates}
		return protoreflect.ValueOfList(value)
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.UpdateInstantiateConfigProposal is not mutable"))
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.UpdateInstantiateConfigProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateInstantiateConfigProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateInstantiateConfigProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpdateInstantiateConfigProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates":
		list := []*AccessConfigUpdate{}
		return protoreflect.ValueOfList(&_UpdateInstantiateConfigProposal_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.UpdateInstantiateConfigProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.UpdateInstantiateConfigProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpdateInstantiateConfigProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.UpdateInstantiateConfigProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpdateInstantiateConfigProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateInstantiateConfigProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpdateInstantiateConfigProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpdateInstantiateConfigProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpdateInstantiateConfigProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.AccessConfigUpdates) > 0 {
			for _, e := range x.AccessConfigUpdates {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpdateInstantiateConfigProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AccessConfigUpdates) > 0 {
			for iNdEx := len(x.AccessConfigUpdates) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AccessConfigUpdates[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpdateInstantiateConfigProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateInstantiateConfigProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateInstantiateConfigProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AccessConfigUpdates", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AccessConfigUpdates = append(x.AccessConfigUpdates, &AccessConfigUpdate{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AccessConfigUpdates[len(x.AccessConfigUpdates)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_StoreAndInstantiateContractProposal_10_list)(nil)

type _StoreAndInstantiateContractProposal_10_list struct {
	list *[]*v1beta1.Coin
}

func (x *_StoreAndInstantiateContractProposal_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_StoreAndInstantiateContractProposal_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_StoreAndInstantiateContractProposal_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_StoreAndInstantiateContractProposal_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_StoreAndInstantiateContractProposal_10_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_StoreAndInstantiateContractProposal_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_StoreAndInstantiateContractProposal_10_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_StoreAndInstantiateContractProposal_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_StoreAndInstantiateContractProposal                        protoreflect.MessageDescriptor
	fd_StoreAndInstantiateContractProposal_title                  protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_description            protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_run_as                 protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_wasm_byte_code         protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_instantiate_permission protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_unpin_code             protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_admin                  protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_label                  protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_msg                    protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_funds                  protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_source                 protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_builder                protoreflect.FieldDescriptor
	fd_StoreAndInstantiateContractProposal_code_hash              protoreflect.FieldDescriptor
)

func init() {
	file_junction_wasm_v1_proposal_legacy_proto_init()
	md_StoreAndInstantiateContractProposal = File_junction_wasm_v1_proposal_legacy_proto.Messages().ByName("StoreAndInstantiateContractProposal")
	fd_StoreAndInstantiateContractProposal_title = md_StoreAndInstantiateContractProposal.Fields().ByName("title")
	fd_StoreAndInstantiateContractProposal_description = md_StoreAndInstantiateContractProposal.Fields().ByName("description")
	fd_StoreAndInstantiateContractProposal_run_as = md_StoreAndInstantiateContractProposal.Fields().ByName("run_as")
	fd_StoreAndInstantiateContractProposal_wasm_byte_code = md_StoreAndInstantiateContractProposal.Fields().ByName("wasm_byte_code")
	fd_StoreAndInstantiateContractProposal_instantiate_permission = md_StoreAndInstantiateContractProposal.Fields().ByName("instantiate_permission")
	fd_StoreAndInstantiateContractProposal_unpin_code = md_StoreAndInstantiateContractProposal.Fields().ByName("unpin_code")
	fd_StoreAndInstantiateContractProposal_admin = md_StoreAndInstantiateContractProposal.Fields().ByName("admin")
	fd_StoreAndInstantiateContractProposal_label = md_StoreAndInstantiateContractProposal.Fields().ByName("label")
	fd_StoreAndInstantiateContractProposal_msg = md_StoreAndInstantiateContractProposal.Fields().ByName("msg")
	fd_StoreAndInstantiateContractProposal_funds = md_StoreAndInstantiateContractProposal.Fields().ByName("funds")
	fd_StoreAndInstantiateContractProposal_source = md_StoreAndInstantiateContractProposal.Fields().ByName("source")
	fd_StoreAndInstantiateContractProposal_builder = md_StoreAndInstantiateContractProposal.Fields().ByName("builder")
	fd_StoreAndInstantiateContractProposal_code_hash = md_StoreAndInstantiateContractProposal.Fields().ByName("code_hash")
}

var _ protoreflect.Message = (*fastReflection_StoreAndInstantiateContractProposal)(nil)

type fastReflection_StoreAndInstantiateContractProposal StoreAndInstantiateContractProposal

func (x *StoreAndInstantiateContractProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_StoreAndInstantiateContractProposal)(x)
}

func (x *StoreAndInstantiateContractProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_StoreAndInstantiateContractProposal_messageType fastReflection_StoreAndInstantiateContractProposal_messageType
var _ protoreflect.MessageType = fastReflection_StoreAndInstantiateContractProposal_messageType{}

type fastReflection_StoreAndInstantiateContractProposal_messageType struct{}

func (x fastReflection_StoreAndInstantiateContractProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_StoreAndInstantiateContractProposal)(nil)
}
func (x fastReflection_StoreAndInstantiateContractProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_StoreAndInstantiateContractProposal)
}
func (x fastReflection_StoreAndInstantiateContractProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_StoreAndInstantiateContractProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_StoreAndInstantiateContractProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_StoreAndInstantiateContractProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_StoreAndInstantiateContractProposal) Type() protoreflect.MessageType {
	return _fastReflection_StoreAndInstantiateContractProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_StoreAndInstantiateContractProposal) New() protoreflect.Message {
	return new(fastReflection_StoreAndInstantiateContractProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_StoreAndInstantiateContractProposal) Interface() protoreflect.ProtoMessage {
	return (*StoreAndInstantiateContractProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_StoreAndInstantiateContractProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_StoreAndInstantiateContractProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_StoreAndInstantiateContractProposal_description, value) {
			return
		}
	}
	if x.RunAs != "" {
		value := protoreflect.ValueOfString(x.RunAs)
		if !f(fd_StoreAndInstantiateContractProposal_run_as, value) {
			return
		}
	}
	if len(x.WasmByteCode) != 0 {
		value := protoreflect.ValueOfBytes(x.WasmByteCode)
		if !f(fd_StoreAndInstantiateContractProposal_wasm_byte_code, value) {
			return
		}
	}
	if x.InstantiatePermission != nil {
		value := protoreflect.ValueOfMessage(x.InstantiatePermission.ProtoReflect())
		if !f(fd_StoreAndInstantiateContractProposal_instantiate_permission, value) {
			return
		}
	}
	if x.UnpinCode != false {
		value := protoreflect.ValueOfBool(x.UnpinCode)
		if !f(fd_StoreAndInstantiateContractProposal_unpin_code, value) {
			return
		}
	}
	if x.Admin != "" {
		value := protoreflect.ValueOfString(x.Admin)
		if !f(fd_StoreAndInstantiateContractProposal_admin, value) {
			return
		}
	}
	if x.Label != "" {
		value := protoreflect.ValueOfString(x.Label)
		if !f(fd_StoreAndInstantiateContractProposal_label, value) {
			return
		}
	}
	if len(x.Msg) != 0 {
		value := protoreflect.ValueOfBytes(x.Msg)
		if !f(fd_StoreAndInstantiateContractProposal_msg, value) {
			return
		}
	}
	if len(x.Funds) != 0 {
		value := protoreflect.ValueOfList(&_StoreAndInstantiateContractProposal_10_list{list: &x.Funds})
		if !f(fd_StoreAndInstantiateContractProposal_funds, value) {
			return
		}
	}
	if x.Source != "" {
		value := protoreflect.ValueOfString(x.Source)
		if !f(fd_StoreAndInstantiateContractProposal_source, value) {
			return
		}
	}
	if x.Builder != "" {
		value := protoreflect.ValueOfString(x.Builder)
		if !f(fd_StoreAndInstantiateContractProposal_builder, value) {
			return
		}
	}
	if len(x.CodeHash) != 0 {
		value := protoreflect.ValueOfBytes(x.CodeHash)
		if !f(fd_StoreAndInstantiateContractProposal_code_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_StoreAndInstantiateContractProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.title":
		return x.Title != ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.description":
		return x.Description != ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.run_as":
		return x.RunAs != ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.wasm_byte_code":
		return len(x.WasmByteCode) != 0
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.instantiate_permission":
		return x.InstantiatePermission != nil
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.unpin_code":
		return x.UnpinCode != false
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.admin":
		return x.Admin != ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.label":
		return x.Label != ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.msg":
		return len(x.Msg) != 0
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.funds":
		return len(x.Funds) != 0
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.source":
		return x.Source != ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.builder":
		return x.Builder != ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.code_hash":
		return len(x.CodeHash) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreAndInstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreAndInstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreAndInstantiateContractProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.title":
		x.Title = ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.description":
		x.Description = ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.run_as":
		x.RunAs = ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.wasm_byte_code":
		x.WasmByteCode = nil
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.instantiate_permission":
		x.InstantiatePermission = nil
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.unpin_code":
		x.UnpinCode = false
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.admin":
		x.Admin = ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.label":
		x.Label = ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.msg":
		x.Msg = nil
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.funds":
		x.Funds = nil
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.source":
		x.Source = ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.builder":
		x.Builder = ""
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.code_hash":
		x.CodeHash = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreAndInstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreAndInstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_StoreAndInstantiateContractProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.run_as":
		value := x.RunAs
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.wasm_byte_code":
		value := x.WasmByteCode
		return protoreflect.ValueOfBytes(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.instantiate_permission":
		value := x.InstantiatePermission
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.unpin_code":
		value := x.UnpinCode
		return protoreflect.ValueOfBool(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.admin":
		value := x.Admin
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.label":
		value := x.Label
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.msg":
		value := x.Msg
		return protoreflect.ValueOfBytes(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.funds":
		if len(x.Funds) == 0 {
			return protoreflect.ValueOfList(&_StoreAndInstantiateContractProposal_10_list{})
		}
		listValue := &_StoreAndInstantiateContractProposal_10_list{list: &x.Funds}
		return protoreflect.ValueOfList(listValue)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.source":
		value := x.Source
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.builder":
		value := x.Builder
		return protoreflect.ValueOfString(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.code_hash":
		value := x.CodeHash
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreAndInstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreAndInstantiateContractProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreAndInstantiateContractProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.title":
		x.Title = value.Interface().(string)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.description":
		x.Description = value.Interface().(string)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.run_as":
		x.RunAs = value.Interface().(string)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.wasm_byte_code":
		x.WasmByteCode = value.Bytes()
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.instantiate_permission":
		x.InstantiatePermission = value.Message().Interface().(*AccessConfig)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.unpin_code":
		x.UnpinCode = value.Bool()
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.admin":
		x.Admin = value.Interface().(string)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.label":
		x.Label = value.Interface().(string)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.msg":
		x.Msg = value.Bytes()
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.funds":
		lv := value.List()
		clv := lv.(*_StoreAndInstantiateContractProposal_10_list)
		x.Funds = *clv.list
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.source":
		x.Source = value.Interface().(string)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.builder":
		x.Builder = value.Interface().(string)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.code_hash":
		x.CodeHash = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreAndInstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreAndInstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreAndInstantiateContractProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.instantiate_permission":
		if x.InstantiatePermission == nil {
			x.InstantiatePermission = new(AccessConfig)
		}
		return protoreflect.ValueOfMessage(x.InstantiatePermission.ProtoReflect())
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.funds":
		if x.Funds == nil {
			x.Funds = []*v1beta1.Coin{}
		}
		value := &_StoreAndInstantiateContractProposal_10_list{list: &x.Funds}
		return protoreflect.ValueOfList(value)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.title":
		panic(fmt.Errorf("field title of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.description":
		panic(fmt.Errorf("field description of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.run_as":
		panic(fmt.Errorf("field run_as of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.wasm_byte_code":
		panic(fmt.Errorf("field wasm_byte_code of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.unpin_code":
		panic(fmt.Errorf("field unpin_code of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.admin":
		panic(fmt.Errorf("field admin of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.label":
		panic(fmt.Errorf("field label of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.msg":
		panic(fmt.Errorf("field msg of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.source":
		panic(fmt.Errorf("field source of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.builder":
		panic(fmt.Errorf("field builder of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.code_hash":
		panic(fmt.Errorf("field code_hash of message junction.wasm.v1.StoreAndInstantiateContractProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreAndInstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreAndInstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_StoreAndInstantiateContractProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.title":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.description":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.run_as":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.wasm_byte_code":
		return protoreflect.ValueOfBytes(nil)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.instantiate_permission":
		m := new(AccessConfig)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.unpin_code":
		return protoreflect.ValueOfBool(false)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.admin":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.label":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.msg":
		return protoreflect.ValueOfBytes(nil)
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.funds":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_StoreAndInstantiateContractProposal_10_list{list: &list})
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.source":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.builder":
		return protoreflect.ValueOfString("")
	case "junction.wasm.v1.StoreAndInstantiateContractProposal.code_hash":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: junction.wasm.v1.StoreAndInstantiateContractProposal"))
		}
		panic(fmt.Errorf("message junction.wasm.v1.StoreAndInstantiateContractProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_StoreAndInstantiateContractProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in junction.wasm.v1.StoreAndInstantiateContractProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_StoreAndInstantiateContractProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreAndInstantiateContractProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_StoreAndInstantiateContractProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_StoreAndInstantiateContractProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*StoreAndInstantiateContractProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RunAs)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.WasmByteCode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InstantiatePermission != nil {
			l = options.Size(x.InstantiatePermission)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UnpinCode {
			n += 2
		}
		l = len(x.Admin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Label)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Msg)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Funds) > 0 {
			for _, e := range x.Funds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Source)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Builder)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CodeHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*StoreAndInstantiateContractProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CodeHash) > 0 {
			i -= len(x.CodeHash)
			copy(dAtA[i:], x.CodeHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CodeHash)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.Builder) > 0 {
			i -= len(x.Builder)
			copy(dAtA[i:], x.Builder)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Builder)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.Source) > 0 {
			i -= len(x.Source)
			copy(dAtA[i:], x.Source)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Source)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Funds) > 0 {
			for iNdEx := len(x.Funds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Funds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.Msg) > 0 {
			i -= len(x.Msg)
			copy(dAtA[i:], x.Msg)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Msg)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.Label) > 0 {
			i -= len(x.Label)
			copy(dAtA[i:], x.Label)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Label)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.Admin) > 0 {
			i -= len(x.Admin)
			copy(dAtA[i:], x.Admin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Admin)))
			i--
			dAtA[i] = 0x3a
		}
		if x.UnpinCode {
			i--
			if x.UnpinCode {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x30
		}
		if x.InstantiatePermission != nil {
			encoded, err := options.Marshal(x.InstantiatePermission)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.WasmByteCode) > 0 {
			i -= len(x.WasmByteCode)
			copy(dAtA[i:], x.WasmByteCode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WasmByteCode)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.RunAs) > 0 {
			i -= len(x.RunAs)
			copy(dAtA[i:], x.RunAs)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RunAs)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*StoreAndInstantiateContractProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StoreAndInstantiateContractProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StoreAndInstantiateContractProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RunAs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RunAs = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WasmByteCode", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WasmByteCode = append(x.WasmByteCode[:0], dAtA[iNdEx:postIndex]...)
				if x.WasmByteCode == nil {
					x.WasmByteCode = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InstantiatePermission", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.InstantiatePermission == nil {
					x.InstantiatePermission = &AccessConfig{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InstantiatePermission); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnpinCode", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UnpinCode = bool(v != 0)
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Admin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Label = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Msg = append(x.Msg[:0], dAtA[iNdEx:postIndex]...)
				if x.Msg == nil {
					x.Msg = []byte{}
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Funds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Funds = append(x.Funds, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Funds[len(x.Funds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Source = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Builder", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Builder = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CodeHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CodeHash = append(x.CodeHash[:0], dAtA[iNdEx:postIndex]...)
				if x.CodeHash == nil {
					x.CodeHash = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: junction/wasm/v1/proposal_legacy.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit StoreCodeProposal. To submit WASM code to the system,
// a simple MsgStoreCode can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type StoreCodeProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// RunAs is the address that is passed to the contract's environment as sender
	RunAs string `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// WASMByteCode can be raw or gzip compressed
	WasmByteCode []byte `protobuf:"bytes,4,opt,name=wasm_byte_code,json=wasmByteCode,proto3" json:"wasm_byte_code,omitempty"`
	// InstantiatePermission to apply on contract creation, optional
	InstantiatePermission *AccessConfig `protobuf:"bytes,7,opt,name=instantiate_permission,json=instantiatePermission,proto3" json:"instantiate_permission,omitempty"`
	// UnpinCode code on upload, optional
	UnpinCode bool `protobuf:"varint,8,opt,name=unpin_code,json=unpinCode,proto3" json:"unpin_code,omitempty"`
	// Source is the URL where the code is hosted
	Source string `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty"`
	// Builder is the docker image used to build the code deterministically, used
	// for smart contract verification
	Builder string `protobuf:"bytes,10,opt,name=builder,proto3" json:"builder,omitempty"`
	// CodeHash is the SHA256 sum of the code outputted by builder, used for smart
	// contract verification
	CodeHash []byte `protobuf:"bytes,11,opt,name=code_hash,json=codeHash,proto3" json:"code_hash,omitempty"`
}

func (x *StoreCodeProposal) Reset() {
	*x = StoreCodeProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreCodeProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreCodeProposal) ProtoMessage() {}

// Deprecated: Use StoreCodeProposal.ProtoReflect.Descriptor instead.
func (*StoreCodeProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{0}
}

func (x *StoreCodeProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StoreCodeProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StoreCodeProposal) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

func (x *StoreCodeProposal) GetWasmByteCode() []byte {
	if x != nil {
		return x.WasmByteCode
	}
	return nil
}

func (x *StoreCodeProposal) GetInstantiatePermission() *AccessConfig {
	if x != nil {
		return x.InstantiatePermission
	}
	return nil
}

func (x *StoreCodeProposal) GetUnpinCode() bool {
	if x != nil {
		return x.UnpinCode
	}
	return false
}

func (x *StoreCodeProposal) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *StoreCodeProposal) GetBuilder() string {
	if x != nil {
		return x.Builder
	}
	return ""
}

func (x *StoreCodeProposal) GetCodeHash() []byte {
	if x != nil {
		return x.CodeHash
	}
	return nil
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit InstantiateContractProposal. To instantiate a contract,
// a simple MsgInstantiateContract can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type InstantiateContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// RunAs is the address that is passed to the contract's environment as sender
	RunAs string `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// Admin is an optional address that can execute migrations
	Admin string `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin,omitempty"`
	// CodeID is the reference to the stored WASM code
	CodeId uint64 `protobuf:"varint,5,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// Label is optional metadata to be stored with a constract instance.
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// Msg json encoded message to be passed to the contract on instantiation
	Msg []byte `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	// Funds coins that are transferred to the contract on instantiation
	Funds []*v1beta1.Coin `protobuf:"bytes,8,rep,name=funds,proto3" json:"funds,omitempty"`
}

func (x *InstantiateContractProposal) Reset() {
	*x = InstantiateContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantiateContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantiateContractProposal) ProtoMessage() {}

// Deprecated: Use InstantiateContractProposal.ProtoReflect.Descriptor instead.
func (*InstantiateContractProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{1}
}

func (x *InstantiateContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InstantiateContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstantiateContractProposal) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

func (x *InstantiateContractProposal) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *InstantiateContractProposal) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *InstantiateContractProposal) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *InstantiateContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *InstantiateContractProposal) GetFunds() []*v1beta1.Coin {
	if x != nil {
		return x.Funds
	}
	return nil
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit InstantiateContract2Proposal. To instantiate contract 2,
// a simple MsgInstantiateContract2 can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type InstantiateContract2Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// RunAs is the address that is passed to the contract's enviroment as sender
	RunAs string `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// Admin is an optional address that can execute migrations
	Admin string `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin,omitempty"`
	// CodeID is the reference to the stored WASM code
	CodeId uint64 `protobuf:"varint,5,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// Label is optional metadata to be stored with a constract instance.
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// Msg json encode message to be passed to the contract on instantiation
	Msg []byte `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	// Funds coins that are transferred to the contract on instantiation
	Funds []*v1beta1.Coin `protobuf:"bytes,8,rep,name=funds,proto3" json:"funds,omitempty"`
	// Salt is an arbitrary value provided by the sender. Size can be 1 to 64.
	Salt []byte `protobuf:"bytes,9,opt,name=salt,proto3" json:"salt,omitempty"`
	// FixMsg include the msg value into the hash for the predictable address.
	// Default is false
	FixMsg bool `protobuf:"varint,10,opt,name=fix_msg,json=fixMsg,proto3" json:"fix_msg,omitempty"`
}

func (x *InstantiateContract2Proposal) Reset() {
	*x = InstantiateContract2Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantiateContract2Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantiateContract2Proposal) ProtoMessage() {}

// Deprecated: Use InstantiateContract2Proposal.ProtoReflect.Descriptor instead.
func (*InstantiateContract2Proposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{2}
}

func (x *InstantiateContract2Proposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InstantiateContract2Proposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstantiateContract2Proposal) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

func (x *InstantiateContract2Proposal) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *InstantiateContract2Proposal) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *InstantiateContract2Proposal) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *InstantiateContract2Proposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *InstantiateContract2Proposal) GetFunds() []*v1beta1.Coin {
	if x != nil {
		return x.Funds
	}
	return nil
}

func (x *InstantiateContract2Proposal) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *InstantiateContract2Proposal) GetFixMsg() bool {
	if x != nil {
		return x.FixMsg
	}
	return false
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit MigrateContractProposal. To migrate a contract,
// a simple MsgMigrateContract can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type MigrateContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"` // Note: skipping 3 as this was previously used for unneeded run_as
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	// CodeID references the new WASM code
	CodeId uint64 `protobuf:"varint,5,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// Msg json encoded message to be passed to the contract on migration
	Msg []byte `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MigrateContractProposal) Reset() {
	*x = MigrateContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateContractProposal) ProtoMessage() {}

// Deprecated: Use MigrateContractProposal.ProtoReflect.Descriptor instead.
func (*MigrateContractProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{3}
}

func (x *MigrateContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MigrateContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MigrateContractProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *MigrateContractProposal) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *MigrateContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit SudoContractProposal. To call sudo on a contract,
// a simple MsgSudoContract can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type SudoContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	// Msg json encoded message to be passed to the contract as sudo
	Msg []byte `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SudoContractProposal) Reset() {
	*x = SudoContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SudoContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SudoContractProposal) ProtoMessage() {}

// Deprecated: Use SudoContractProposal.ProtoReflect.Descriptor instead.
func (*SudoContractProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{4}
}

func (x *SudoContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SudoContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SudoContractProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *SudoContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit ExecuteContractProposal. To call execute on a contract,
// a simple MsgExecuteContract can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type ExecuteContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// RunAs is the address that is passed to the contract's environment as sender
	RunAs string `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	// Msg json encoded message to be passed to the contract as execute
	Msg []byte `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	// Funds coins that are transferred to the contract on instantiation
	Funds []*v1beta1.Coin `protobuf:"bytes,6,rep,name=funds,proto3" json:"funds,omitempty"`
}

func (x *ExecuteContractProposal) Reset() {
	*x = ExecuteContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteContractProposal) ProtoMessage() {}

// Deprecated: Use ExecuteContractProposal.ProtoReflect.Descriptor instead.
func (*ExecuteContractProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{5}
}

func (x *ExecuteContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExecuteContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExecuteContractProposal) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

func (x *ExecuteContractProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *ExecuteContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ExecuteContractProposal) GetFunds() []*v1beta1.Coin {
	if x != nil {
		return x.Funds
	}
	return nil
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit UpdateAdminProposal. To set an admin for a contract,
// a simple MsgUpdateAdmin can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type UpdateAdminProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// NewAdmin address to be set
	NewAdmin string `protobuf:"bytes,3,opt,name=new_admin,json=newAdmin,proto3" json:"new_admin,omitempty"`
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *UpdateAdminProposal) Reset() {
	*x = UpdateAdminProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminProposal) ProtoMessage() {}

// Deprecated: Use UpdateAdminProposal.ProtoReflect.Descriptor instead.
func (*UpdateAdminProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAdminProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAdminProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAdminProposal) GetNewAdmin() string {
	if x != nil {
		return x.NewAdmin
	}
	return ""
}

func (x *UpdateAdminProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit ClearAdminProposal. To clear the admin of a contract,
// a simple MsgClearAdmin can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type ClearAdminProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *ClearAdminProposal) Reset() {
	*x = ClearAdminProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAdminProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAdminProposal) ProtoMessage() {}

// Deprecated: Use ClearAdminProposal.ProtoReflect.Descriptor instead.
func (*ClearAdminProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{7}
}

func (x *ClearAdminProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ClearAdminProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClearAdminProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit PinCodesProposal. To pin a set of code ids in the wasmvm
// cache, a simple MsgPinCodes can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type PinCodesProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// CodeIDs references the new WASM codes
	CodeIds []uint64 `protobuf:"varint,3,rep,packed,name=code_ids,json=codeIds,proto3" json:"code_ids,omitempty"`
}

func (x *PinCodesProposal) Reset() {
	*x = PinCodesProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinCodesProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinCodesProposal) ProtoMessage() {}

// Deprecated: Use PinCodesProposal.ProtoReflect.Descriptor instead.
func (*PinCodesProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{8}
}

func (x *PinCodesProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PinCodesProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PinCodesProposal) GetCodeIds() []uint64 {
	if x != nil {
		return x.CodeIds
	}
	return nil
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit UnpinCodesProposal. To unpin a set of code ids in the wasmvm
// cache, a simple MsgUnpinCodes can be invoked from the x/gov module via
// a v1 governance proposal.
//
// Deprecated: Do not use.
type UnpinCodesProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// CodeIDs references the WASM codes
	CodeIds []uint64 `protobuf:"varint,3,rep,packed,name=code_ids,json=codeIds,proto3" json:"code_ids,omitempty"`
}

func (x *UnpinCodesProposal) Reset() {
	*x = UnpinCodesProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpinCodesProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpinCodesProposal) ProtoMessage() {}

// Deprecated: Use UnpinCodesProposal.ProtoReflect.Descriptor instead.
func (*UnpinCodesProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{9}
}

func (x *UnpinCodesProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UnpinCodesProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UnpinCodesProposal) GetCodeIds() []uint64 {
	if x != nil {
		return x.CodeIds
	}
	return nil
}

// AccessConfigUpdate contains the code id and the access config to be
// applied.
type AccessConfigUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CodeID is the reference to the stored WASM code to be updated
	CodeId uint64 `protobuf:"varint,1,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// InstantiatePermission to apply to the set of code ids
	InstantiatePermission *AccessConfig `protobuf:"bytes,2,opt,name=instantiate_permission,json=instantiatePermission,proto3" json:"instantiate_permission,omitempty"`
}

func (x *AccessConfigUpdate) Reset() {
	*x = AccessConfigUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessConfigUpdate) ProtoMessage() {}

// Deprecated: Use AccessConfigUpdate.ProtoReflect.Descriptor instead.
func (*AccessConfigUpdate) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{10}
}

func (x *AccessConfigUpdate) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *AccessConfigUpdate) GetInstantiatePermission() *AccessConfig {
	if x != nil {
		return x.InstantiatePermission
	}
	return nil
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit UpdateInstantiateConfigProposal. To update instantiate config
// to a set of code ids, a simple MsgUpdateInstantiateConfig can be invoked from
// the x/gov module via a v1 governance proposal.
//
// Deprecated: Do not use.
type UpdateInstantiateConfigProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// AccessConfigUpdate contains the list of code ids and the access config
	// to be applied.
	AccessConfigUpdates []*AccessConfigUpdate `protobuf:"bytes,3,rep,name=access_config_updates,json=accessConfigUpdates,proto3" json:"access_config_updates,omitempty"`
}

func (x *UpdateInstantiateConfigProposal) Reset() {
	*x = UpdateInstantiateConfigProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstantiateConfigProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstantiateConfigProposal) ProtoMessage() {}

// Deprecated: Use UpdateInstantiateConfigProposal.ProtoReflect.Descriptor instead.
func (*UpdateInstantiateConfigProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateInstantiateConfigProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateInstantiateConfigProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateInstantiateConfigProposal) GetAccessConfigUpdates() []*AccessConfigUpdate {
	if x != nil {
		return x.AccessConfigUpdates
	}
	return nil
}

// Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
// an explicit StoreAndInstantiateContractProposal. To store and instantiate
// the contract, a simple MsgStoreAndInstantiateContract can be invoked from
// the x/gov module via a v1 governance proposal.
//
// Deprecated: Do not use.
type StoreAndInstantiateContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// RunAs is the address that is passed to the contract's environment as sender
	RunAs string `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// WASMByteCode can be raw or gzip compressed
	WasmByteCode []byte `protobuf:"bytes,4,opt,name=wasm_byte_code,json=wasmByteCode,proto3" json:"wasm_byte_code,omitempty"`
	// InstantiatePermission to apply on contract creation, optional
	InstantiatePermission *AccessConfig `protobuf:"bytes,5,opt,name=instantiate_permission,json=instantiatePermission,proto3" json:"instantiate_permission,omitempty"`
	// UnpinCode code on upload, optional
	UnpinCode bool `protobuf:"varint,6,opt,name=unpin_code,json=unpinCode,proto3" json:"unpin_code,omitempty"`
	// Admin is an optional address that can execute migrations
	Admin string `protobuf:"bytes,7,opt,name=admin,proto3" json:"admin,omitempty"`
	// Label is optional metadata to be stored with a constract instance.
	Label string `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
	// Msg json encoded message to be passed to the contract on instantiation
	Msg []byte `protobuf:"bytes,9,opt,name=msg,proto3" json:"msg,omitempty"`
	// Funds coins that are transferred to the contract on instantiation
	Funds []*v1beta1.Coin `protobuf:"bytes,10,rep,name=funds,proto3" json:"funds,omitempty"`
	// Source is the URL where the code is hosted
	Source string `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	// Builder is the docker image used to build the code deterministically, used
	// for smart contract verification
	Builder string `protobuf:"bytes,12,opt,name=builder,proto3" json:"builder,omitempty"`
	// CodeHash is the SHA256 sum of the code outputted by builder, used for smart
	// contract verification
	CodeHash []byte `protobuf:"bytes,13,opt,name=code_hash,json=codeHash,proto3" json:"code_hash,omitempty"`
}

func (x *StoreAndInstantiateContractProposal) Reset() {
	*x = StoreAndInstantiateContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junction_wasm_v1_proposal_legacy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreAndInstantiateContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreAndInstantiateContractProposal) ProtoMessage() {}

// Deprecated: Use StoreAndInstantiateContractProposal.ProtoReflect.Descriptor instead.
func (*StoreAndInstantiateContractProposal) Descriptor() ([]byte, []int) {
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP(), []int{12}
}

func (x *StoreAndInstantiateContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StoreAndInstantiateContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StoreAndInstantiateContractProposal) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

func (x *StoreAndInstantiateContractProposal) GetWasmByteCode() []byte {
	if x != nil {
		return x.WasmByteCode
	}
	return nil
}

func (x *StoreAndInstantiateContractProposal) GetInstantiatePermission() *AccessConfig {
	if x != nil {
		return x.InstantiatePermission
	}
	return nil
}

func (x *StoreAndInstantiateContractProposal) GetUnpinCode() bool {
	if x != nil {
		return x.UnpinCode
	}
	return false
}

func (x *StoreAndInstantiateContractProposal) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *StoreAndInstantiateContractProposal) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *StoreAndInstantiateContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *StoreAndInstantiateContractProposal) GetFunds() []*v1beta1.Coin {
	if x != nil {
		return x.Funds
	}
	return nil
}

func (x *StoreAndInstantiateContractProposal) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *StoreAndInstantiateContractProposal) GetBuilder() string {
	if x != nil {
		return x.Builder
	}
	return ""
}

func (x *StoreAndInstantiateContractProposal) GetCodeHash() []byte {
	if x != nil {
		return x.CodeHash
	}
	return nil
}

var File_junction_wasm_v1_proposal_legacy_proto protoreflect.FileDescriptor

var file_junction_wasm_v1_proposal_legacy_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6a, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f,
	0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x03, 0x0a,
	0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x75,
	0x6e, 0x5f, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x36, 0x0a, 0x0e, 0x77,
	0x61, 0x73, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x10, 0xe2, 0xde, 0x1f, 0x0c, 0x57, 0x41, 0x53, 0x4d, 0x42, 0x79, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x77, 0x61, 0x73, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77,
	0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e,
	0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x75, 0x6e, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x3a, 0x3b, 0xca, 0xb4, 0x2d, 0x1a, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x16, 0x77, 0x61, 0x73,
	0x6d, 0x2f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x18, 0x01, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x06, 0x10,
	0x07, 0x22, 0xeb, 0x03, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x75, 0x6e,
	0x5f, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x07, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe2, 0xde, 0x1f,
	0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x26, 0xfa, 0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x9a, 0xe7, 0xb0, 0x2a, 0x0b, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x77, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x46, 0xc8, 0xde, 0x1f, 0x00, 0xaa,
	0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x9a, 0xe7, 0xb0, 0x2a, 0x0c,
	0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x3a, 0x45, 0xca, 0xb4, 0x2d, 0x1a, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x20, 0x77, 0x61, 0x73,
	0x6d, 0x2f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22,
	0x9a, 0x04, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x32, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x07, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe2, 0xde, 0x1f, 0x06,
	0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x26, 0xfa, 0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x9a, 0xe7, 0xb0, 0x2a, 0x0b, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x77,
	0x0a, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x46, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf,
	0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x9a, 0xe7, 0xb0, 0x2a, 0x0c, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x69, 0x78, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69,
	0x78, 0x4d, 0x73, 0x67, 0x3a, 0x46, 0xca, 0xb4, 0x2d, 0x1a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x21, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x32, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22, 0xa9, 0x02, 0x0a,
	0x17, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe2, 0xde, 0x1f, 0x06, 0x43, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x26, 0xfa, 0xde, 0x1f, 0x12, 0x52, 0x61,
	0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x9a, 0xe7, 0xb0, 0x2a, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x3a, 0x41, 0xca, 0xb4, 0x2d, 0x1a, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x1c, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22, 0xfe, 0x01, 0x0a, 0x14, 0x53, 0x75, 0x64,
	0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d,
	0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x38, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x26, 0xfa, 0xde,
	0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x9a, 0xe7, 0xb0, 0x2a, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x3a, 0x3e, 0xca, 0xb4, 0x2d, 0x1a, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x19, 0x77, 0x61,
	0x73, 0x6d, 0x2f, 0x53, 0x75, 0x64, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22, 0xae, 0x03, 0x0a, 0x17, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x06, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2,
	0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x34,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x38, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x26, 0xfa, 0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x9a, 0xe7, 0xb0, 0x2a, 0x0b, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x77,
	0x0a, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x46, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf,
	0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x9a, 0xe7, 0xb0, 0x2a, 0x0c, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x3a, 0x41, 0xca, 0xb4, 0x2d, 0x1a, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x1c, 0x77, 0x61, 0x73, 0x6d,
	0x2f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22, 0x8d, 0x02, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x09, 0x6e, 0x65,
	0x77, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c, 0xf2,
	0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x22, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x3a, 0x3d, 0xca, 0xb4, 0x2d,
	0x1a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x18,
	0x77, 0x61, 0x73, 0x6d, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d,
	0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x3a,
	0x3c, 0xca, 0xb4, 0x2d, 0x1a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a,
	0xe7, 0xb0, 0x2a, 0x17, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22, 0xc1, 0x01,
	0x0a, 0x10, 0x50, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x42, 0x1e, 0xe2, 0xde,
	0x1f, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x73, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x22, 0x52, 0x07, 0x63, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x73, 0x3a, 0x3a, 0xca, 0xb4, 0x2d, 0x1a, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x15, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x50,
	0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18,
	0x01, 0x22, 0xc5, 0x01, 0x0a, 0x12, 0x55, 0x6e, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x42, 0x1e, 0xe2, 0xde, 0x1f, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x73, 0xf2,
	0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x22, 0x52, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x3a, 0x3c, 0xca, 0xb4, 0x2d,
	0x1a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x17,
	0x77, 0x61, 0x73, 0x6d, 0x2f, 0x55, 0x6e, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x0a, 0xe2, 0xde, 0x1f, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x63,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb3, 0x02, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a,
	0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6a,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x13, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x3a, 0x49, 0xca, 0xb4, 0x2d, 0x1a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x67,
	0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x24, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x22, 0xb9, 0x05,
	0x0a, 0x23, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x06, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2,
	0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x36,
	0x0a, 0x0e, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x10, 0xe2, 0xde, 0x1f, 0x0c, 0x57, 0x41, 0x53, 0x4d,
	0x42, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x77, 0x61, 0x73, 0x6d, 0x42, 0x79,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x6e, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x75, 0x6e, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x26, 0xfa, 0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x9a, 0xe7, 0xb0,
	0x2a, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x77, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x46, 0xc8, 0xde,
	0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x9a, 0xe7,
	0xb0, 0x2a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0xa8,
	0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x3a, 0x4d, 0xca, 0xb4, 0x2d, 0x1a,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x8a, 0xe7, 0xb0, 0x2a, 0x28, 0x77,
	0x61, 0x73, 0x6d, 0x2f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x42, 0xc3, 0x01, 0xc8, 0xe1, 0x1e, 0x00,
	0xd8, 0xe1, 0x1e, 0x00, 0xa8, 0xe2, 0x1e, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x13,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x61, 0x73, 0x6d, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x4a, 0x57, 0x58, 0xaa, 0x02, 0x10, 0x4a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x57, 0x61, 0x73, 0x6d, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x4a, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5c, 0x57, 0x61, 0x73, 0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x4a, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x57, 0x61, 0x73, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x4a, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x57, 0x61, 0x73, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_junction_wasm_v1_proposal_legacy_proto_rawDescOnce sync.Once
	file_junction_wasm_v1_proposal_legacy_proto_rawDescData = file_junction_wasm_v1_proposal_legacy_proto_rawDesc
)

func file_junction_wasm_v1_proposal_legacy_proto_rawDescGZIP() []byte {
	file_junction_wasm_v1_proposal_legacy_proto_rawDescOnce.Do(func() {
		file_junction_wasm_v1_proposal_legacy_proto_rawDescData = protoimpl.X.CompressGZIP(file_junction_wasm_v1_proposal_legacy_proto_rawDescData)
	})
	return file_junction_wasm_v1_proposal_legacy_proto_rawDescData
}

var file_junction_wasm_v1_proposal_legacy_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_junction_wasm_v1_proposal_legacy_proto_goTypes = []interface{}{
	(*StoreCodeProposal)(nil),                   // 0: junction.wasm.v1.StoreCodeProposal
	(*InstantiateContractProposal)(nil),         // 1: junction.wasm.v1.InstantiateContractProposal
	(*InstantiateContract2Proposal)(nil),        // 2: junction.wasm.v1.InstantiateContract2Proposal
	(*MigrateContractProposal)(nil),             // 3: junction.wasm.v1.MigrateContractProposal
	(*SudoContractProposal)(nil),                // 4: junction.wasm.v1.SudoContractProposal
	(*ExecuteContractProposal)(nil),             // 5: junction.wasm.v1.ExecuteContractProposal
	(*UpdateAdminProposal)(nil),                 // 6: junction.wasm.v1.UpdateAdminProposal
	(*ClearAdminProposal)(nil),                  // 7: junction.wasm.v1.ClearAdminProposal
	(*PinCodesProposal)(nil),                    // 8: junction.wasm.v1.PinCodesProposal
	(*UnpinCodesProposal)(nil),                  // 9: junction.wasm.v1.UnpinCodesProposal
	(*AccessConfigUpdate)(nil),                  // 10: junction.wasm.v1.AccessConfigUpdate
	(*UpdateInstantiateConfigProposal)(nil),     // 11: junction.wasm.v1.UpdateInstantiateConfigProposal
	(*StoreAndInstantiateContractProposal)(nil), // 12: junction.wasm.v1.StoreAndInstantiateContractProposal
	(*AccessConfig)(nil),                        // 13: junction.wasm.v1.AccessConfig
	(*v1beta1.Coin)(nil),                        // 14: cosmos.base.v1beta1.Coin
}
var file_junction_wasm_v1_proposal_legacy_proto_depIdxs = []int32{
	13, // 0: junction.wasm.v1.StoreCodeProposal.instantiate_permission:type_name -> junction.wasm.v1.AccessConfig
	14, // 1: junction.wasm.v1.InstantiateContractProposal.funds:type_name -> cosmos.base.v1beta1.Coin
	14, // 2: junction.wasm.v1.InstantiateContract2Proposal.funds:type_name -> cosmos.base.v1beta1.Coin
	14, // 3: junction.wasm.v1.ExecuteContractProposal.funds:type_name -> cosmos.base.v1beta1.Coin
	13, // 4: junction.wasm.v1.AccessConfigUpdate.instantiate_permission:type_name -> junction.wasm.v1.AccessConfig
	10, // 5: junction.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates:type_name -> junction.wasm.v1.AccessConfigUpdate
	13, // 6: junction.wasm.v1.StoreAndInstantiateContractProposal.instantiate_permission:type_name -> junction.wasm.v1.AccessConfig
	14, // 7: junction.wasm.v1.StoreAndInstantiateContractProposal.funds:type_name -> cosmos.base.v1beta1.Coin
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_junction_wasm_v1_proposal_legacy_proto_init() }
func file_junction_wasm_v1_proposal_legacy_proto_init() {
	if File_junction_wasm_v1_proposal_legacy_proto != nil {
		return
	}
	file_junction_wasm_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreCodeProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantiateContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantiateContract2Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SudoContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearAdminProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PinCodesProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpinCodesProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessConfigUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstantiateConfigProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junction_wasm_v1_proposal_legacy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreAndInstantiateContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_junction_wasm_v1_proposal_legacy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_junction_wasm_v1_proposal_legacy_proto_goTypes,
		DependencyIndexes: file_junction_wasm_v1_proposal_legacy_proto_depIdxs,
		MessageInfos:      file_junction_wasm_v1_proposal_legacy_proto_msgTypes,
	}.Build()
	File_junction_wasm_v1_proposal_legacy_proto = out.File
	file_junction_wasm_v1_proposal_legacy_proto_rawDesc = nil
	file_junction_wasm_v1_proposal_legacy_proto_goTypes = nil
	file_junction_wasm_v1_proposal_legacy_proto_depIdxs = nil
}
