syntax = "proto3";

package junction.vrf;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "junction/vrf/params.proto";

option go_package = "github.com/airchains-network/junction/x/vrf/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams       (MsgUpdateParams      ) returns (MsgUpdateParamsResponse      );
  rpc RegisterCollection (MsgRegisterCollection) returns (MsgRegisterCollectionResponse);
  rpc InitiateVrf        (MsgInitiateVrf       ) returns (MsgInitiateVrfResponse       );
  rpc ValidateVrf        (MsgValidateVrf       ) returns (MsgValidateVrfResponse       );
  rpc ProcessVrfDispute  (MsgProcessVrfDispute ) returns (MsgProcessVrfDisputeResponse );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                      "authority";
  option           (amino.name) = "junction/x/vrf/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgRegisterCollection {
  option (cosmos.msg.v1.signer) = "collectionOwner";
           string collectionOwner = 1;
           string collectionName  = 2;
           string collectionId    = 3;
  repeated string members         = 4;
           uint32 offset          = 5;
}

message MsgRegisterCollectionResponse {
  bool result = 1;
}

message MsgInitiateVrf {
  option (cosmos.msg.v1.signer) = "creator";
  string creator      = 1;
  uint32 key          = 2;
  string collectionId = 3;
  uint64 upperBound   = 4;
  bytes  serializedRc = 5;
  bytes  proof        = 6;
  bytes originDigest = 7;
  bytes  vrfPubkey    = 8;
}

message MsgInitiateVrfResponse {
  bool result = 1;
}

message MsgValidateVrf {
  option (cosmos.msg.v1.signer) = "creator";
  string creator      = 1;
  uint32 key          = 2;
  string collectionId = 3;
  bytes  serializedRc = 4;
}

message MsgValidateVrfResponse {
  bool result = 1;
}

message MsgProcessVrfDispute {
  option (cosmos.msg.v1.signer) = "creator";
           string creator      = 1;
           uint32 key          = 2;
           string collectionId = 3;
  repeated string members      = 4;
  repeated bytes signatures   = 5;
  repeated bytes pubKeys      = 6;
  repeated bool votes          = 8;
}

message MsgProcessVrfDisputeResponse {
  bool result = 1;
  string message = 2;
}

