syntax = "proto3";

package junction.junction;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "junction/junction/params.proto";
import "junction/junction/stations.proto";
import "junction/junction/pods.proto";
import "junction/junction/vrf_record.proto";
import "junction/junction/junction_pagination_response.proto";

option go_package = "github.com/airchains-network/junction/x/junction/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/params";
  
  }
  
  // Queries a list of GetStation items.
  rpc GetStation (QueryGetStationRequest) returns (QueryGetStationResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/get_station/{id}";
  
  }
  
  // Queries a list of ListStations items.
  rpc ListStations (QueryListStationsRequest) returns (QueryListStationsResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/list_stations";
  
  }
  
  // Queries a list of GetStationDetailsByAddress items.
  rpc GetStationDetailsByAddress (QueryGetStationDetailsByAddressRequest) returns (QueryGetStationDetailsByAddressResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/get_station_details_by_address/{address}";
  
  }
  
  // Queries a list of GetPod items.
  rpc GetPod (QueryGetPodRequest) returns (QueryGetPodResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/get_pod/{stationId}/{podNumber}";
  
  }
  
  // Queries a list of GetLatestSubmittedPodNumber items.
  rpc GetLatestSubmittedPodNumber (QueryGetLatestSubmittedPodNumberRequest) returns (QueryGetLatestSubmittedPodNumberResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/get_latest_submitted_pod_number/{stationId}";
  
  }
  
  // Queries a list of GetLatestVerifiedPodNumber items.
  rpc GetLatestVerifiedPodNumber (QueryGetLatestVerifiedPodNumberRequest) returns (QueryGetLatestVerifiedPodNumberResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/get_latest_verified_pod_number/{stationId}";
  
  }
  
  // Queries a list of FetchVrn items.
  rpc FetchVrn (QueryFetchVrnRequest) returns (QueryFetchVrnResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/fetch_vrn/{podNumber}/{stationId}";
  
  }
  
  // Queries a list of GetTracks items.
  rpc GetTracks (QueryGetTracksRequest) returns (QueryGetTracksResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/get_tracks/{stationId}";
  
  }
  
  // Queries a list of IsTrackMember items.
  rpc IsTrackMember (QueryIsTrackMemberRequest) returns (QueryIsTrackMemberResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/is_track_member/{trackAddress}/{stationId}";
  
  }
  
  // Queries a list of ListStationPods items.
  rpc ListStationPods (QueryListStationPodsRequest) returns (QueryListStationPodsResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/list_station_pods/{stationId}";
  
  }
  
  // Queries a list of ListStationPodsCustomPagination items.
  rpc ListStationPodsCustomPagination (QueryListStationPodsCustomPaginationRequest) returns (QueryListStationPodsCustomPaginationResponse) {
    option (google.api.http).get = "/airchains-network/junction/junction/list_station_pods_custom_pagination/{stationId}/{offset}/{limit}/{order}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetStationRequest {
  string id = 1;
}

message QueryGetStationResponse {
  Stations stations = 1;
}

message QueryListStationsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListStationsResponse {
  repeated Stations                               stationsList = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

message QueryGetStationDetailsByAddressRequest {
  string address = 1;
}

message QueryGetStationDetailsByAddressResponse {
  repeated Stations                               stations   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPodRequest {
  string stationId = 1;
  uint64 podNumber = 2;
}

message QueryGetPodResponse {
  Pods pod = 1;
}

message QueryGetLatestSubmittedPodNumberRequest {
  string stationId = 1;
}

message QueryGetLatestSubmittedPodNumberResponse {
  string message   = 1;
  uint64 podNumber = 2;
}

message QueryGetLatestVerifiedPodNumberRequest {
  string stationId = 1;
}

message QueryGetLatestVerifiedPodNumberResponse {
  string message   = 1;
  uint64 podNumber = 2;
}

message QueryFetchVrnRequest {
  uint64 podNumber = 1;
  string stationId = 2;
}

message QueryFetchVrnResponse {
  VrfRecord details = 1;
}

message QueryGetTracksRequest {
  string                                stationId  = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetTracksResponse {
  repeated string                                 tracks     = 1;
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryIsTrackMemberRequest {
  string trackAddress = 1;
  string stationId    = 2;
}

message QueryIsTrackMemberResponse {
  bool result = 1;
}

message QueryListStationPodsRequest {
  string                                stationId  = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryListStationPodsResponse {
  repeated Pods                                   pods       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryListStationPodsCustomPaginationRequest {
  string stationId = 1;
  uint64 offset    = 2;
  uint64 limit     = 3;
  string order     = 4;
}

message QueryListStationPodsCustomPaginationResponse {
  repeated Pods                       pods       = 1 [(gogoproto.nullable) = false];
  JunctionPaginationResponse pagination = 2;
}

