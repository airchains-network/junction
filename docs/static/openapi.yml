swagger: "2.0"
info:
    title: Junction OpenAPI
    version: v0.3.2
consumes:
    - application/json
produces:
    - application/json
paths:
    /airchains-network/junction/rollup/check_moniker_availability/{moniker}:
        get:
            operationId: Query_CheckMonikerAvailability
            parameters:
                - in: path
                  name: moniker
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryCheckMonikerAvailabilityResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of CheckMonikerAvailability items.
            tags:
                - Query
    /airchains-network/junction/rollup/get_all_batches/{rollupId}:
        get:
            operationId: Query_GetAllBatches
            parameters:
                - in: path
                  name: rollupId
                  required: true
                  type: string
                - format: uint64
                  in: query
                  name: offset
                  required: false
                  type: string
                - format: uint64
                  in: query
                  name: limit
                  required: false
                  type: string
                - in: query
                  name: order
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryGetAllBatchesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of GetAllBatches items.
            tags:
                - Query
    /airchains-network/junction/rollup/get_batch_info/{rollupId}/{batchNo}:
        get:
            operationId: Query_GetBatchInfo
            parameters:
                - in: path
                  name: rollupId
                  required: true
                  type: string
                - format: uint64
                  in: path
                  name: batchNo
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryGetBatchInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of GetBatchInfo items.
            tags:
                - Query
    /airchains-network/junction/rollup/get_rollup_by_moniker/{moniker}:
        get:
            operationId: Query_GetRollupByMoniker
            parameters:
                - in: path
                  name: moniker
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryGetRollupByMonikerResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of GetRollupByMoniker items.
            tags:
                - Query
    /airchains-network/junction/rollup/get_rollup_info/{rollupId}:
        get:
            operationId: Query_GetRollupInfo
            parameters:
                - in: path
                  name: rollupId
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryGetRollupInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of GetRollupInfo items.
            tags:
                - Query
    /airchains-network/junction/rollup/get_rollup_staked_amount/{rollupId}:
        get:
            operationId: Query_GetRollupStakedAmount
            parameters:
                - in: path
                  name: rollupId
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryGetRollupStakedAmountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of GetRollupStakedAmount items.
            tags:
                - Query
    /airchains-network/junction/rollup/get_rollups:
        get:
            operationId: Query_GetRollups
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryGetRollupsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of GetRollups items.
            tags:
                - Query
    /airchains-network/junction/rollup/get_stake_details_by_user/{address}:
        get:
            operationId: Query_GetStakeDetailsByUser
            parameters:
                - in: path
                  name: address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryGetStakeDetailsByUserResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of GetStakeDetailsByUser items.
            tags:
                - Query
    /airchains-network/junction/rollup/get_total_staked_amount:
        get:
            operationId: Query_GetTotalStakedAmount
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryGetTotalStakedAmountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Queries a list of GetTotalStakedAmount items.
            tags:
                - Query
    /airchains-network/junction/rollup/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Parameters queries the parameters of the module.
            tags:
                - Query
    /cosmos.auth.v1beta1.Msg/UpdateParams:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the Msg/UpdateParams request type.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.auth.v1beta1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a (governance) operation for updating the x/auth module
                parameters. The authority defaults to the x/gov module account.
            tags:
                - Msg
    /cosmos.authz.v1beta1.Msg/Exec:
        post:
            operationId: Msg_Exec
            parameters:
                - description: |-
                    MsgExec attempts to execute the provided messages using
                    authorizations granted to the grantee. Each message should have only
                    one signer corresponding to the granter of the authorization.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.authz.v1beta1.MsgExec'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.authz.v1beta1.MsgExecResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                Exec attempts to execute the provided messages using
                authorizations granted to the grantee. Each message should have only
                one signer corresponding to the granter of the authorization.
            tags:
                - Msg
    /cosmos.authz.v1beta1.Msg/Grant:
        post:
            operationId: Msg_Grant
            parameters:
                - description: |-
                    MsgGrant is a request type for Grant method. It declares authorization to the grantee
                    on behalf of the granter with the provided expiration time.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.authz.v1beta1.MsgGrant'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.authz.v1beta1.MsgGrantResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                Grant grants the provided authorization to the grantee on the granter's
                account with the provided expiration time. If there is already a grant
                for the given (granter, grantee, Authorization) triple, then the grant
                will be overwritten.
            tags:
                - Msg
    /cosmos.authz.v1beta1.Msg/Revoke:
        post:
            operationId: Msg_Revoke
            parameters:
                - description: |-
                    MsgRevoke revokes any authorization with the provided sdk.Msg type on the
                    granter's account with that has been granted to the grantee.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.authz.v1beta1.MsgRevoke'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.authz.v1beta1.MsgRevokeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                Revoke revokes any authorization corresponding to the provided method name on the
                granter's account that has been granted to the grantee.
            tags:
                - Msg
    /cosmos.autocli.v1.Query/AppOptions:
        post:
            operationId: Query_AppOptions
            parameters:
                - description: AppOptionsRequest is the RemoteInfoService/AppOptions request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.autocli.v1.AppOptionsRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.autocli.v1.AppOptionsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AppOptions returns the autocli options for all of the modules in an app.
            tags:
                - Query
    /cosmos.bank.v1beta1.Msg/MultiSend:
        post:
            operationId: Msg_MultiSend
            parameters:
                - description: MsgMultiSend represents an arbitrary multi-in, multi-out send message.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.bank.v1beta1.MsgMultiSend'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.MsgMultiSendResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: MultiSend defines a method for sending coins from some accounts to other accounts.
            tags:
                - Msg
    /cosmos.bank.v1beta1.Msg/Send:
        post:
            operationId: Msg_Send
            parameters:
                - description: MsgSend represents a message to send coins from one account to another.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.bank.v1beta1.MsgSend'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.MsgSendResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Send defines a method for sending coins from one account to another account.
            tags:
                - Msg
    /cosmos.bank.v1beta1.Msg/SetSendEnabled:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_SetSendEnabled
            parameters:
                - description: |-
                    MsgSetSendEnabled is the Msg/SetSendEnabled request type.

                    Only entries to add/update/delete need to be included.
                    Existing SendEnabled entries that are not included in this
                    message are left unchanged.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.bank.v1beta1.MsgSetSendEnabled'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.MsgSetSendEnabledResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                SetSendEnabled is a governance operation for setting the SendEnabled flag
                on any number of Denoms. Only the entries to add or update should be
                included. Entries that already exist in the store, but that aren't
                included in this message, will be left unchanged.
            tags:
                - Msg
    /cosmos.bank.v1beta1.Msg/UpdateParams:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the Msg/UpdateParams request type.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.bank.v1beta1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a governance operation for updating the x/bank module parameters.
                The authority is defined in the keeper.
            tags:
                - Msg
    /cosmos.circuit.v1.Msg/AuthorizeCircuitBreaker:
        post:
            operationId: Msg_AuthorizeCircuitBreaker
            parameters:
                - description: MsgAuthorizeCircuitBreaker defines the Msg/AuthorizeCircuitBreaker request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.circuit.v1.MsgAuthorizeCircuitBreaker'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.circuit.v1.MsgAuthorizeCircuitBreakerResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                AuthorizeCircuitBreaker allows a super-admin to grant (or revoke) another
                account's circuit breaker permissions.
            tags:
                - Msg
    /cosmos.circuit.v1.Msg/ResetCircuitBreaker:
        post:
            operationId: Msg_ResetCircuitBreaker
            parameters:
                - description: MsgResetCircuitBreaker defines the Msg/ResetCircuitBreaker request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.circuit.v1.MsgResetCircuitBreaker'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.circuit.v1.MsgResetCircuitBreakerResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ResetCircuitBreaker resumes processing of Msg's in the state machine that
                have been been paused using TripCircuitBreaker.
            tags:
                - Msg
    /cosmos.circuit.v1.Msg/TripCircuitBreaker:
        post:
            operationId: Msg_TripCircuitBreaker
            parameters:
                - description: MsgTripCircuitBreaker defines the Msg/TripCircuitBreaker request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.circuit.v1.MsgTripCircuitBreaker'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.circuit.v1.MsgTripCircuitBreakerResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TripCircuitBreaker pauses processing of Msg's in the state machine.
            tags:
                - Msg
    /cosmos.consensus.v1.Msg/UpdateParams:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_UpdateParams
            parameters:
                - description: MsgUpdateParams is the Msg/UpdateParams request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.consensus.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.consensus.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a governance operation for updating the x/consensus module parameters.
                The authority is defined in the keeper.
            tags:
                - Msg
    /cosmos.crisis.v1beta1.Msg/UpdateParams:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the Msg/UpdateParams request type.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.crisis.v1beta1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.crisis.v1beta1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a governance operation for updating the x/crisis module
                parameters. The authority is defined in the keeper.
            tags:
                - Msg
    /cosmos.crisis.v1beta1.Msg/VerifyInvariant:
        post:
            operationId: Msg_VerifyInvariant
            parameters:
                - description: MsgVerifyInvariant represents a message to verify a particular invariance.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.crisis.v1beta1.MsgVerifyInvariant'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.crisis.v1beta1.MsgVerifyInvariantResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: VerifyInvariant defines a method to verify a particular invariant.
            tags:
                - Msg
    /cosmos.distribution.v1beta1.Msg/CommunityPoolSpend:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_CommunityPoolSpend
            parameters:
                - description: |-
                    MsgCommunityPoolSpend defines a message for sending tokens from the community
                    pool to another account. This message is typically executed via a governance
                    proposal with the governance module being the executing authority.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.MsgCommunityPoolSpend'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                CommunityPoolSpend defines a governance operation for sending tokens from
                the community pool in the x/distribution module to another account, which
                could be the governance module itself. The authority is defined in the
                keeper.
            tags:
                - Msg
    /cosmos.distribution.v1beta1.Msg/DepositValidatorRewardsPool:
        post:
            description: 'Since: cosmos-sdk 0.50'
            operationId: Msg_DepositValidatorRewardsPool
            parameters:
                - description: |-
                    DepositValidatorRewardsPool defines the request structure to provide
                    additional rewards to delegators from a specific validator.

                    Since: cosmos-sdk 0.50
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                DepositValidatorRewardsPool defines a method to provide additional rewards
                to delegators to a specific validator.
            tags:
                - Msg
    /cosmos.distribution.v1beta1.Msg/FundCommunityPool:
        post:
            operationId: Msg_FundCommunityPool
            parameters:
                - description: |-
                    MsgFundCommunityPool allows an account to directly
                    fund the community pool.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.MsgFundCommunityPool'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                FundCommunityPool defines a method to allow an account to directly
                fund the community pool.
            tags:
                - Msg
    /cosmos.distribution.v1beta1.Msg/SetWithdrawAddress:
        post:
            operationId: Msg_SetWithdrawAddress
            parameters:
                - description: |-
                    MsgSetWithdrawAddress sets the withdraw address for
                    a delegator (or validator self-delegation).
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.MsgSetWithdrawAddress'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                SetWithdrawAddress defines a method to change the withdraw address
                for a delegator (or validator self-delegation).
            tags:
                - Msg
    /cosmos.distribution.v1beta1.Msg/UpdateParams:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the Msg/UpdateParams request type.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a governance operation for updating the x/distribution
                module parameters. The authority is defined in the keeper.
            tags:
                - Msg
    /cosmos.distribution.v1beta1.Msg/WithdrawDelegatorReward:
        post:
            operationId: Msg_WithdrawDelegatorReward
            parameters:
                - description: |-
                    MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
                    from a single validator.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                WithdrawDelegatorReward defines a method to withdraw rewards of delegator
                from a single validator.
            tags:
                - Msg
    /cosmos.distribution.v1beta1.Msg/WithdrawValidatorCommission:
        post:
            operationId: Msg_WithdrawValidatorCommission
            parameters:
                - description: |-
                    MsgWithdrawValidatorCommission withdraws the full commission to the validator
                    address.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                WithdrawValidatorCommission defines a method to withdraw the
                full commission to the validator address.
            tags:
                - Msg
    /cosmos.evidence.v1beta1.Msg/SubmitEvidence:
        post:
            operationId: Msg_SubmitEvidence
            parameters:
                - description: |-
                    MsgSubmitEvidence represents a message that supports submitting arbitrary
                    Evidence of misbehavior such as equivocation or counterfactual signing.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.evidence.v1beta1.MsgSubmitEvidence'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                SubmitEvidence submits an arbitrary Evidence of misbehavior such as equivocation or
                counterfactual signing.
            tags:
                - Msg
    /cosmos.feegrant.v1beta1.Msg/GrantAllowance:
        post:
            operationId: Msg_GrantAllowance
            parameters:
                - description: |-
                    MsgGrantAllowance adds permission for Grantee to spend up to Allowance
                    of fees from the account of Granter.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgGrantAllowance'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                GrantAllowance grants fee allowance to the grantee on the granter's
                account with the provided expiration time.
            tags:
                - Msg
    /cosmos.feegrant.v1beta1.Msg/PruneAllowances:
        post:
            description: Since cosmos-sdk 0.50
            operationId: Msg_PruneAllowances
            parameters:
                - description: |-
                    MsgPruneAllowances prunes expired fee allowances.

                    Since cosmos-sdk 0.50
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgPruneAllowances'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: PruneAllowances prunes expired fee allowances, currently up to 75 at a time.
            tags:
                - Msg
    /cosmos.feegrant.v1beta1.Msg/RevokeAllowance:
        post:
            operationId: Msg_RevokeAllowance
            parameters:
                - description: MsgRevokeAllowance removes any existing Allowance from Granter to Grantee.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgRevokeAllowance'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                RevokeAllowance revokes any fee allowance of granter's account that
                has been granted to the grantee.
            tags:
                - Msg
    /cosmos.gov.v1beta1.Msg/Deposit:
        post:
            operationId: Msg_Deposit
            parameters:
                - description: MsgDeposit defines a message to submit a deposit to an existing proposal.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1beta1.MsgDeposit'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.MsgDepositResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Deposit defines a method to add deposit on a specific proposal.
            tags:
                - Msg
    /cosmos.gov.v1beta1.Msg/SubmitProposal:
        post:
            operationId: Msg_SubmitProposal
            parameters:
                - description: |-
                    MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
                    proposal Content.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1beta1.MsgSubmitProposal'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.MsgSubmitProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SubmitProposal defines a method to create new proposal given a content.
            tags:
                - Msg
    /cosmos.gov.v1beta1.Msg/Vote:
        post:
            operationId: Msg_Vote
            parameters:
                - description: MsgVote defines a message to cast a vote.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1beta1.MsgVote'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.MsgVoteResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Vote defines a method to add a vote on a specific proposal.
            tags:
                - Msg
    /cosmos.gov.v1beta1.Msg/VoteWeighted:
        post:
            description: 'Since: cosmos-sdk 0.43'
            operationId: Msg_VoteWeighted
            parameters:
                - description: |-
                    MsgVoteWeighted defines a message to cast a vote.

                    Since: cosmos-sdk 0.43
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1beta1.MsgVoteWeighted'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.MsgVoteWeightedResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: VoteWeighted defines a method to add a weighted vote on a specific proposal.
            tags:
                - Msg
    /cosmos.gov.v1.Msg/CancelProposal:
        post:
            description: 'Since: cosmos-sdk 0.50'
            operationId: Msg_CancelProposal
            parameters:
                - description: |-
                    MsgCancelProposal is the Msg/CancelProposal request type.

                    Since: cosmos-sdk 0.50
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1.MsgCancelProposal'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.MsgCancelProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CancelProposal defines a method to cancel governance proposal
            tags:
                - Msg
    /cosmos.gov.v1.Msg/Deposit:
        post:
            operationId: Msg_Deposit
            parameters:
                - description: MsgDeposit defines a message to submit a deposit to an existing proposal.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1.MsgDeposit'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.MsgDepositResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Deposit defines a method to add deposit on a specific proposal.
            tags:
                - Msg
    /cosmos.gov.v1.Msg/ExecLegacyContent:
        post:
            operationId: Msg_ExecLegacyContent
            parameters:
                - description: |-
                    MsgExecLegacyContent is used to wrap the legacy content field into a message.
                    This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1.MsgExecLegacyContent'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.MsgExecLegacyContentResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ExecLegacyContent defines a Msg to be in included in a MsgSubmitProposal
                to execute a legacy content-based proposal.
            tags:
                - Msg
    /cosmos.gov.v1.Msg/SubmitProposal:
        post:
            operationId: Msg_SubmitProposal
            parameters:
                - description: |-
                    MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
                    proposal Content.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1.MsgSubmitProposal'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.MsgSubmitProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SubmitProposal defines a method to create new proposal given the messages.
            tags:
                - Msg
    /cosmos.gov.v1.Msg/UpdateParams:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the Msg/UpdateParams request type.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a governance operation for updating the x/gov module
                parameters. The authority is defined in the keeper.
            tags:
                - Msg
    /cosmos.gov.v1.Msg/Vote:
        post:
            operationId: Msg_Vote
            parameters:
                - description: MsgVote defines a message to cast a vote.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1.MsgVote'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.MsgVoteResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Vote defines a method to add a vote on a specific proposal.
            tags:
                - Msg
    /cosmos.gov.v1.Msg/VoteWeighted:
        post:
            operationId: Msg_VoteWeighted
            parameters:
                - description: MsgVoteWeighted defines a message to cast a vote.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.gov.v1.MsgVoteWeighted'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.MsgVoteWeightedResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: VoteWeighted defines a method to add a weighted vote on a specific proposal.
            tags:
                - Msg
    /cosmos.group.v1.Msg/CreateGroup:
        post:
            operationId: Msg_CreateGroup
            parameters:
                - description: MsgCreateGroup is the Msg/CreateGroup request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgCreateGroup'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CreateGroup creates a new group with an admin account address, a list of members and some optional metadata.
            tags:
                - Msg
    /cosmos.group.v1.Msg/CreateGroupPolicy:
        post:
            operationId: Msg_CreateGroupPolicy
            parameters:
                - description: MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupPolicy'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupPolicyResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CreateGroupPolicy creates a new group policy using given DecisionPolicy.
            tags:
                - Msg
    /cosmos.group.v1.Msg/CreateGroupWithPolicy:
        post:
            operationId: Msg_CreateGroupWithPolicy
            parameters:
                - description: MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupWithPolicy'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupWithPolicyResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CreateGroupWithPolicy creates a new group with policy.
            tags:
                - Msg
    /cosmos.group.v1.Msg/Exec:
        post:
            operationId: Msg_Exec
            parameters:
                - description: MsgExec is the Msg/Exec request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgExec'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgExecResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Exec executes a proposal.
            tags:
                - Msg
    /cosmos.group.v1.Msg/LeaveGroup:
        post:
            operationId: Msg_LeaveGroup
            parameters:
                - description: MsgLeaveGroup is the Msg/LeaveGroup request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgLeaveGroup'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgLeaveGroupResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: LeaveGroup allows a group member to leave the group.
            tags:
                - Msg
    /cosmos.group.v1.Msg/SubmitProposal:
        post:
            operationId: Msg_SubmitProposal
            parameters:
                - description: MsgSubmitProposal is the Msg/SubmitProposal request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgSubmitProposal'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgSubmitProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SubmitProposal submits a new proposal.
            tags:
                - Msg
    /cosmos.group.v1.Msg/UpdateGroupAdmin:
        post:
            operationId: Msg_UpdateGroupAdmin
            parameters:
                - description: MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupAdmin'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupAdminResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateGroupAdmin updates the group admin with given group id and previous admin address.
            tags:
                - Msg
    /cosmos.group.v1.Msg/UpdateGroupMembers:
        post:
            operationId: Msg_UpdateGroupMembers
            parameters:
                - description: MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupMembers'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupMembersResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateGroupMembers updates the group members with given group id and admin address.
            tags:
                - Msg
    /cosmos.group.v1.Msg/UpdateGroupMetadata:
        post:
            operationId: Msg_UpdateGroupMetadata
            parameters:
                - description: MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupMetadata'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupMetadataResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateGroupMetadata updates the group metadata with given group id and admin address.
            tags:
                - Msg
    /cosmos.group.v1.Msg/UpdateGroupPolicyAdmin:
        post:
            operationId: Msg_UpdateGroupPolicyAdmin
            parameters:
                - description: MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyAdmin'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateGroupPolicyAdmin updates a group policy admin.
            tags:
                - Msg
    /cosmos.group.v1.Msg/UpdateGroupPolicyDecisionPolicy:
        post:
            operationId: Msg_UpdateGroupPolicyDecisionPolicy
            parameters:
                - description: MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateGroupPolicyDecisionPolicy allows a group policy's decision policy to be updated.
            tags:
                - Msg
    /cosmos.group.v1.Msg/UpdateGroupPolicyMetadata:
        post:
            operationId: Msg_UpdateGroupPolicyMetadata
            parameters:
                - description: MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyMetadata'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateGroupPolicyMetadata updates a group policy metadata.
            tags:
                - Msg
    /cosmos.group.v1.Msg/Vote:
        post:
            operationId: Msg_Vote
            parameters:
                - description: MsgVote is the Msg/Vote request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgVote'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgVoteResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Vote allows a voter to vote on a proposal.
            tags:
                - Msg
    /cosmos.group.v1.Msg/WithdrawProposal:
        post:
            operationId: Msg_WithdrawProposal
            parameters:
                - description: MsgWithdrawProposal is the Msg/WithdrawProposal request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.group.v1.MsgWithdrawProposal'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.MsgWithdrawProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: WithdrawProposal withdraws a proposal.
            tags:
                - Msg
    /cosmos.mint.v1beta1.Msg/UpdateParams:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the Msg/UpdateParams request type.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.mint.v1beta1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.mint.v1beta1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a governance operation for updating the x/mint module
                parameters. The authority is defaults to the x/gov module account.
            tags:
                - Msg
    /cosmos.nft.v1beta1.Msg/Send:
        post:
            operationId: Msg_Send
            parameters:
                - description: MsgSend represents a message to send a nft from one account to another account.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.nft.v1beta1.MsgSend'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.nft.v1beta1.MsgSendResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Send defines a method to send a nft from one account to another account.
            tags:
                - Msg
    /cosmos.slashing.v1beta1.Msg/Unjail:
        post:
            operationId: Msg_Unjail
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.slashing.v1beta1.MsgUnjail'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.slashing.v1beta1.MsgUnjailResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                Unjail defines a method for unjailing a jailed validator, thus returning
                them into the bonded validator set, so they can begin receiving provisions
                and rewards again.
            tags:
                - Msg
    /cosmos.slashing.v1beta1.Msg/UpdateParams:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the Msg/UpdateParams request type.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.slashing.v1beta1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.slashing.v1beta1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a governance operation for updating the x/slashing module
                parameters. The authority defaults to the x/gov module account.
            tags:
                - Msg
    /cosmos.staking.v1beta1.Msg/BeginRedelegate:
        post:
            operationId: Msg_BeginRedelegate
            parameters:
                - description: |-
                    MsgBeginRedelegate defines a SDK message for performing a redelegation
                    of coins from a delegator and source validator to a destination validator.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.staking.v1beta1.MsgBeginRedelegate'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.MsgBeginRedelegateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                BeginRedelegate defines a method for performing a redelegation
                of coins from a delegator and source validator to a destination validator.
            tags:
                - Msg
    /cosmos.staking.v1beta1.Msg/CancelUnbondingDelegation:
        post:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Msg_CancelUnbondingDelegation
            parameters:
                - description: 'Since: cosmos-sdk 0.46'
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
                and delegate back to previous validator.
            tags:
                - Msg
    /cosmos.staking.v1beta1.Msg/CreateValidator:
        post:
            operationId: Msg_CreateValidator
            parameters:
                - description: MsgCreateValidator defines a SDK message for creating a new validator.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.staking.v1beta1.MsgCreateValidator'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.MsgCreateValidatorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CreateValidator defines a method for creating a new validator.
            tags:
                - Msg
    /cosmos.staking.v1beta1.Msg/Delegate:
        post:
            operationId: Msg_Delegate
            parameters:
                - description: |-
                    MsgDelegate defines a SDK message for performing a delegation of coins
                    from a delegator to a validator.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.staking.v1beta1.MsgDelegate'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.MsgDelegateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                Delegate defines a method for performing a delegation of coins
                from a delegator to a validator.
            tags:
                - Msg
    /cosmos.staking.v1beta1.Msg/EditValidator:
        post:
            operationId: Msg_EditValidator
            parameters:
                - description: MsgEditValidator defines a SDK message for editing an existing validator.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.staking.v1beta1.MsgEditValidator'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.MsgEditValidatorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: EditValidator defines a method for editing an existing validator.
            tags:
                - Msg
    /cosmos.staking.v1beta1.Msg/Undelegate:
        post:
            operationId: Msg_Undelegate
            parameters:
                - description: |-
                    MsgUndelegate defines a SDK message for performing an undelegation from a
                    delegate and a validator.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.staking.v1beta1.MsgUndelegate'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.MsgUndelegateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                Undelegate defines a method for performing an undelegation from a
                delegate and a validator.
            tags:
                - Msg
    /cosmos.staking.v1beta1.Msg/UpdateParams:
        post:
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the Msg/UpdateParams request type.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.staking.v1beta1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines an operation for updating the x/staking module
                parameters.
                Since: cosmos-sdk 0.47
            tags:
                - Msg
    /cosmos.store.streaming.abci.ABCIListenerService/ListenCommit:
        post:
            operationId: ABCIListenerService_ListenCommit
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.store.streaming.abci.ListenCommitRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.store.streaming.abci.ListenCommitResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ListenCommit is the corresponding endpoint for ABCIListener.ListenCommit
            tags:
                - ABCIListenerService
    /cosmos.store.streaming.abci.ABCIListenerService/ListenFinalizeBlock:
        post:
            operationId: ABCIListenerService_ListenFinalizeBlock
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.store.streaming.abci.ListenFinalizeBlockRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.store.streaming.abci.ListenFinalizeBlockResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ListenFinalizeBlock is the corresponding endpoint for ABCIListener.ListenEndBlock
            tags:
                - ABCIListenerService
    /cosmos.upgrade.v1beta1.Msg/CancelUpgrade:
        post:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Msg_CancelUpgrade
            parameters:
                - description: |-
                    MsgCancelUpgrade is the Msg/CancelUpgrade request type.

                    Since: cosmos-sdk 0.46
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.upgrade.v1beta1.MsgCancelUpgrade'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                CancelUpgrade is a governance operation for cancelling a previously
                approved software upgrade.
            tags:
                - Msg
    /cosmos.upgrade.v1beta1.Msg/SoftwareUpgrade:
        post:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Msg_SoftwareUpgrade
            parameters:
                - description: |-
                    MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.

                    Since: cosmos-sdk 0.46
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SoftwareUpgrade is a governance operation for initiating a software upgrade.
            tags:
                - Msg
    /cosmos.vesting.v1beta1.Msg/CreatePeriodicVestingAccount:
        post:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Msg_CreatePeriodicVestingAccount
            parameters:
                - description: |-
                    MsgCreateVestingAccount defines a message that enables creating a vesting
                    account.

                    Since: cosmos-sdk 0.46
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                CreatePeriodicVestingAccount defines a method that enables creating a
                periodic vesting account.
            tags:
                - Msg
    /cosmos.vesting.v1beta1.Msg/CreatePermanentLockedAccount:
        post:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Msg_CreatePermanentLockedAccount
            parameters:
                - description: |-
                    MsgCreatePermanentLockedAccount defines a message that enables creating a permanent
                    locked account.

                    Since: cosmos-sdk 0.46
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                CreatePermanentLockedAccount defines a method that enables creating a permanent
                locked account.
            tags:
                - Msg
    /cosmos.vesting.v1beta1.Msg/CreateVestingAccount:
        post:
            operationId: Msg_CreateVestingAccount
            parameters:
                - description: |-
                    MsgCreateVestingAccount defines a message that enables creating a vesting
                    account.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreateVestingAccount'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                CreateVestingAccount defines a method that enables creating a vesting
                account.
            tags:
                - Msg
    /cosmos/auth/v1beta1/account_info/{address}:
        get:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Query_AccountInfo
            parameters:
                - description: address is the account address string.
                  in: path
                  name: address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AccountInfo queries account info which is common to all account types.
            tags:
                - Query
    /cosmos/auth/v1beta1/accounts:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.

                Since: cosmos-sdk 0.43
            operationId: Query_Accounts
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Accounts returns all the existing accounts.
            tags:
                - Query
    /cosmos/auth/v1beta1/accounts/{address}:
        get:
            operationId: Query_Account
            parameters:
                - description: address defines the address to query for.
                  in: path
                  name: address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Account returns account details based on address.
            tags:
                - Query
    /cosmos/auth/v1beta1/address_by_id/{id}:
        get:
            description: 'Since: cosmos-sdk 0.46.2'
            operationId: Query_AccountAddressByID
            parameters:
                - description: |-
                    Deprecated, use account_id instead

                    id is the account number of the address to be queried. This field
                    should have been an uint64 (like all account numbers), and will be
                    updated to uint64 in a future version of the auth query.
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: string
                - description: |-
                    account_id is the account number of the address to be queried.

                    Since: cosmos-sdk 0.47
                  format: uint64
                  in: query
                  name: account_id
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AccountAddressByID returns account address based on account number.
            tags:
                - Query
    /cosmos/auth/v1beta1/bech32:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_Bech32Prefix
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.Bech32PrefixResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Bech32Prefix queries bech32Prefix
            tags:
                - Query
    /cosmos/auth/v1beta1/bech32/{address_bytes}:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_AddressBytesToString
            parameters:
                - format: byte
                  in: path
                  name: address_bytes
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.AddressBytesToStringResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AddressBytesToString converts Account Address bytes to string
            tags:
                - Query
    /cosmos/auth/v1beta1/bech32/{address_string}:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_AddressStringToBytes
            parameters:
                - in: path
                  name: address_string
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.AddressStringToBytesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AddressStringToBytes converts Address string to bytes
            tags:
                - Query
    /cosmos/auth/v1beta1/module_accounts:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_ModuleAccounts
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.QueryModuleAccountsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ModuleAccounts returns all the existing module accounts.
            tags:
                - Query
    /cosmos/auth/v1beta1/module_accounts/{name}:
        get:
            operationId: Query_ModuleAccountByName
            parameters:
                - in: path
                  name: name
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ModuleAccountByName returns the module account info by module name
            tags:
                - Query
    /cosmos/auth/v1beta1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.auth.v1beta1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries all parameters.
            tags:
                - Query
    /cosmos/authz/v1beta1/grants:
        get:
            operationId: Query_Grants
            parameters:
                - in: query
                  name: granter
                  required: false
                  type: string
                - in: query
                  name: grantee
                  required: false
                  type: string
                - description: Optional, msg_type_url, when set, will query only grants matching given msg type.
                  in: query
                  name: msg_type_url
                  required: false
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.authz.v1beta1.QueryGrantsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Returns list of `Authorization`, granted to the grantee by the granter.
            tags:
                - Query
    /cosmos/authz/v1beta1/grants/grantee/{grantee}:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_GranteeGrants
            parameters:
                - in: path
                  name: grantee
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.authz.v1beta1.QueryGranteeGrantsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
            tags:
                - Query
    /cosmos/authz/v1beta1/grants/granter/{granter}:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_GranterGrants
            parameters:
                - in: path
                  name: granter
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.authz.v1beta1.QueryGranterGrantsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
            tags:
                - Query
    /cosmos/bank/v1beta1/balances/{address}:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_AllBalances
            parameters:
                - description: address is the address to query balances for.
                  in: path
                  name: address
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
                - description: |-
                    resolve_denom is the flag to resolve the denom into a human-readable form from the metadata.

                    Since: cosmos-sdk 0.50
                  in: query
                  name: resolve_denom
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryAllBalancesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AllBalances queries the balance of all coins for a single account.
            tags:
                - Query
    /cosmos/bank/v1beta1/balances/{address}/by_denom:
        get:
            operationId: Query_Balance
            parameters:
                - description: address is the address to query balances for.
                  in: path
                  name: address
                  required: true
                  type: string
                - description: denom is the coin denom to query balances for.
                  in: query
                  name: denom
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryBalanceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Balance queries the balance of a single coin for a single account.
            tags:
                - Query
    /cosmos/bank/v1beta1/denom_owners/{denom}:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.

                Since: cosmos-sdk 0.46
            operationId: Query_DenomOwners
            parameters:
                - description: denom defines the coin denomination to query all account holders for.
                  in: path
                  name: denom
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomOwnersResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                DenomOwners queries for all account addresses that own a particular token
                denomination.
            tags:
                - Query
    /cosmos/bank/v1beta1/denom_owners_by_query:
        get:
            description: 'Since: cosmos-sdk 0.50.3'
            operationId: Query_DenomOwnersByQuery
            parameters:
                - description: denom defines the coin denomination to query all account holders for.
                  in: query
                  name: denom
                  required: false
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                DenomOwnersByQuery queries for all account addresses that own a particular token
                denomination.
            tags:
                - Query
    /cosmos/bank/v1beta1/denoms_metadata:
        get:
            operationId: Query_DenomsMetadata
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomsMetadataResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                DenomsMetadata queries the client metadata for all registered coin
                denominations.
            tags:
                - Query
    /cosmos/bank/v1beta1/denoms_metadata/{denom}:
        get:
            operationId: Query_DenomMetadata
            parameters:
                - description: denom is the coin denom to query the metadata for.
                  in: path
                  name: denom
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomMetadataResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DenomMetadata queries the client metadata of a given coin denomination.
            tags:
                - Query
    /cosmos/bank/v1beta1/denoms_metadata_by_query_string:
        get:
            operationId: Query_DenomMetadataByQueryString
            parameters:
                - description: denom is the coin denom to query the metadata for.
                  in: query
                  name: denom
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DenomMetadataByQueryString queries the client metadata of a given coin denomination.
            tags:
                - Query
    /cosmos/bank/v1beta1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries the parameters of x/bank module.
            tags:
                - Query
    /cosmos/bank/v1beta1/send_enabled:
        get:
            description: |-
                This query only returns denominations that have specific SendEnabled settings.
                Any denomination that does not have a specific setting will use the default
                params.default_send_enabled, and will not be returned by this query.

                Since: cosmos-sdk 0.47
            operationId: Query_SendEnabled
            parameters:
                - collectionFormat: multi
                  description: denoms is the specific denoms you want look up. Leave empty to get all entries.
                  in: query
                  items:
                    type: string
                  name: denoms
                  required: false
                  type: array
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QuerySendEnabledResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SendEnabled queries for SendEnabled entries.
            tags:
                - Query
    /cosmos/bank/v1beta1/spendable_balances/{address}:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.

                Since: cosmos-sdk 0.46
            operationId: Query_SpendableBalances
            parameters:
                - description: address is the address to query spendable balances for.
                  in: path
                  name: address
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QuerySpendableBalancesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                SpendableBalances queries the spendable balance of all coins for a single
                account.
            tags:
                - Query
    /cosmos/bank/v1beta1/spendable_balances/{address}/by_denom:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.

                Since: cosmos-sdk 0.47
            operationId: Query_SpendableBalanceByDenom
            parameters:
                - description: address is the address to query balances for.
                  in: path
                  name: address
                  required: true
                  type: string
                - description: denom is the coin denom to query balances for.
                  in: query
                  name: denom
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                SpendableBalanceByDenom queries the spendable balance of a single denom for
                a single account.
            tags:
                - Query
    /cosmos/bank/v1beta1/supply:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_TotalSupply
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QueryTotalSupplyResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TotalSupply queries the total supply of all coins.
            tags:
                - Query
    /cosmos/bank/v1beta1/supply/by_denom:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_SupplyOf
            parameters:
                - description: denom is the coin denom to query balances for.
                  in: query
                  name: denom
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.bank.v1beta1.QuerySupplyOfResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SupplyOf queries the supply of a single coin.
            tags:
                - Query
    /cosmos/base/node/v1beta1/config:
        get:
            operationId: Service_Config
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.node.v1beta1.ConfigResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Config queries for the operator configuration.
            tags:
                - Service
    /cosmos/base/node/v1beta1/status:
        get:
            operationId: Service_Status
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.node.v1beta1.StatusResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Status queries for the node status.
            tags:
                - Service
    /cosmos/base/reflection/v1beta1/app_descriptor/authn:
        get:
            operationId: ReflectionService_GetAuthnDescriptor
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                GetAuthnDescriptor returns information on how to authenticate transactions in the application
                NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
                future releases of the cosmos-sdk.
            tags:
                - ReflectionService
    /cosmos/base/reflection/v1beta1/app_descriptor/chain:
        get:
            operationId: ReflectionService_GetChainDescriptor
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetChainDescriptor returns the description of the chain
            tags:
                - ReflectionService
    /cosmos/base/reflection/v1beta1/app_descriptor/codec:
        get:
            operationId: ReflectionService_GetCodecDescriptor
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetCodecDescriptor returns the descriptor of the codec of the application
            tags:
                - ReflectionService
    /cosmos/base/reflection/v1beta1/app_descriptor/configuration:
        get:
            operationId: ReflectionService_GetConfigurationDescriptor
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
            tags:
                - ReflectionService
    /cosmos/base/reflection/v1beta1/app_descriptor/query_services:
        get:
            operationId: ReflectionService_GetQueryServicesDescriptor
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetQueryServicesDescriptor returns the available gRPC queryable services of the application
            tags:
                - ReflectionService
    /cosmos/base/reflection/v1beta1/app_descriptor/tx_descriptor:
        get:
            operationId: ReflectionService_GetTxDescriptor
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetTxDescriptor returns information on the used transaction object and available msgs that can be used
            tags:
                - ReflectionService
    /cosmos/base/reflection/v1beta1/interfaces:
        get:
            operationId: ReflectionService_ListAllInterfaces
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.reflection.v1beta1.ListAllInterfacesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ListAllInterfaces lists all the interfaces registered in the interface
                registry.
            tags:
                - ReflectionService
    /cosmos/base/reflection/v1beta1/interfaces/{interface_name}/implementations:
        get:
            operationId: ReflectionService_ListImplementations
            parameters:
                - description: interface_name defines the interface to query the implementations for.
                  in: path
                  name: interface_name
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.reflection.v1beta1.ListImplementationsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ListImplementations list all the concrete types that implement a given
                interface.
            tags:
                - ReflectionService
    /cosmos/base/tendermint/v1beta1/abci_query:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Service_ABCIQuery
            parameters:
                - format: byte
                  in: query
                  name: data
                  required: false
                  type: string
                - in: query
                  name: path
                  required: false
                  type: string
                - format: int64
                  in: query
                  name: height
                  required: false
                  type: string
                - in: query
                  name: prove
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ABCIQueryResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ABCIQuery defines a query handler that supports ABCI queries directly to the
                application, bypassing Tendermint completely. The ABCI query must contain
                a valid and supported path, including app, custom, p2p, and store.
            tags:
                - Service
    /cosmos/base/tendermint/v1beta1/blocks/{height}:
        get:
            operationId: Service_GetBlockByHeight
            parameters:
                - format: int64
                  in: path
                  name: height
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetBlockByHeight queries block for given height.
            tags:
                - Service
    /cosmos/base/tendermint/v1beta1/blocks/latest:
        get:
            operationId: Service_GetLatestBlock
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetLatestBlockResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetLatestBlock returns the latest block.
            tags:
                - Service
    /cosmos/base/tendermint/v1beta1/node_info:
        get:
            operationId: Service_GetNodeInfo
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetNodeInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetNodeInfo queries the current node info.
            tags:
                - Service
    /cosmos/base/tendermint/v1beta1/syncing:
        get:
            operationId: Service_GetSyncing
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetSyncingResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetSyncing queries node syncing.
            tags:
                - Service
    /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
        get:
            operationId: Service_GetValidatorSetByHeight
            parameters:
                - format: int64
                  in: path
                  name: height
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetValidatorSetByHeight queries validator-set at a given height.
            tags:
                - Service
    /cosmos/base/tendermint/v1beta1/validatorsets/latest:
        get:
            operationId: Service_GetLatestValidatorSet
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetLatestValidatorSet queries latest validator-set.
            tags:
                - Service
    /cosmos/circuit/v1/accounts:
        get:
            operationId: Query_Accounts
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.circuit.v1.AccountsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Account returns account permissions.
            tags:
                - Query
    /cosmos/circuit/v1/accounts/{address}:
        get:
            operationId: Query_Account
            parameters:
                - in: path
                  name: address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.circuit.v1.AccountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Account returns account permissions.
            tags:
                - Query
    /cosmos/circuit/v1/disable_list:
        get:
            operationId: Query_DisabledList
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.circuit.v1.DisabledListResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DisabledList returns a list of disabled message urls
            tags:
                - Query
    /cosmos/consensus/v1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.consensus.v1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries the parameters of x/consensus module.
            tags:
                - Query
    /cosmos/distribution/v1beta1/community_pool:
        get:
            operationId: Query_CommunityPool
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryCommunityPoolResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CommunityPool queries the community pool coins.
            tags:
                - Query
    /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
        get:
            operationId: Query_DelegationTotalRewards
            parameters:
                - description: delegator_address defines the delegator address to query for.
                  in: path
                  name: delegator_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                DelegationTotalRewards queries the total rewards accrued by each
                validator.
            tags:
                - Query
    /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
        get:
            operationId: Query_DelegationRewards
            parameters:
                - description: delegator_address defines the delegator address to query for.
                  in: path
                  name: delegator_address
                  required: true
                  type: string
                - description: validator_address defines the validator address to query for.
                  in: path
                  name: validator_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DelegationRewards queries the total rewards accrued by a delegation.
            tags:
                - Query
    /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
        get:
            operationId: Query_DelegatorValidators
            parameters:
                - description: delegator_address defines the delegator address to query for.
                  in: path
                  name: delegator_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DelegatorValidators queries the validators of a delegator.
            tags:
                - Query
    /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
        get:
            operationId: Query_DelegatorWithdrawAddress
            parameters:
                - description: delegator_address defines the delegator address to query for.
                  in: path
                  name: delegator_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
            tags:
                - Query
    /cosmos/distribution/v1beta1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries params of the distribution module.
            tags:
                - Query
    /cosmos/distribution/v1beta1/validators/{validator_address}:
        get:
            operationId: Query_ValidatorDistributionInfo
            parameters:
                - description: validator_address defines the validator address to query for.
                  in: path
                  name: validator_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
            tags:
                - Query
    /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
        get:
            operationId: Query_ValidatorCommission
            parameters:
                - description: validator_address defines the validator address to query for.
                  in: path
                  name: validator_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ValidatorCommission queries accumulated commission for a validator.
            tags:
                - Query
    /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
        get:
            operationId: Query_ValidatorOutstandingRewards
            parameters:
                - description: validator_address defines the validator address to query for.
                  in: path
                  name: validator_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ValidatorOutstandingRewards queries rewards of a validator address.
            tags:
                - Query
    /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
        get:
            operationId: Query_ValidatorSlashes
            parameters:
                - description: validator_address defines the validator address to query for.
                  in: path
                  name: validator_address
                  required: true
                  type: string
                - description: starting_height defines the optional starting height to query the slashes.
                  format: uint64
                  in: query
                  name: starting_height
                  required: false
                  type: string
                - description: starting_height defines the optional ending height to query the slashes.
                  format: uint64
                  in: query
                  name: ending_height
                  required: false
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ValidatorSlashes queries slash events of a validator.
            tags:
                - Query
    /cosmos/evidence/v1beta1/evidence:
        get:
            operationId: Query_AllEvidence
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.evidence.v1beta1.QueryAllEvidenceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AllEvidence queries all evidence.
            tags:
                - Query
    /cosmos/evidence/v1beta1/evidence/{hash}:
        get:
            operationId: Query_Evidence
            parameters:
                - description: |-
                    hash defines the evidence hash of the requested evidence.

                    Since: cosmos-sdk 0.47
                  in: path
                  name: hash
                  required: true
                  type: string
                - description: |-
                    evidence_hash defines the hash of the requested evidence.
                    Deprecated: Use hash, a HEX encoded string, instead.
                  format: byte
                  in: query
                  name: evidence_hash
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.evidence.v1beta1.QueryEvidenceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Evidence queries evidence based on evidence hash.
            tags:
                - Query
    /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
        get:
            operationId: Query_Allowance
            parameters:
                - description: granter is the address of the user granting an allowance of their funds.
                  in: path
                  name: granter
                  required: true
                  type: string
                - description: grantee is the address of the user being granted an allowance of another user's funds.
                  in: path
                  name: grantee
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowanceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Allowance returns granted allwance to the grantee by the granter.
            tags:
                - Query
    /cosmos/feegrant/v1beta1/allowances/{grantee}:
        get:
            operationId: Query_Allowances
            parameters:
                - in: path
                  name: grantee
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Allowances returns all the grants for the given grantee address.
            tags:
                - Query
    /cosmos/feegrant/v1beta1/issued/{granter}:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_AllowancesByGranter
            parameters:
                - in: path
                  name: granter
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AllowancesByGranter returns all the grants given by an address
            tags:
                - Query
    /cosmos/gov/v1beta1/params/{params_type}:
        get:
            operationId: Query_Params
            parameters:
                - description: |-
                    params_type defines which parameters to query for, can be one of "voting",
                    "tallying" or "deposit".
                  in: path
                  name: params_type
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries all parameters of the gov module.
            tags:
                - Query
    /cosmos/gov/v1beta1/proposals:
        get:
            operationId: Query_Proposals
            parameters:
                - default: PROPOSAL_STATUS_UNSPECIFIED
                  description: |-
                    proposal_status defines the status of the proposals.

                     - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
                     - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                    period.
                     - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                    period.
                     - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                    passed.
                     - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                    been rejected.
                     - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                    failed.
                  enum:
                    - PROPOSAL_STATUS_UNSPECIFIED
                    - PROPOSAL_STATUS_DEPOSIT_PERIOD
                    - PROPOSAL_STATUS_VOTING_PERIOD
                    - PROPOSAL_STATUS_PASSED
                    - PROPOSAL_STATUS_REJECTED
                    - PROPOSAL_STATUS_FAILED
                  in: query
                  name: proposal_status
                  required: false
                  type: string
                - description: voter defines the voter address for the proposals.
                  in: query
                  name: voter
                  required: false
                  type: string
                - description: depositor defines the deposit addresses from the proposals.
                  in: query
                  name: depositor
                  required: false
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.QueryProposalsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Proposals queries all proposals based on given status.
            tags:
                - Query
    /cosmos/gov/v1beta1/proposals/{proposal_id}:
        get:
            operationId: Query_Proposal
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.QueryProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Proposal queries proposal details based on ProposalID.
            tags:
                - Query
    /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
        get:
            operationId: Query_Deposits
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.QueryDepositsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Deposits queries all deposits of a single proposal.
            tags:
                - Query
    /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
        get:
            operationId: Query_Deposit
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: depositor defines the deposit addresses from the proposals.
                  in: path
                  name: depositor
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.QueryDepositResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Deposit queries single deposit information based on proposalID, depositor address.
            tags:
                - Query
    /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
        get:
            operationId: Query_TallyResult
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.QueryTallyResultResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TallyResult queries the tally of a proposal vote.
            tags:
                - Query
    /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
        get:
            operationId: Query_Votes
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.QueryVotesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Votes queries votes of a given proposal.
            tags:
                - Query
    /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
        get:
            operationId: Query_Vote
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: voter defines the voter address for the proposals.
                  in: path
                  name: voter
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1beta1.QueryVoteResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Vote queries voted information based on proposalID, voterAddr.
            tags:
                - Query
    /cosmos/gov/v1/constitution:
        get:
            operationId: Query_Constitution
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryConstitutionResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Constitution queries the chain's constitution.
            tags:
                - Query
    /cosmos/gov/v1/params/{params_type}:
        get:
            operationId: Query_Params
            parameters:
                - description: |-
                    params_type defines which parameters to query for, can be one of "voting",
                    "tallying" or "deposit".
                  in: path
                  name: params_type
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries all parameters of the gov module.
            tags:
                - Query
    /cosmos/gov/v1/proposals:
        get:
            operationId: Query_Proposals
            parameters:
                - default: PROPOSAL_STATUS_UNSPECIFIED
                  description: |-
                    proposal_status defines the status of the proposals.

                     - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
                     - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                    period.
                     - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                    period.
                     - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                    passed.
                     - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                    been rejected.
                     - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                    failed.
                  enum:
                    - PROPOSAL_STATUS_UNSPECIFIED
                    - PROPOSAL_STATUS_DEPOSIT_PERIOD
                    - PROPOSAL_STATUS_VOTING_PERIOD
                    - PROPOSAL_STATUS_PASSED
                    - PROPOSAL_STATUS_REJECTED
                    - PROPOSAL_STATUS_FAILED
                  in: query
                  name: proposal_status
                  required: false
                  type: string
                - description: voter defines the voter address for the proposals.
                  in: query
                  name: voter
                  required: false
                  type: string
                - description: depositor defines the deposit addresses from the proposals.
                  in: query
                  name: depositor
                  required: false
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryProposalsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Proposals queries all proposals based on given status.
            tags:
                - Query
    /cosmos/gov/v1/proposals/{proposal_id}:
        get:
            operationId: Query_Proposal
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Proposal queries proposal details based on ProposalID.
            tags:
                - Query
    /cosmos/gov/v1/proposals/{proposal_id}/deposits:
        get:
            operationId: Query_Deposits
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryDepositsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Deposits queries all deposits of a single proposal.
            tags:
                - Query
    /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
        get:
            operationId: Query_Deposit
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: depositor defines the deposit addresses from the proposals.
                  in: path
                  name: depositor
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryDepositResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Deposit queries single deposit information based on proposalID, depositAddr.
            tags:
                - Query
    /cosmos/gov/v1/proposals/{proposal_id}/tally:
        get:
            operationId: Query_TallyResult
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryTallyResultResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TallyResult queries the tally of a proposal vote.
            tags:
                - Query
    /cosmos/gov/v1/proposals/{proposal_id}/votes:
        get:
            operationId: Query_Votes
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryVotesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Votes queries votes of a given proposal.
            tags:
                - Query
    /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
        get:
            operationId: Query_Vote
            parameters:
                - description: proposal_id defines the unique id of the proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: voter defines the voter address for the proposals.
                  in: path
                  name: voter
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.gov.v1.QueryVoteResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Vote queries voted information based on proposalID, voterAddr.
            tags:
                - Query
    /cosmos/group/v1/group_info/{group_id}:
        get:
            operationId: Query_GroupInfo
            parameters:
                - description: group_id is the unique ID of the group.
                  format: uint64
                  in: path
                  name: group_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryGroupInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GroupInfo queries group info based on group id.
            tags:
                - Query
    /cosmos/group/v1/group_members/{group_id}:
        get:
            operationId: Query_GroupMembers
            parameters:
                - description: group_id is the unique ID of the group.
                  format: uint64
                  in: path
                  name: group_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryGroupMembersResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GroupMembers queries members of a group by group id.
            tags:
                - Query
    /cosmos/group/v1/group_policies_by_admin/{admin}:
        get:
            operationId: Query_GroupPoliciesByAdmin
            parameters:
                - description: admin is the admin address of the group policy.
                  in: path
                  name: admin
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryGroupPoliciesByAdminResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GroupPoliciesByAdmin queries group policies by admin address.
            tags:
                - Query
    /cosmos/group/v1/group_policies_by_group/{group_id}:
        get:
            operationId: Query_GroupPoliciesByGroup
            parameters:
                - description: group_id is the unique ID of the group policy's group.
                  format: uint64
                  in: path
                  name: group_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryGroupPoliciesByGroupResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GroupPoliciesByGroup queries group policies by group id.
            tags:
                - Query
    /cosmos/group/v1/group_policy_info/{address}:
        get:
            operationId: Query_GroupPolicyInfo
            parameters:
                - description: address is the account address of the group policy.
                  in: path
                  name: address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryGroupPolicyInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GroupPolicyInfo queries group policy info based on account address of group policy.
            tags:
                - Query
    /cosmos/group/v1/groups:
        get:
            description: 'Since: cosmos-sdk 0.47.1'
            operationId: Query_Groups
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryGroupsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Groups queries all groups in state.
            tags:
                - Query
    /cosmos/group/v1/groups_by_admin/{admin}:
        get:
            operationId: Query_GroupsByAdmin
            parameters:
                - description: admin is the account address of a group's admin.
                  in: path
                  name: admin
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryGroupsByAdminResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GroupsByAdmin queries groups by admin address.
            tags:
                - Query
    /cosmos/group/v1/groups_by_member/{address}:
        get:
            operationId: Query_GroupsByMember
            parameters:
                - description: address is the group member address.
                  in: path
                  name: address
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryGroupsByMemberResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GroupsByMember queries groups by member address.
            tags:
                - Query
    /cosmos/group/v1/proposal/{proposal_id}:
        get:
            operationId: Query_Proposal
            parameters:
                - description: proposal_id is the unique ID of a proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Proposal queries a proposal based on proposal id.
            tags:
                - Query
    /cosmos/group/v1/proposals/{proposal_id}/tally:
        get:
            operationId: Query_TallyResult
            parameters:
                - description: proposal_id is the unique id of a proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryTallyResultResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                TallyResult returns the tally result of a proposal. If the proposal is
                still in voting period, then this query computes the current tally state,
                which might not be final. On the other hand, if the proposal is final,
                then it simply returns the `final_tally_result` state stored in the
                proposal itself.
            tags:
                - Query
    /cosmos/group/v1/proposals_by_group_policy/{address}:
        get:
            operationId: Query_ProposalsByGroupPolicy
            parameters:
                - description: address is the account address of the group policy related to proposals.
                  in: path
                  name: address
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryProposalsByGroupPolicyResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ProposalsByGroupPolicy queries proposals based on account address of group policy.
            tags:
                - Query
    /cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}:
        get:
            operationId: Query_VoteByProposalVoter
            parameters:
                - description: proposal_id is the unique ID of a proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: voter is a proposal voter account address.
                  in: path
                  name: voter
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryVoteByProposalVoterResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: VoteByProposalVoter queries a vote by proposal id and voter.
            tags:
                - Query
    /cosmos/group/v1/votes_by_proposal/{proposal_id}:
        get:
            operationId: Query_VotesByProposal
            parameters:
                - description: proposal_id is the unique ID of a proposal.
                  format: uint64
                  in: path
                  name: proposal_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryVotesByProposalResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: VotesByProposal queries a vote by proposal id.
            tags:
                - Query
    /cosmos/group/v1/votes_by_voter/{voter}:
        get:
            operationId: Query_VotesByVoter
            parameters:
                - description: voter is a proposal voter account address.
                  in: path
                  name: voter
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.group.v1.QueryVotesByVoterResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: VotesByVoter queries a vote by voter.
            tags:
                - Query
    /cosmos/mint/v1beta1/annual_provisions:
        get:
            operationId: Query_AnnualProvisions
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AnnualProvisions current minting annual provisions value.
            tags:
                - Query
    /cosmos/mint/v1beta1/inflation:
        get:
            operationId: Query_Inflation
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.mint.v1beta1.QueryInflationResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Inflation returns the current minting inflation value.
            tags:
                - Query
    /cosmos/mint/v1beta1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.mint.v1beta1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params returns the total set of minting parameters.
            tags:
                - Query
    /cosmos/nft/v1beta1/balance/{owner}/{class_id}:
        get:
            operationId: Query_Balance
            parameters:
                - description: owner is the owner address of the nft
                  in: path
                  name: owner
                  required: true
                  type: string
                - description: class_id associated with the nft
                  in: path
                  name: class_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.nft.v1beta1.QueryBalanceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721
            tags:
                - Query
    /cosmos/nft/v1beta1/classes:
        get:
            operationId: Query_Classes
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.nft.v1beta1.QueryClassesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Classes queries all NFT classes
            tags:
                - Query
    /cosmos/nft/v1beta1/classes/{class_id}:
        get:
            operationId: Query_Class
            parameters:
                - description: class_id associated with the nft
                  in: path
                  name: class_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.nft.v1beta1.QueryClassResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Class queries an NFT class based on its id
            tags:
                - Query
    /cosmos/nft/v1beta1/nfts:
        get:
            operationId: Query_NFTs
            parameters:
                - description: class_id associated with the nft
                  in: query
                  name: class_id
                  required: false
                  type: string
                - description: owner is the owner address of the nft
                  in: query
                  name: owner
                  required: false
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.nft.v1beta1.QueryNFTsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in
                ERC721Enumerable
            tags:
                - Query
    /cosmos/nft/v1beta1/nfts/{class_id}/{id}:
        get:
            operationId: Query_NFT
            parameters:
                - description: class_id associated with the nft
                  in: path
                  name: class_id
                  required: true
                  type: string
                - description: id is a unique identifier of the NFT
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.nft.v1beta1.QueryNFTResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: NFT queries an NFT based on its class and id.
            tags:
                - Query
    /cosmos/nft/v1beta1/owner/{class_id}/{id}:
        get:
            operationId: Query_Owner
            parameters:
                - description: class_id associated with the nft
                  in: path
                  name: class_id
                  required: true
                  type: string
                - description: id is a unique identifier of the NFT
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.nft.v1beta1.QueryOwnerResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721
            tags:
                - Query
    /cosmos/nft/v1beta1/supply/{class_id}:
        get:
            operationId: Query_Supply
            parameters:
                - description: class_id associated with the nft
                  in: path
                  name: class_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.nft.v1beta1.QuerySupplyResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Supply queries the number of NFTs from the given class, same as totalSupply of ERC721.
            tags:
                - Query
    /cosmos/params/v1beta1/params:
        get:
            operationId: Query_Params
            parameters:
                - description: subspace defines the module to query the parameter for.
                  in: query
                  name: subspace
                  required: false
                  type: string
                - description: key defines the key of the parameter in the subspace.
                  in: query
                  name: key
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.params.v1beta1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                Params queries a specific parameter of a module, given its subspace and
                key.
            tags:
                - Query
    /cosmos/params/v1beta1/subspaces:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_Subspaces
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.params.v1beta1.QuerySubspacesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Subspaces queries for all registered subspaces and all keys for a subspace.
            tags:
                - Query
    /cosmos/slashing/v1beta1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.slashing.v1beta1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries the parameters of slashing module
            tags:
                - Query
    /cosmos/slashing/v1beta1/signing_infos:
        get:
            operationId: Query_SigningInfos
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.slashing.v1beta1.QuerySigningInfosResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SigningInfos queries signing info of all validators
            tags:
                - Query
    /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
        get:
            operationId: Query_SigningInfo
            parameters:
                - description: cons_address is the address to query signing info of
                  in: path
                  name: cons_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.slashing.v1beta1.QuerySigningInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SigningInfo queries the signing info of given cons address
            tags:
                - Query
    /cosmos/staking/v1beta1/delegations/{delegator_addr}:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_DelegatorDelegations
            parameters:
                - description: delegator_addr defines the delegator address to query for.
                  in: path
                  name: delegator_addr
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DelegatorDelegations queries all delegations of a given delegator address.
            tags:
                - Query
    /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_Redelegations
            parameters:
                - description: delegator_addr defines the delegator address to query for.
                  in: path
                  name: delegator_addr
                  required: true
                  type: string
                - description: src_validator_addr defines the validator address to redelegate from.
                  in: query
                  name: src_validator_addr
                  required: false
                  type: string
                - description: dst_validator_addr defines the validator address to redelegate to.
                  in: query
                  name: dst_validator_addr
                  required: false
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryRedelegationsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Redelegations queries redelegations of given address.
            tags:
                - Query
    /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_DelegatorUnbondingDelegations
            parameters:
                - description: delegator_addr defines the delegator address to query for.
                  in: path
                  name: delegator_addr
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                DelegatorUnbondingDelegations queries all unbonding delegations of a given
                delegator address.
            tags:
                - Query
    /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_DelegatorValidators
            parameters:
                - description: delegator_addr defines the delegator address to query for.
                  in: path
                  name: delegator_addr
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                DelegatorValidators queries all validators info for given delegator
                address.
            tags:
                - Query
    /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
        get:
            operationId: Query_DelegatorValidator
            parameters:
                - description: delegator_addr defines the delegator address to query for.
                  in: path
                  name: delegator_addr
                  required: true
                  type: string
                - description: validator_addr defines the validator address to query for.
                  in: path
                  name: validator_addr
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                DelegatorValidator queries validator info for given delegator validator
                pair.
            tags:
                - Query
    /cosmos/staking/v1beta1/historical_info/{height}:
        get:
            operationId: Query_HistoricalInfo
            parameters:
                - description: height defines at which height to query the historical info.
                  format: int64
                  in: path
                  name: height
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryHistoricalInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: HistoricalInfo queries the historical info for given height.
            tags:
                - Query
    /cosmos/staking/v1beta1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Parameters queries the staking parameters.
            tags:
                - Query
    /cosmos/staking/v1beta1/pool:
        get:
            operationId: Query_Pool
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryPoolResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Pool queries the pool info.
            tags:
                - Query
    /cosmos/staking/v1beta1/validators:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_Validators
            parameters:
                - description: status enables to query for validators matching a given status.
                  in: query
                  name: status
                  required: false
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Validators queries all validators that match the given status.
            tags:
                - Query
    /cosmos/staking/v1beta1/validators/{validator_addr}:
        get:
            operationId: Query_Validator
            parameters:
                - description: validator_addr defines the validator address to query for.
                  in: path
                  name: validator_addr
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Validator queries validator info for given validator address.
            tags:
                - Query
    /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_ValidatorDelegations
            parameters:
                - description: validator_addr defines the validator address to query for.
                  in: path
                  name: validator_addr
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorDelegationsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ValidatorDelegations queries delegate info for given validator.
            tags:
                - Query
    /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
        get:
            operationId: Query_Delegation
            parameters:
                - description: validator_addr defines the validator address to query for.
                  in: path
                  name: validator_addr
                  required: true
                  type: string
                - description: delegator_addr defines the delegator address to query for.
                  in: path
                  name: delegator_addr
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegationResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Delegation queries delegate info for given validator delegator pair.
            tags:
                - Query
    /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
        get:
            operationId: Query_UnbondingDelegation
            parameters:
                - description: validator_addr defines the validator address to query for.
                  in: path
                  name: validator_addr
                  required: true
                  type: string
                - description: delegator_addr defines the delegator address to query for.
                  in: path
                  name: delegator_addr
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryUnbondingDelegationResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UnbondingDelegation queries unbonding info for given validator delegator
                pair.
            tags:
                - Query
    /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
        get:
            description: |-
                When called from another module, this query might consume a high amount of
                gas if the pagination field is incorrectly set.
            operationId: Query_ValidatorUnbondingDelegations
            parameters:
                - description: validator_addr defines the validator address to query for.
                  in: path
                  name: validator_addr
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ValidatorUnbondingDelegations queries unbonding delegations of a validator.
            tags:
                - Query
    /cosmos/tx/v1beta1/decode:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Service_TxDecode
            parameters:
                - description: |-
                    TxDecodeRequest is the request type for the Service.TxDecode
                    RPC method.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TxDecode decodes the transaction.
            tags:
                - Service
    /cosmos/tx/v1beta1/decode/amino:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Service_TxDecodeAmino
            parameters:
                - description: |-
                    TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
                    RPC method.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeAminoRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeAminoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
            tags:
                - Service
    /cosmos/tx/v1beta1/encode:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Service_TxEncode
            parameters:
                - description: |-
                    TxEncodeRequest is the request type for the Service.TxEncode
                    RPC method.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TxEncode encodes the transaction.
            tags:
                - Service
    /cosmos/tx/v1beta1/encode/amino:
        post:
            description: 'Since: cosmos-sdk 0.47'
            operationId: Service_TxEncodeAmino
            parameters:
                - description: |-
                    TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
                    RPC method.

                    Since: cosmos-sdk 0.47
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeAminoRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeAminoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
            tags:
                - Service
    /cosmos/tx/v1beta1/simulate:
        post:
            operationId: Service_Simulate
            parameters:
                - description: |-
                    SimulateRequest is the request type for the Service.Simulate
                    RPC method.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/cosmos.tx.v1beta1.SimulateRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.tx.v1beta1.SimulateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Simulate simulates executing a transaction for estimating gas usage.
            tags:
                - Service
    /cosmos/tx/v1beta1/txs/{hash}:
        get:
            operationId: Service_GetTx
            parameters:
                - description: hash is the tx hash to query, encoded as a hex string.
                  in: path
                  name: hash
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.tx.v1beta1.GetTxResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetTx fetches a tx by hash.
            tags:
                - Service
    /cosmos/tx/v1beta1/txs/block/{height}:
        get:
            description: 'Since: cosmos-sdk 0.45.2'
            operationId: Service_GetBlockWithTxs
            parameters:
                - description: height is the height of the block to query.
                  format: int64
                  in: path
                  name: height
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.tx.v1beta1.GetBlockWithTxsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: GetBlockWithTxs fetches a block with decoded txs.
            tags:
                - Service
    /cosmos/upgrade/v1beta1/applied_plan/{name}:
        get:
            operationId: Query_AppliedPlan
            parameters:
                - description: name is the name of the applied plan to query for.
                  in: path
                  name: name
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryAppliedPlanResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AppliedPlan queries a previously applied upgrade plan by its name.
            tags:
                - Query
    /cosmos/upgrade/v1beta1/authority:
        get:
            description: 'Since: cosmos-sdk 0.46'
            operationId: Query_Authority
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryAuthorityResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Returns the account with authority to conduct upgrades
            tags:
                - Query
    /cosmos/upgrade/v1beta1/current_plan:
        get:
            operationId: Query_CurrentPlan
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryCurrentPlanResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CurrentPlan queries the current upgrade plan.
            tags:
                - Query
    /cosmos/upgrade/v1beta1/module_versions:
        get:
            description: 'Since: cosmos-sdk 0.43'
            operationId: Query_ModuleVersions
            parameters:
                - description: |-
                    module_name is a field to query a specific module
                    consensus version from state. Leaving this empty will
                    fetch the full list of module versions from state
                  in: query
                  name: module_name
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryModuleVersionsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ModuleVersions queries the list of module versions from state.
            tags:
                - Query
    /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
        get:
            operationId: Query_UpgradedConsensusState
            parameters:
                - description: |-
                    last height of the current chain must be sent in request
                    as this is the height under which next consensus state is stored
                  format: int64
                  in: path
                  name: last_height
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpgradedConsensusState queries the consensus state that will serve
                as a trusted kernel for the next version of this chain. It will only be
                stored at the last height of this chain.
                UpgradedConsensusState RPC not supported with legacy querier
                This rpc is deprecated now that IBC has its own replacement
                (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
            tags:
                - Query
    /ibc.applications.fee.v1.Msg/PayPacketFee:
        post:
            operationId: Msg_PayPacketFee
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.fee.v1.MsgPayPacketFee'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.MsgPayPacketFeeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                PayPacketFee defines a rpc handler method for MsgPayPacketFee
                PayPacketFee is an open callback that may be called by any module/user that wishes to escrow funds in order to
                incentivize the relaying of the packet at the next sequence
                NOTE: This method is intended to be used within a multi msg transaction, where the subsequent msg that follows
                initiates the lifecycle of the incentivized packet
            tags:
                - Msg
    /ibc.applications.fee.v1.Msg/PayPacketFeeAsync:
        post:
            operationId: Msg_PayPacketFeeAsync
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.fee.v1.MsgPayPacketFeeAsync'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                PayPacketFeeAsync defines a rpc handler method for MsgPayPacketFeeAsync
                PayPacketFeeAsync is an open callback that may be called by any module/user that wishes to escrow funds in order to
                incentivize the relaying of a known packet (i.e. at a particular sequence)
            tags:
                - Msg
    /ibc.applications.fee.v1.Msg/RegisterCounterpartyPayee:
        post:
            operationId: Msg_RegisterCounterpartyPayee
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.fee.v1.MsgRegisterCounterpartyPayee'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                RegisterCounterpartyPayee defines a rpc handler method for MsgRegisterCounterpartyPayee
                RegisterCounterpartyPayee is called by the relayer on each channelEnd and allows them to specify the counterparty
                payee address before relaying. This ensures they will be properly compensated for forward relaying since
                the destination chain must include the registered counterparty payee address in the acknowledgement. This function
                may be called more than once by a relayer, in which case, the latest counterparty payee address is always used.
            tags:
                - Msg
    /ibc.applications.fee.v1.Msg/RegisterPayee:
        post:
            operationId: Msg_RegisterPayee
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.fee.v1.MsgRegisterPayee'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.MsgRegisterPayeeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                RegisterPayee defines a rpc handler method for MsgRegisterPayee
                RegisterPayee is called by the relayer on each channelEnd and allows them to set an optional
                payee to which reverse and timeout relayer packet fees will be paid out. The payee should be registered on
                the source chain from which packets originate as this is where fee distribution takes place. This function may be
                called more than once by a relayer, in which case, the latest payee is always used.
            tags:
                - Msg
    /ibc.applications.interchain_accounts.controller.v1.Msg/RegisterInterchainAccount:
        post:
            operationId: Msg_RegisterInterchainAccount
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: RegisterInterchainAccount defines a rpc handler for MsgRegisterInterchainAccount.
            tags:
                - Msg
    /ibc.applications.interchain_accounts.controller.v1.Msg/SendTx:
        post:
            operationId: Msg_SendTx
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgSendTx'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SendTx defines a rpc handler for MsgSendTx.
            tags:
                - Msg
    /ibc.applications.interchain_accounts.controller.v1.Msg/UpdateParams:
        post:
            operationId: Msg_UpdateParams
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateParams defines a rpc handler for MsgUpdateParams.
            tags:
                - Msg
    /ibc.applications.interchain_accounts.host.v1.Msg/ModuleQuerySafe:
        post:
            operationId: Msg_ModuleQuerySafe
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafe'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ModuleQuerySafe defines a rpc handler for MsgModuleQuerySafe.
            tags:
                - Msg
    /ibc.applications.interchain_accounts.host.v1.Msg/UpdateParams:
        post:
            operationId: Msg_UpdateParams
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateParams defines a rpc handler for MsgUpdateParams.
            tags:
                - Msg
    /ibc.applications.transfer.v1.Msg/Transfer:
        post:
            operationId: Msg_Transfer
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.transfer.v1.MsgTransfer'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.transfer.v1.MsgTransferResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Transfer defines a rpc handler method for MsgTransfer.
            tags:
                - Msg
    /ibc.applications.transfer.v1.Msg/UpdateParams:
        post:
            operationId: Msg_UpdateParams
            parameters:
                - description: MsgUpdateParams is the Msg/UpdateParams request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.applications.transfer.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.transfer.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateParams defines a rpc handler for MsgUpdateParams.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/Acknowledgement:
        post:
            operationId: Msg_Acknowledgement
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgAcknowledgement'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgAcknowledgementResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Acknowledgement defines a rpc handler method for MsgAcknowledgement.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelCloseConfirm:
        post:
            operationId: Msg_ChannelCloseConfirm
            parameters:
                - description: |-
                    MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B
                    to acknowledge the change of channel state to CLOSED on Chain A.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelCloseConfirm'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelCloseConfirmResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ChannelCloseConfirm defines a rpc handler method for
                MsgChannelCloseConfirm.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelCloseInit:
        post:
            operationId: Msg_ChannelCloseInit
            parameters:
                - description: |-
                    MsgChannelCloseInit defines a msg sent by a Relayer to Chain A
                    to close a channel with Chain B.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelCloseInit'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelCloseInitResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelCloseInit defines a rpc handler method for MsgChannelCloseInit.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelOpenAck:
        post:
            operationId: Msg_ChannelOpenAck
            parameters:
                - description: |-
                    MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge
                    the change of channel state to TRYOPEN on Chain B.
                    WARNING: a channel upgrade MUST NOT initialize an upgrade for this channel
                    in the same block as executing this message otherwise the counterparty will
                    be incapable of opening.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenAck'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenAckResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelOpenAck defines a rpc handler method for MsgChannelOpenAck.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelOpenConfirm:
        post:
            operationId: Msg_ChannelOpenConfirm
            parameters:
                - description: |-
                    MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to
                    acknowledge the change of channel state to OPEN on Chain A.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenConfirm'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenConfirmResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelOpenConfirm defines a rpc handler method for MsgChannelOpenConfirm.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelOpenInit:
        post:
            operationId: Msg_ChannelOpenInit
            parameters:
                - description: |-
                    MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It
                    is called by a relayer on Chain A.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenInit'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenInitResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelOpenInit defines a rpc handler method for MsgChannelOpenInit.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelOpenTry:
        post:
            operationId: Msg_ChannelOpenTry
            parameters:
                - description: |-
                    MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel
                    on Chain B. The version field within the Channel field has been deprecated. Its
                    value will be ignored by core IBC.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenTry'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenTryResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelOpenTry defines a rpc handler method for MsgChannelOpenTry.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelUpgradeAck:
        post:
            operationId: Msg_ChannelUpgradeAck
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeAck'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeAckResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelUpgradeAck defines a rpc handler method for MsgChannelUpgradeAck.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelUpgradeCancel:
        post:
            operationId: Msg_ChannelUpgradeCancel
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeCancel'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeCancelResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelUpgradeCancel defines a rpc handler method for MsgChannelUpgradeCancel.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelUpgradeConfirm:
        post:
            operationId: Msg_ChannelUpgradeConfirm
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeConfirm'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelUpgradeConfirm defines a rpc handler method for MsgChannelUpgradeConfirm.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelUpgradeInit:
        post:
            operationId: Msg_ChannelUpgradeInit
            parameters:
                - description: |-
                    MsgChannelUpgradeInit defines the request type for the ChannelUpgradeInit rpc
                    WARNING: Initializing a channel upgrade in the same block as opening the channel
                    may result in the counterparty being incapable of opening.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeInit'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeInitResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelUpgradeInit defines a rpc handler method for MsgChannelUpgradeInit.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelUpgradeOpen:
        post:
            operationId: Msg_ChannelUpgradeOpen
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeOpen'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeOpenResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelUpgradeOpen defines a rpc handler method for MsgChannelUpgradeOpen.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelUpgradeTimeout:
        post:
            operationId: Msg_ChannelUpgradeTimeout
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeTimeout'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelUpgradeTimeout defines a rpc handler method for MsgChannelUpgradeTimeout.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/ChannelUpgradeTry:
        post:
            operationId: Msg_ChannelUpgradeTry
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeTry'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgChannelUpgradeTryResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelUpgradeTry defines a rpc handler method for MsgChannelUpgradeTry.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/PruneAcknowledgements:
        post:
            operationId: Msg_PruneAcknowledgements
            parameters:
                - description: MsgPruneAcknowledgements defines the request type for the PruneAcknowledgements rpc.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgPruneAcknowledgements'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgPruneAcknowledgementsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: PruneAcknowledgements defines a rpc handler method for MsgPruneAcknowledgements.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/RecvPacket:
        post:
            operationId: Msg_RecvPacket
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgRecvPacket'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgRecvPacketResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: RecvPacket defines a rpc handler method for MsgRecvPacket.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/Timeout:
        post:
            operationId: Msg_Timeout
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgTimeout'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgTimeoutResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Timeout defines a rpc handler method for MsgTimeout.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/TimeoutOnClose:
        post:
            operationId: Msg_TimeoutOnClose
            parameters:
                - description: MsgTimeoutOnClose timed-out packet upon counterparty channel closure.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgTimeoutOnClose'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgTimeoutOnCloseResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TimeoutOnClose defines a rpc handler method for MsgTimeoutOnClose.
            tags:
                - Msg
    /ibc.core.channel.v1.Msg/UpdateChannelParams:
        post:
            operationId: Msg_UpdateChannelParams
            parameters:
                - description: MsgUpdateParams is the MsgUpdateParams request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.channel.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateChannelParams defines a rpc handler method for MsgUpdateParams.
            tags:
                - Msg
    /ibc.core.client.v1.Msg/CreateClient:
        post:
            operationId: Msg_CreateClient
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.client.v1.MsgCreateClient'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.MsgCreateClientResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CreateClient defines a rpc handler method for MsgCreateClient.
            tags:
                - Msg
    /ibc.core.client.v1.Msg/IBCSoftwareUpgrade:
        post:
            operationId: Msg_IBCSoftwareUpgrade
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.client.v1.MsgIBCSoftwareUpgrade'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: IBCSoftwareUpgrade defines a rpc handler method for MsgIBCSoftwareUpgrade.
            tags:
                - Msg
    /ibc.core.client.v1.Msg/RecoverClient:
        post:
            operationId: Msg_RecoverClient
            parameters:
                - description: MsgRecoverClient defines the message used to recover a frozen or expired client.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.client.v1.MsgRecoverClient'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.MsgRecoverClientResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: RecoverClient defines a rpc handler method for MsgRecoverClient.
            tags:
                - Msg
    /ibc.core.client.v1.Msg/SubmitMisbehaviour:
        post:
            operationId: Msg_SubmitMisbehaviour
            parameters:
                - description: |-
                    MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for
                    light client misbehaviour.
                    This message has been deprecated. Use MsgUpdateClient instead.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.client.v1.MsgSubmitMisbehaviour'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.MsgSubmitMisbehaviourResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
            tags:
                - Msg
    /ibc.core.client.v1.Msg/UpdateClient:
        post:
            operationId: Msg_UpdateClient
            parameters:
                - description: |-
                    MsgUpdateClient defines an sdk.Msg to update a IBC client state using
                    the given client message.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.client.v1.MsgUpdateClient'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.MsgUpdateClientResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateClient defines a rpc handler method for MsgUpdateClient.
            tags:
                - Msg
    /ibc.core.client.v1.Msg/UpdateClientParams:
        post:
            operationId: Msg_UpdateClientParams
            parameters:
                - description: MsgUpdateParams defines the sdk.Msg type to update the client parameters.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.client.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateClientParams defines a rpc handler method for MsgUpdateParams.
            tags:
                - Msg
    /ibc.core.client.v1.Msg/UpgradeClient:
        post:
            operationId: Msg_UpgradeClient
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.client.v1.MsgUpgradeClient'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.MsgUpgradeClientResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpgradeClient defines a rpc handler method for MsgUpgradeClient.
            tags:
                - Msg
    /ibc.core.connection.v1.Msg/ConnectionOpenAck:
        post:
            operationId: Msg_ConnectionOpenAck
            parameters:
                - description: |-
                    MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
                    acknowledge the change of connection state to TRYOPEN on Chain B.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenAck'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenAckResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
            tags:
                - Msg
    /ibc.core.connection.v1.Msg/ConnectionOpenConfirm:
        post:
            operationId: Msg_ConnectionOpenConfirm
            parameters:
                - description: |-
                    MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
                    acknowledge the change of connection state to OPEN on Chain A.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenConfirm'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenConfirmResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ConnectionOpenConfirm defines a rpc handler method for
                MsgConnectionOpenConfirm.
            tags:
                - Msg
    /ibc.core.connection.v1.Msg/ConnectionOpenInit:
        post:
            operationId: Msg_ConnectionOpenInit
            parameters:
                - description: |-
                    MsgConnectionOpenInit defines the msg sent by an account on Chain A to
                    initialize a connection with Chain B.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenInit'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenInitResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
            tags:
                - Msg
    /ibc.core.connection.v1.Msg/ConnectionOpenTry:
        post:
            operationId: Msg_ConnectionOpenTry
            parameters:
                - description: |-
                    MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
                    connection on Chain B.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenTry'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenTryResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
            tags:
                - Msg
    /ibc.core.connection.v1.Msg/UpdateConnectionParams:
        post:
            operationId: Msg_UpdateConnectionParams
            parameters:
                - description: MsgUpdateParams defines the sdk.Msg type to update the connection parameters.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.connection.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateConnectionParams defines a rpc handler method for
                MsgUpdateParams.
            tags:
                - Msg
    /ibc.lightclients.wasm.v1.Msg/MigrateContract:
        post:
            operationId: Msg_MigrateContract
            parameters:
                - description: MsgMigrateContract defines the request type for the MigrateContract rpc.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgMigrateContract'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgMigrateContractResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: MigrateContract defines a rpc handler method for MsgMigrateContract.
            tags:
                - Msg
    /ibc.lightclients.wasm.v1.Msg/RemoveChecksum:
        post:
            operationId: Msg_RemoveChecksum
            parameters:
                - description: MsgRemoveChecksum defines the request type for the MsgRemoveChecksum rpc.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgRemoveChecksum'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: RemoveChecksum defines a rpc handler method for MsgRemoveChecksum.
            tags:
                - Msg
    /ibc.lightclients.wasm.v1.Msg/StoreCode:
        post:
            operationId: Msg_StoreCode
            parameters:
                - description: MsgStoreCode defines the request type for the StoreCode rpc.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgStoreCode'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgStoreCodeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: StoreCode defines a rpc handler method for MsgStoreCode.
            tags:
                - Msg
    /ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/fee_enabled:
        get:
            operationId: Query_FeeEnabledChannel
            parameters:
                - description: unique channel identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: unique port identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryFeeEnabledChannelResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: FeeEnabledChannel returns true if the provided port and channel identifiers belong to a fee enabled channel
            tags:
                - Query
    /ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/incentivized_packets:
        get:
            operationId: Query_IncentivizedPacketsForChannel
            parameters:
                - in: path
                  name: channel_id
                  required: true
                  type: string
                - in: path
                  name: port_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
                - description: Height to query at
                  format: uint64
                  in: query
                  name: query_height
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Gets all incentivized packets for a specific channel
            tags:
                - Query
    /ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/counterparty_payee:
        get:
            operationId: Query_CounterpartyPayee
            parameters:
                - description: unique channel identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: the relayer address to which the counterparty is registered
                  in: path
                  name: relayer
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryCounterpartyPayeeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: CounterpartyPayee returns the registered counterparty payee for forward relaying
            tags:
                - Query
    /ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/payee:
        get:
            operationId: Query_Payee
            parameters:
                - description: unique channel identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: the relayer address to which the distribution address is registered
                  in: path
                  name: relayer
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryPayeeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Payee returns the registered payee address for a specific channel given the relayer address
            tags:
                - Query
    /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/incentivized_packet:
        get:
            operationId: Query_IncentivizedPacket
            parameters:
                - description: channel unique identifier
                  in: path
                  name: packet_id.channel_id
                  required: true
                  type: string
                - description: channel port identifier
                  in: path
                  name: packet_id.port_id
                  required: true
                  type: string
                - description: packet sequence
                  format: uint64
                  in: path
                  name: packet_id.sequence
                  required: true
                  type: string
                - description: block height at which to query
                  format: uint64
                  in: query
                  name: query_height
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryIncentivizedPacketResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: IncentivizedPacket returns all packet fees for a packet given its identifier
            tags:
                - Query
    /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_ack_fees:
        get:
            operationId: Query_TotalAckFees
            parameters:
                - description: channel unique identifier
                  in: path
                  name: packet_id.channel_id
                  required: true
                  type: string
                - description: channel port identifier
                  in: path
                  name: packet_id.port_id
                  required: true
                  type: string
                - description: packet sequence
                  format: uint64
                  in: path
                  name: packet_id.sequence
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryTotalAckFeesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TotalAckFees returns the total acknowledgement fees for a packet given its identifier
            tags:
                - Query
    /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_recv_fees:
        get:
            operationId: Query_TotalRecvFees
            parameters:
                - description: channel unique identifier
                  in: path
                  name: packet_id.channel_id
                  required: true
                  type: string
                - description: channel port identifier
                  in: path
                  name: packet_id.port_id
                  required: true
                  type: string
                - description: packet sequence
                  format: uint64
                  in: path
                  name: packet_id.sequence
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryTotalRecvFeesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TotalRecvFees returns the total receive fees for a packet given its identifier
            tags:
                - Query
    /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_timeout_fees:
        get:
            operationId: Query_TotalTimeoutFees
            parameters:
                - description: channel unique identifier
                  in: path
                  name: packet_id.channel_id
                  required: true
                  type: string
                - description: channel port identifier
                  in: path
                  name: packet_id.port_id
                  required: true
                  type: string
                - description: packet sequence
                  format: uint64
                  in: path
                  name: packet_id.sequence
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TotalTimeoutFees returns the total timeout fees for a packet given its identifier
            tags:
                - Query
    /ibc/apps/fee/v1/fee_enabled:
        get:
            operationId: Query_FeeEnabledChannels
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
                - description: block height at which to query
                  format: uint64
                  in: query
                  name: query_height
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: FeeEnabledChannels returns a list of all fee enabled channels
            tags:
                - Query
    /ibc/apps/fee/v1/incentivized_packets:
        get:
            operationId: Query_IncentivizedPackets
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
                - description: block height at which to query
                  format: uint64
                  in: query
                  name: query_height
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.fee.v1.QueryIncentivizedPacketsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: IncentivizedPackets returns all incentivized packets and their associated fees
            tags:
                - Query
    /ibc/apps/interchain_accounts/controller/v1/owners/{owner}/connections/{connection_id}:
        get:
            operationId: Query_InterchainAccount
            parameters:
                - in: path
                  name: owner
                  required: true
                  type: string
                - in: path
                  name: connection_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: InterchainAccount returns the interchain account address for a given owner address on a given connection
            tags:
                - Query
    /ibc/apps/interchain_accounts/controller/v1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries all parameters of the ICA controller submodule.
            tags:
                - Query
    /ibc/apps/interchain_accounts/host/v1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries all parameters of the ICA host submodule.
            tags:
                - Query
    /ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address:
        get:
            operationId: Query_EscrowAddress
            parameters:
                - description: unique channel identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: unique port identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.transfer.v1.QueryEscrowAddressResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: EscrowAddress returns the escrow address for a particular port and channel id.
            tags:
                - Query
    /ibc/apps/transfer/v1/denom_hashes/{trace}:
        get:
            operationId: Query_DenomHash
            parameters:
                - description: The denomination trace ([port_id]/[channel_id])+/[denom]
                  in: path
                  name: trace
                  pattern: .+
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.transfer.v1.QueryDenomHashResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DenomHash queries a denomination hash information.
            tags:
                - Query
    /ibc/apps/transfer/v1/denom_traces:
        get:
            operationId: Query_DenomTraces
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.transfer.v1.QueryDenomTracesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DenomTraces queries all denomination traces.
            tags:
                - Query
    /ibc/apps/transfer/v1/denom_traces/{hash}:
        get:
            operationId: Query_DenomTrace
            parameters:
                - description: hash (in hex format) or denom (full denom with ibc prefix) of the denomination trace information.
                  in: path
                  name: hash
                  pattern: .+
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.transfer.v1.QueryDenomTraceResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: DenomTrace queries a denomination trace information.
            tags:
                - Query
    /ibc/apps/transfer/v1/denoms/{denom}/total_escrow:
        get:
            operationId: Query_TotalEscrowForDenom
            parameters:
                - in: path
                  name: denom
                  pattern: .+
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: TotalEscrowForDenom returns the total amount of tokens in escrow based on the denom.
            tags:
                - Query
    /ibc/apps/transfer/v1/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.applications.transfer.v1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params queries all parameters of the ibc-transfer module.
            tags:
                - Query
    /ibc/core/channel/v1/channels:
        get:
            operationId: Query_Channels
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryChannelsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Channels queries all the IBC channels of a chain.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}:
        get:
            operationId: Query_Channel
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryChannelResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Channel queries an IBC Channel.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state:
        get:
            operationId: Query_ChannelClientState
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryChannelClientStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ChannelClientState queries for the client state for the channel associated
                with the provided channel identifiers.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
        get:
            operationId: Query_ChannelConsensusState
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
                - description: revision number of the consensus state
                  format: uint64
                  in: path
                  name: revision_number
                  required: true
                  type: string
                - description: revision height of the consensus state
                  format: uint64
                  in: path
                  name: revision_height
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryChannelConsensusStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ChannelConsensusState queries for the consensus state for the channel
                associated with the provided channel identifiers.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence:
        get:
            operationId: Query_NextSequenceReceive
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryNextSequenceReceiveResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: NextSequenceReceive returns the next receive sequence for a given channel.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence_send:
        get:
            operationId: Query_NextSequenceSend
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryNextSequenceSendResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: NextSequenceSend returns the next send sequence for a given channel.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements:
        get:
            operationId: Query_PacketAcknowledgements
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
                - collectionFormat: multi
                  description: list of packet sequences
                  in: query
                  items:
                    format: uint64
                    type: string
                  name: packet_commitment_sequences
                  required: false
                  type: array
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryPacketAcknowledgementsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                PacketAcknowledgements returns all the packet acknowledgements associated
                with a channel.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}:
        get:
            operationId: Query_PacketAcknowledgement
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
                - description: packet sequence
                  format: uint64
                  in: path
                  name: sequence
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryPacketAcknowledgementResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments:
        get:
            operationId: Query_PacketCommitments
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryPacketCommitmentsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                PacketCommitments returns all the packet commitments hashes associated
                with a channel.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
        get:
            operationId: Query_UnreceivedAcks
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
                - collectionFormat: csv
                  description: list of acknowledgement sequences
                  in: path
                  items:
                    format: uint64
                    type: string
                  minItems: 1
                  name: packet_ack_sequences
                  required: true
                  type: array
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryUnreceivedAcksResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UnreceivedAcks returns all the unreceived IBC acknowledgements associated
                with a channel and sequences.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets:
        get:
            operationId: Query_UnreceivedPackets
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
                - collectionFormat: csv
                  description: list of packet sequences
                  in: path
                  items:
                    format: uint64
                    type: string
                  minItems: 1
                  name: packet_commitment_sequences
                  required: true
                  type: array
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryUnreceivedPacketsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UnreceivedPackets returns all the unreceived IBC packets associated with a
                channel and sequences.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}:
        get:
            operationId: Query_PacketCommitment
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
                - description: packet sequence
                  format: uint64
                  in: path
                  name: sequence
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryPacketCommitmentResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: PacketCommitment queries a stored packet commitment hash.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}:
        get:
            operationId: Query_PacketReceipt
            parameters:
                - description: channel unique identifier
                  in: path
                  name: channel_id
                  required: true
                  type: string
                - description: port unique identifier
                  in: path
                  name: port_id
                  required: true
                  type: string
                - description: packet sequence
                  format: uint64
                  in: path
                  name: sequence
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryPacketReceiptResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                PacketReceipt queries if a given packet sequence has been received on the
                queried chain
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/upgrade:
        get:
            operationId: Query_Upgrade
            parameters:
                - in: path
                  name: channel_id
                  required: true
                  type: string
                - in: path
                  name: port_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryUpgradeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Upgrade returns the upgrade for a given port and channel id.
            tags:
                - Query
    /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/upgrade_error:
        get:
            operationId: Query_UpgradeError
            parameters:
                - in: path
                  name: channel_id
                  required: true
                  type: string
                - in: path
                  name: port_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryUpgradeErrorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpgradeError returns the error receipt if the upgrade handshake failed.
            tags:
                - Query
    /ibc/core/channel/v1/connections/{connection}/channels:
        get:
            operationId: Query_ConnectionChannels
            parameters:
                - description: connection unique identifier
                  in: path
                  name: connection
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryConnectionChannelsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ConnectionChannels queries all the channels associated with a connection
                end.
            tags:
                - Query
    /ibc/core/channel/v1/params:
        get:
            operationId: Query_ChannelParams
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.channel.v1.QueryChannelParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ChannelParams queries all parameters of the ibc channel submodule.
            tags:
                - Query
    /ibc/core/client/v1/client_states:
        get:
            operationId: Query_ClientStates
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryClientStatesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ClientStates queries all the IBC light clients of a chain.
            tags:
                - Query
    /ibc/core/client/v1/client_states/{client_id}:
        get:
            operationId: Query_ClientState
            parameters:
                - description: client state unique identifier
                  in: path
                  name: client_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryClientStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ClientState queries an IBC light client.
            tags:
                - Query
    /ibc/core/client/v1/client_status/{client_id}:
        get:
            operationId: Query_ClientStatus
            parameters:
                - description: client unique identifier
                  in: path
                  name: client_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryClientStatusResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Status queries the status of an IBC client.
            tags:
                - Query
    /ibc/core/client/v1/consensus_states/{client_id}:
        get:
            operationId: Query_ConsensusStates
            parameters:
                - description: client identifier
                  in: path
                  name: client_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryConsensusStatesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ConsensusStates queries all the consensus state associated with a given
                client.
            tags:
                - Query
    /ibc/core/client/v1/consensus_states/{client_id}/heights:
        get:
            operationId: Query_ConsensusStateHeights
            parameters:
                - description: client identifier
                  in: path
                  name: client_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryConsensusStateHeightsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ConsensusStateHeights queries the height of every consensus states associated with a given client.
            tags:
                - Query
    /ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}:
        get:
            operationId: Query_ConsensusState
            parameters:
                - description: client identifier
                  in: path
                  name: client_id
                  required: true
                  type: string
                - description: consensus state revision number
                  format: uint64
                  in: path
                  name: revision_number
                  required: true
                  type: string
                - description: consensus state revision height
                  format: uint64
                  in: path
                  name: revision_height
                  required: true
                  type: string
                - description: |-
                    latest_height overrrides the height field and queries the latest stored
                    ConsensusState
                  in: query
                  name: latest_height
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryConsensusStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ConsensusState queries a consensus state associated with a client state at
                a given height.
            tags:
                - Query
    /ibc/core/client/v1/params:
        get:
            operationId: Query_ClientParams
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryClientParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ClientParams queries all parameters of the ibc client submodule.
            tags:
                - Query
    /ibc/core/client/v1/upgraded_client_states:
        get:
            operationId: Query_UpgradedClientState
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryUpgradedClientStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpgradedClientState queries an Upgraded IBC light client.
            tags:
                - Query
    /ibc/core/client/v1/upgraded_consensus_states:
        get:
            operationId: Query_UpgradedConsensusState
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryUpgradedConsensusStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
            tags:
                - Query
    /ibc/core/client/v1/verify_membership:
        post:
            operationId: Query_VerifyMembership
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ibc.core.client.v1.QueryVerifyMembershipRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.client.v1.QueryVerifyMembershipResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: VerifyMembership queries an IBC light client for proof verification of a value at a given key path.
            tags:
                - Query
    /ibc/core/connection/v1/client_connections/{client_id}:
        get:
            operationId: Query_ClientConnections
            parameters:
                - description: client identifier associated with a connection
                  in: path
                  name: client_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.QueryClientConnectionsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ClientConnections queries the connection paths associated with a client
                state.
            tags:
                - Query
    /ibc/core/connection/v1/connections:
        get:
            operationId: Query_Connections
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Connections queries all the IBC connections of a chain.
            tags:
                - Query
    /ibc/core/connection/v1/connections/{connection_id}:
        get:
            operationId: Query_Connection
            parameters:
                - description: connection unique identifier
                  in: path
                  name: connection_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Connection queries an IBC connection end.
            tags:
                - Query
    /ibc/core/connection/v1/connections/{connection_id}/client_state:
        get:
            operationId: Query_ConnectionClientState
            parameters:
                - description: connection identifier
                  in: path
                  name: connection_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionClientStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ConnectionClientState queries the client state associated with the
                connection.
            tags:
                - Query
    /ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
        get:
            operationId: Query_ConnectionConsensusState
            parameters:
                - description: connection identifier
                  in: path
                  name: connection_id
                  required: true
                  type: string
                - format: uint64
                  in: path
                  name: revision_number
                  required: true
                  type: string
                - format: uint64
                  in: path
                  name: revision_height
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionConsensusStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                ConnectionConsensusState queries the consensus state associated with the
                connection.
            tags:
                - Query
    /ibc/core/connection/v1/params:
        get:
            operationId: Query_ConnectionParams
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ConnectionParams queries all parameters of the ibc connection submodule.
            tags:
                - Query
    /ibc/lightclients/wasm/v1/checksums:
        get:
            operationId: Query_Checksums
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.lightclients.wasm.v1.QueryChecksumsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Get all Wasm checksums
            tags:
                - Query
    /ibc/lightclients/wasm/v1/checksums/{checksum}/code:
        get:
            operationId: Query_Code
            parameters:
                - description: checksum is a hex encoded string of the code stored.
                  in: path
                  name: checksum
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ibc.lightclients.wasm.v1.QueryCodeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Get Wasm code for given checksum
            tags:
                - Query
    /junction.rollup.Msg/InitProver:
        post:
            operationId: Msg_InitProver
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.rollup.MsgInitProver'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.MsgInitProverResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - Msg
    /junction.rollup.Msg/InitRollup:
        post:
            operationId: Msg_InitRollup
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.rollup.MsgInitRollup'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.MsgInitRollupResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - Msg
    /junction.rollup.Msg/SubmitBatch:
        post:
            operationId: Msg_SubmitBatch
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.rollup.MsgSubmitBatch'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.MsgSubmitBatchResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - Msg
    /junction.rollup.Msg/SubmitBatchMetadata:
        post:
            operationId: Msg_SubmitBatchMetadata
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.rollup.MsgSubmitBatchMetadata'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.MsgSubmitBatchMetadataResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - Msg
    /junction.rollup.Msg/UpdateParams:
        post:
            operationId: Msg_UpdateParams
            parameters:
                - description: MsgUpdateParams is the Msg/UpdateParams request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.rollup.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.rollup.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a (governance) operation for updating the module
                parameters. The authority defaults to the x/gov module account.
            tags:
                - Msg
    /junction.wasm.v1.Msg/AddCodeUploadParamsAddresses:
        post:
            operationId: Msg_AddCodeUploadParamsAddresses
            parameters:
                - description: |-
                    MsgAddCodeUploadParamsAddresses is the
                    MsgAddCodeUploadParamsAddresses request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgAddCodeUploadParamsAddresses'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgAddCodeUploadParamsAddressesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                AddCodeUploadParamsAddresses defines a governance operation for
                adding addresses to code upload params.
                The authority is defined in the keeper.
            tags:
                - Msg
    /junction.wasm.v1.Msg/ClearAdmin:
        post:
            operationId: Msg_ClearAdmin
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgClearAdmin'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgClearAdminResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ClearAdmin removes any admin stored for a smart contract
            tags:
                - Msg
    /junction.wasm.v1.Msg/ExecuteContract:
        post:
            operationId: Msg_ExecuteContract
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgExecuteContract'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgExecuteContractResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Execute submits the given message data to a smart contract
            tags:
                - Msg
    /junction.wasm.v1.Msg/InstantiateContract:
        post:
            operationId: Msg_InstantiateContract
            parameters:
                - description: |-
                    MsgInstantiateContract create a new smart contract instance for the given
                    code id.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgInstantiateContract'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgInstantiateContractResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                InstantiateContract creates a new smart contract instance for the given
                 code id.
            tags:
                - Msg
    /junction.wasm.v1.Msg/InstantiateContract2:
        post:
            operationId: Msg_InstantiateContract2
            parameters:
                - description: |-
                    MsgInstantiateContract2 create a new smart contract instance for the given
                    code id with a predictable address.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgInstantiateContract2'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgInstantiateContract2Response'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                InstantiateContract2 creates a new smart contract instance for the given
                 code id with a predictable address
            tags:
                - Msg
    /junction.wasm.v1.Msg/MigrateContract:
        post:
            operationId: Msg_MigrateContract
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgMigrateContract'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgMigrateContractResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Migrate runs a code upgrade/ downgrade for a smart contract
            tags:
                - Msg
    /junction.wasm.v1.Msg/PinCodes:
        post:
            description: 'Since: 0.40'
            operationId: Msg_PinCodes
            parameters:
                - description: |-
                    MsgPinCodes is the MsgPinCodes request type.

                    Since: 0.40
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgPinCodes'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgPinCodesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                PinCodes defines a governance operation for pinning a set of
                code ids in the wasmvm cache. The authority is defined in the keeper.
            tags:
                - Msg
    /junction.wasm.v1.Msg/RemoveCodeUploadParamsAddresses:
        post:
            operationId: Msg_RemoveCodeUploadParamsAddresses
            parameters:
                - description: |-
                    MsgRemoveCodeUploadParamsAddresses is the
                    MsgRemoveCodeUploadParamsAddresses request type.
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgRemoveCodeUploadParamsAddresses'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                RemoveCodeUploadParamsAddresses defines a governance operation for
                removing addresses from code upload params.
                The authority is defined in the keeper.
            tags:
                - Msg
    /junction.wasm.v1.Msg/StoreAndInstantiateContract:
        post:
            description: 'Since: 0.40'
            operationId: Msg_StoreAndInstantiateContract
            parameters:
                - description: |-
                    MsgStoreAndInstantiateContract is the MsgStoreAndInstantiateContract
                    request type.

                    Since: 0.40
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgStoreAndInstantiateContract'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgStoreAndInstantiateContractResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                StoreAndInstantiateContract defines a governance operation for storing
                and instantiating the contract. The authority is defined in the keeper.
            tags:
                - Msg
    /junction.wasm.v1.Msg/StoreAndMigrateContract:
        post:
            description: 'Since: 0.42'
            operationId: Msg_StoreAndMigrateContract
            parameters:
                - description: |-
                    MsgStoreAndMigrateContract is the MsgStoreAndMigrateContract
                    request type.

                    Since: 0.42
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgStoreAndMigrateContract'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgStoreAndMigrateContractResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                StoreAndMigrateContract defines a governance operation for storing
                and migrating the contract. The authority is defined in the keeper.
            tags:
                - Msg
    /junction.wasm.v1.Msg/StoreCode:
        post:
            operationId: Msg_StoreCode
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgStoreCode'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgStoreCodeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: StoreCode to submit Wasm code to the system
            tags:
                - Msg
    /junction.wasm.v1.Msg/SudoContract:
        post:
            description: 'Since: 0.40'
            operationId: Msg_SudoContract
            parameters:
                - description: |-
                    MsgSudoContract is the MsgSudoContract request type.

                    Since: 0.40
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgSudoContract'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgSudoContractResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                SudoContract defines a governance operation for calling sudo
                on a contract. The authority is defined in the keeper.
            tags:
                - Msg
    /junction.wasm.v1.Msg/UnpinCodes:
        post:
            description: 'Since: 0.40'
            operationId: Msg_UnpinCodes
            parameters:
                - description: |-
                    MsgUnpinCodes is the MsgUnpinCodes request type.

                    Since: 0.40
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgUnpinCodes'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgUnpinCodesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UnpinCodes defines a governance operation for unpinning a set of
                code ids in the wasmvm cache. The authority is defined in the keeper.
            tags:
                - Msg
    /junction.wasm.v1.Msg/UpdateAdmin:
        post:
            operationId: Msg_UpdateAdmin
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgUpdateAdmin'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgUpdateAdminResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateAdmin sets a new admin for a smart contract
            tags:
                - Msg
    /junction.wasm.v1.Msg/UpdateContractLabel:
        post:
            description: 'Since: 0.43'
            operationId: Msg_UpdateContractLabel
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgUpdateContractLabel'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgUpdateContractLabelResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateContractLabel sets a new label for a smart contract
            tags:
                - Msg
    /junction.wasm.v1.Msg/UpdateInstantiateConfig:
        post:
            operationId: Msg_UpdateInstantiateConfig
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgUpdateInstantiateConfig'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgUpdateInstantiateConfigResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: UpdateInstantiateConfig updates instantiate config for a smart contract
            tags:
                - Msg
    /junction.wasm.v1.Msg/UpdateParams:
        post:
            description: 'Since: 0.40'
            operationId: Msg_UpdateParams
            parameters:
                - description: |-
                    MsgUpdateParams is the MsgUpdateParams request type.

                    Since: 0.40
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/junction.wasm.v1.MsgUpdateParams'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.MsgUpdateParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: |-
                UpdateParams defines a governance operation for updating the x/wasm
                module parameters. The authority is defined in the keeper.
            tags:
                - Msg
    /junction/wasm/v1/code:
        get:
            operationId: Query_Codes
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryCodesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Codes gets the metadata for all stored wasm codes
            tags:
                - Query
    /junction/wasm/v1/code/{code_id}:
        get:
            operationId: Query_Code
            parameters:
                - description: grpc-gateway_out does not support Go style CodID
                  format: uint64
                  in: path
                  name: code_id
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryCodeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Code gets the binary code and metadata for a singe wasm code
            tags:
                - Query
    /junction/wasm/v1/code/{code_id}/contracts:
        get:
            operationId: Query_ContractsByCode
            parameters:
                - description: grpc-gateway_out does not support Go style CodID
                  format: uint64
                  in: path
                  name: code_id
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryContractsByCodeResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ContractsByCode lists all smart contracts for a code id
            tags:
                - Query
    /junction/wasm/v1/codes/params:
        get:
            operationId: Query_Params
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryParamsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: Params gets the module params
            tags:
                - Query
    /junction/wasm/v1/codes/pinned:
        get:
            operationId: Query_PinnedCodes
            parameters:
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryPinnedCodesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: PinnedCodes gets the pinned code ids
            tags:
                - Query
    /junction/wasm/v1/contract/{address}:
        get:
            operationId: Query_ContractInfo
            parameters:
                - description: address is the address of the contract to query
                  in: path
                  name: address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryContractInfoResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ContractInfo gets the contract meta data
            tags:
                - Query
    /junction/wasm/v1/contract/{address}/history:
        get:
            operationId: Query_ContractHistory
            parameters:
                - description: address is the address of the contract to query
                  in: path
                  name: address
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryContractHistoryResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ContractHistory gets the contract code history
            tags:
                - Query
    /junction/wasm/v1/contract/{address}/raw/{query_data}:
        get:
            operationId: Query_RawContractState
            parameters:
                - description: address is the address of the contract
                  in: path
                  name: address
                  required: true
                  type: string
                - format: byte
                  in: path
                  name: query_data
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryRawContractStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: RawContractState gets single key from the raw store data of a contract
            tags:
                - Query
    /junction/wasm/v1/contract/{address}/smart/{query_data}:
        get:
            operationId: Query_SmartContractState
            parameters:
                - description: address is the address of the contract
                  in: path
                  name: address
                  required: true
                  type: string
                - description: QueryData contains the query data passed to the contract
                  format: byte
                  in: path
                  name: query_data
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QuerySmartContractStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: SmartContractState get smart query result from the contract
            tags:
                - Query
    /junction/wasm/v1/contract/{address}/state:
        get:
            operationId: Query_AllContractState
            parameters:
                - description: address is the address of the contract
                  in: path
                  name: address
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryAllContractStateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: AllContractState gets all raw store data for a single contract
            tags:
                - Query
    /junction/wasm/v1/contract/build_address:
        get:
            operationId: Query_BuildAddress
            parameters:
                - description: CodeHash is the hash of the code
                  in: query
                  name: code_hash
                  required: false
                  type: string
                - description: CreatorAddress is the address of the contract instantiator
                  in: query
                  name: creator_address
                  required: false
                  type: string
                - description: Salt is a hex encoded salt
                  in: query
                  name: salt
                  required: false
                  type: string
                - description: |-
                    InitArgs are optional json encoded init args to be used in contract address
                    building if provided
                  format: byte
                  in: query
                  name: init_args
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryBuildAddressResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: BuildAddress builds a contract address
            tags:
                - Query
    /junction/wasm/v1/contracts/creator/{creator_address}:
        get:
            operationId: Query_ContractsByCreator
            parameters:
                - description: CreatorAddress is the address of contract creator
                  in: path
                  name: creator_address
                  required: true
                  type: string
                - description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                  format: byte
                  in: query
                  name: pagination.key
                  required: false
                  type: string
                - description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                  format: uint64
                  in: query
                  name: pagination.offset
                  required: false
                  type: string
                - description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                  format: uint64
                  in: query
                  name: pagination.limit
                  required: false
                  type: string
                - description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                  in: query
                  name: pagination.count_total
                  required: false
                  type: boolean
                - description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                  in: query
                  name: pagination.reverse
                  required: false
                  type: boolean
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/junction.wasm.v1.QueryContractsByCreatorResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            summary: ContractsByCreator gets the contracts by creator
            tags:
                - Query
    /tendermint.abci.ABCI/ApplySnapshotChunk:
        post:
            operationId: ABCI_ApplySnapshotChunk
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestApplySnapshotChunk'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseApplySnapshotChunk'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/CheckTx:
        post:
            operationId: ABCI_CheckTx
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestCheckTx'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseCheckTx'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/Commit:
        post:
            operationId: ABCI_Commit
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestCommit'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseCommit'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/Echo:
        post:
            operationId: ABCI_Echo
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestEcho'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseEcho'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/ExtendVote:
        post:
            operationId: ABCI_ExtendVote
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestExtendVote'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseExtendVote'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/FinalizeBlock:
        post:
            operationId: ABCI_FinalizeBlock
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestFinalizeBlock'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseFinalizeBlock'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/Flush:
        post:
            operationId: ABCI_Flush
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestFlush'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseFlush'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/Info:
        post:
            operationId: ABCI_Info
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestInfo'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseInfo'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/InitChain:
        post:
            operationId: ABCI_InitChain
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestInitChain'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseInitChain'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/ListSnapshots:
        post:
            operationId: ABCI_ListSnapshots
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestListSnapshots'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseListSnapshots'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/LoadSnapshotChunk:
        post:
            operationId: ABCI_LoadSnapshotChunk
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestLoadSnapshotChunk'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseLoadSnapshotChunk'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/OfferSnapshot:
        post:
            operationId: ABCI_OfferSnapshot
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestOfferSnapshot'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseOfferSnapshot'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/PrepareProposal:
        post:
            operationId: ABCI_PrepareProposal
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestPrepareProposal'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponsePrepareProposal'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/ProcessProposal:
        post:
            operationId: ABCI_ProcessProposal
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestProcessProposal'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseProcessProposal'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/Query:
        post:
            operationId: ABCI_Query
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestQuery'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseQuery'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
    /tendermint.abci.ABCI/VerifyVoteExtension:
        post:
            operationId: ABCI_VerifyVoteExtension
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/tendermint.abci.RequestVerifyVoteExtension'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/tendermint.abci.ResponseVerifyVoteExtension'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/google.rpc.Status'
            tags:
                - ABCI
definitions:
    cosmos.auth.v1beta1.AddressBytesToStringResponse:
        description: |-
            AddressBytesToStringResponse is the response type for AddressString rpc method.

            Since: cosmos-sdk 0.46
        properties:
            address_string:
                type: string
        type: object
    cosmos.auth.v1beta1.AddressStringToBytesResponse:
        description: |-
            AddressStringToBytesResponse is the response type for AddressBytes rpc method.

            Since: cosmos-sdk 0.46
        properties:
            address_bytes:
                format: byte
                type: string
        type: object
    cosmos.auth.v1beta1.BaseAccount:
        description: |-
            BaseAccount defines a base account type. It contains all the necessary fields
            for basic account functionality. Any custom account type should extend this
            type for additional functionality (e.g. vesting).
        properties:
            account_number:
                format: uint64
                type: string
            address:
                type: string
            pub_key:
                $ref: '#/definitions/google.protobuf.Any'
            sequence:
                format: uint64
                type: string
        type: object
    cosmos.auth.v1beta1.Bech32PrefixResponse:
        description: |-
            Bech32PrefixResponse is the response type for Bech32Prefix rpc method.

            Since: cosmos-sdk 0.46
        properties:
            bech32_prefix:
                type: string
        type: object
    cosmos.auth.v1beta1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the Msg/UpdateParams request type.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/cosmos.auth.v1beta1.Params'
                description: |-
                    params defines the x/auth parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    cosmos.auth.v1beta1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.auth.v1beta1.Params:
        description: Params defines the parameters for the auth module.
        properties:
            max_memo_characters:
                format: uint64
                type: string
            sig_verify_cost_ed25519:
                format: uint64
                type: string
            sig_verify_cost_secp256k1:
                format: uint64
                type: string
            tx_sig_limit:
                format: uint64
                type: string
            tx_size_cost_per_byte:
                format: uint64
                type: string
        type: object
    cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
        description: 'Since: cosmos-sdk 0.46.2'
        properties:
            account_address:
                type: string
        title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method
        type: object
    cosmos.auth.v1beta1.QueryAccountInfoResponse:
        description: |-
            QueryAccountInfoResponse is the Query/AccountInfo response type.

            Since: cosmos-sdk 0.47
        properties:
            info:
                $ref: '#/definitions/cosmos.auth.v1beta1.BaseAccount'
                description: info is the account info which is represented by BaseAccount.
        type: object
    cosmos.auth.v1beta1.QueryAccountResponse:
        description: QueryAccountResponse is the response type for the Query/Account RPC method.
        properties:
            account:
                $ref: '#/definitions/google.protobuf.Any'
                description: account defines the account of the corresponding address.
        type: object
    cosmos.auth.v1beta1.QueryAccountsResponse:
        description: |-
            QueryAccountsResponse is the response type for the Query/Accounts RPC method.

            Since: cosmos-sdk 0.43
        properties:
            accounts:
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                title: accounts are the existing accounts
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
        description: QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName RPC method.
        properties:
            account:
                $ref: '#/definitions/google.protobuf.Any'
        type: object
    cosmos.auth.v1beta1.QueryModuleAccountsResponse:
        description: |-
            QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.

            Since: cosmos-sdk 0.46
        properties:
            accounts:
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
        type: object
    cosmos.auth.v1beta1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/cosmos.auth.v1beta1.Params'
                description: params defines the parameters of the module.
        type: object
    cosmos.authz.v1beta1.Grant:
        description: |-
            Grant gives permissions to execute
            the provide method with expiration time.
        properties:
            authorization:
                $ref: '#/definitions/google.protobuf.Any'
            expiration:
                format: date-time
                title: |-
                    time when the grant will expire and will be pruned. If null, then the grant
                    doesn't have a time expiration (other conditions  in `authorization`
                    may apply to invalidate the grant)
                type: string
        type: object
    cosmos.authz.v1beta1.GrantAuthorization:
        properties:
            authorization:
                $ref: '#/definitions/google.protobuf.Any'
            expiration:
                format: date-time
                type: string
            grantee:
                type: string
            granter:
                type: string
        title: |-
            GrantAuthorization extends a grant with both the addresses of the grantee and granter.
            It is used in genesis.proto and query.proto
        type: object
    cosmos.authz.v1beta1.MsgExec:
        description: |-
            MsgExec attempts to execute the provided messages using
            authorizations granted to the grantee. Each message should have only
            one signer corresponding to the granter of the authorization.
        properties:
            grantee:
                type: string
            msgs:
                description: |-
                    Execute Msg.
                    The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg))
                    triple and validate it.
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
        type: object
    cosmos.authz.v1beta1.MsgExecResponse:
        description: MsgExecResponse defines the Msg/MsgExecResponse response type.
        properties:
            results:
                items:
                    format: byte
                    type: string
                type: array
        type: object
    cosmos.authz.v1beta1.MsgGrant:
        description: |-
            MsgGrant is a request type for Grant method. It declares authorization to the grantee
            on behalf of the granter with the provided expiration time.
        properties:
            grant:
                $ref: '#/definitions/cosmos.authz.v1beta1.Grant'
            grantee:
                type: string
            granter:
                type: string
        type: object
    cosmos.authz.v1beta1.MsgGrantResponse:
        description: MsgGrantResponse defines the Msg/MsgGrant response type.
        type: object
    cosmos.authz.v1beta1.MsgRevoke:
        description: |-
            MsgRevoke revokes any authorization with the provided sdk.Msg type on the
            granter's account with that has been granted to the grantee.
        properties:
            grantee:
                type: string
            granter:
                type: string
            msg_type_url:
                type: string
        type: object
    cosmos.authz.v1beta1.MsgRevokeResponse:
        description: MsgRevokeResponse defines the Msg/MsgRevokeResponse response type.
        type: object
    cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
        description: QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
        properties:
            grants:
                description: grants is a list of grants granted to the grantee.
                items:
                    $ref: '#/definitions/cosmos.authz.v1beta1.GrantAuthorization'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines an pagination for the response.
        type: object
    cosmos.authz.v1beta1.QueryGranterGrantsResponse:
        description: QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
        properties:
            grants:
                description: grants is a list of grants granted by the granter.
                items:
                    $ref: '#/definitions/cosmos.authz.v1beta1.GrantAuthorization'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines an pagination for the response.
        type: object
    cosmos.authz.v1beta1.QueryGrantsResponse:
        description: QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
        properties:
            grants:
                description: authorizations is a list of grants granted for grantee by granter.
                items:
                    $ref: '#/definitions/cosmos.authz.v1beta1.Grant'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines an pagination for the response.
        type: object
    cosmos.autocli.v1.AppOptionsRequest:
        description: AppOptionsRequest is the RemoteInfoService/AppOptions request type.
        type: object
    cosmos.autocli.v1.AppOptionsResponse:
        description: AppOptionsResponse is the RemoteInfoService/AppOptions response type.
        properties:
            module_options:
                additionalProperties:
                    $ref: '#/definitions/cosmos.autocli.v1.ModuleOptions'
                description: module_options is a map of module name to autocli module options.
                type: object
        type: object
    cosmos.autocli.v1.FlagOptions:
        description: |-
            FlagOptions are options for flags generated from rpc request fields.
            By default, all request fields are configured as flags based on the
            kebab-case name of the field. Fields can be turned into positional arguments
            instead by using RpcCommandOptions.positional_args.
        properties:
            default_value:
                description: default_value is the default value as text.
                type: string
            deprecated:
                description: deprecated is the usage text to show if this flag is deprecated.
                type: string
            hidden:
                title: hidden hides the flag from help/usage text
                type: boolean
            name:
                description: name is an alternate name to use for the field flag.
                type: string
            shorthand:
                description: shorthand is a one-letter abbreviated flag.
                type: string
            shorthand_deprecated:
                description: shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
                type: string
            usage:
                description: usage is the help message.
                type: string
        type: object
    cosmos.autocli.v1.ModuleOptions:
        description: ModuleOptions describes the CLI options for a Cosmos SDK module.
        properties:
            query:
                $ref: '#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor'
                description: query describes the queries commands for the module.
            tx:
                $ref: '#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor'
                description: tx describes the tx commands for the module.
        type: object
    cosmos.autocli.v1.PositionalArgDescriptor:
        description: PositionalArgDescriptor describes a positional argument.
        properties:
            proto_field:
                description: |-
                    proto_field specifies the proto field to use as the positional arg. Any
                    fields used as positional args will not have a flag generated.
                type: string
            varargs:
                description: |-
                    varargs makes a positional parameter a varargs parameter. This can only be
                    applied to last positional parameter and the proto_field must a repeated
                    field.
                type: boolean
        type: object
    cosmos.autocli.v1.RpcCommandOptions:
        description: |-
            RpcCommandOptions specifies options for commands generated from protobuf
            rpc methods.
        properties:
            alias:
                description: alias is an array of aliases that can be used instead of the first word in Use.
                items:
                    type: string
                type: array
            deprecated:
                description: deprecated defines, if this command is deprecated and should print this string when used.
                type: string
            example:
                description: example is examples of how to use the command.
                type: string
            flag_options:
                additionalProperties:
                    $ref: '#/definitions/cosmos.autocli.v1.FlagOptions'
                description: |-
                    flag_options are options for flags generated from rpc request fields.
                    By default all request fields are configured as flags. They can
                    also be configured as positional args instead using positional_args.
                type: object
            long:
                description: long is the long message shown in the 'help <this-command>' output.
                type: string
            positional_args:
                description: positional_args specifies positional arguments for the command.
                items:
                    $ref: '#/definitions/cosmos.autocli.v1.PositionalArgDescriptor'
                    type: object
                type: array
            rpc_method:
                description: |-
                    rpc_method is short name of the protobuf rpc method that this command is
                    generated from.
                type: string
            short:
                description: short is the short description shown in the 'help' output.
                type: string
            skip:
                description: skip specifies whether to skip this rpc method when generating commands.
                type: boolean
            suggest_for:
                description: |-
                    suggest_for is an array of command names for which this command will be suggested -
                    similar to aliases but only suggests.
                items:
                    type: string
                type: array
            use:
                description: |-
                    use is the one-line usage method. It also allows specifying an alternate
                    name for the command as the first word of the usage text.

                    By default the name of an rpc command is the kebab-case short name of the
                    rpc method.
                type: string
            version:
                description: |-
                    version defines the version for this command. If this value is non-empty and the command does not
                    define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
                    will print content of the "Version" variable. A shorthand "v" flag will also be added if the
                    command does not define one.
                type: string
        type: object
    cosmos.autocli.v1.ServiceCommandDescriptor:
        description: ServiceCommandDescriptor describes a CLI command based on a protobuf service.
        properties:
            rpc_command_options:
                description: |-
                    rpc_command_options are options for commands generated from rpc methods.
                    If no options are specified for a given rpc method on the service, a
                    command will be generated for that method with the default options.
                items:
                    $ref: '#/definitions/cosmos.autocli.v1.RpcCommandOptions'
                    type: object
                type: array
            service:
                description: |-
                    service is the fully qualified name of the protobuf service to build
                    the command from. It can be left empty if sub_commands are used instead
                    which may be the case if a module provides multiple tx and/or query services.
                type: string
            sub_commands:
                additionalProperties:
                    $ref: '#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor'
                description: |-
                    sub_commands is a map of optional sub-commands for this command based on
                    different protobuf services. The map key is used as the name of the
                    sub-command.
                type: object
        type: object
    cosmos.bank.v1beta1.DenomOwner:
        description: |-
            DenomOwner defines structure representing an account that owns or holds a
            particular denominated token. It contains the account address and account
            balance of the denominated token.

            Since: cosmos-sdk 0.46
        properties:
            address:
                description: address defines the address that owns a particular denomination.
                type: string
            balance:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                description: balance is the balance of the denominated coin for an account.
        type: object
    cosmos.bank.v1beta1.DenomUnit:
        description: |-
            DenomUnit represents a struct that describes a given
            denomination unit of the basic token.
        properties:
            aliases:
                items:
                    type: string
                title: aliases is a list of string aliases for the given denom
                type: array
            denom:
                description: denom represents the string name of the given denom unit (e.g uatom).
                type: string
            exponent:
                description: |-
                    exponent represents power of 10 exponent that one must
                    raise the base_denom to in order to equal the given DenomUnit's denom
                    1 denom = 10^exponent base_denom
                    (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                    exponent = 6, thus: 1 atom = 10^6 uatom).
                format: int64
                type: integer
        type: object
    cosmos.bank.v1beta1.Input:
        description: Input models transaction input.
        properties:
            address:
                type: string
            coins:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
        type: object
    cosmos.bank.v1beta1.Metadata:
        description: |-
            Metadata represents a struct that describes
            a basic token.
        properties:
            base:
                description: base represents the base denom (should be the DenomUnit with exponent = 0).
                type: string
            denom_units:
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.DenomUnit'
                    type: object
                title: denom_units represents the list of DenomUnit's for a given coin
                type: array
            description:
                type: string
            display:
                description: |-
                    display indicates the suggested denom that should be
                    displayed in clients.
                type: string
            name:
                description: 'Since: cosmos-sdk 0.43'
                title: 'name defines the name of the token (eg: Cosmos Atom)'
                type: string
            symbol:
                description: |-
                    symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                    be the same as the display.

                    Since: cosmos-sdk 0.43
                type: string
            uri:
                description: |-
                    URI to a document (on or off-chain) that contains additional information. Optional.

                    Since: cosmos-sdk 0.46
                type: string
            uri_hash:
                description: |-
                    URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                    the document didn't change. Optional.

                    Since: cosmos-sdk 0.46
                type: string
        type: object
    cosmos.bank.v1beta1.MsgMultiSend:
        description: MsgMultiSend represents an arbitrary multi-in, multi-out send message.
        properties:
            inputs:
                description: |-
                    Inputs, despite being `repeated`, only allows one sender input. This is
                    checked in MsgMultiSend's ValidateBasic.
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.Input'
                    type: object
                type: array
            outputs:
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.Output'
                    type: object
                type: array
        type: object
    cosmos.bank.v1beta1.MsgMultiSendResponse:
        description: MsgMultiSendResponse defines the Msg/MultiSend response type.
        type: object
    cosmos.bank.v1beta1.MsgSend:
        description: MsgSend represents a message to send coins from one account to another.
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            from_address:
                type: string
            to_address:
                type: string
        type: object
    cosmos.bank.v1beta1.MsgSendResponse:
        description: MsgSendResponse defines the Msg/Send response type.
        type: object
    cosmos.bank.v1beta1.MsgSetSendEnabled:
        description: |-
            MsgSetSendEnabled is the Msg/SetSendEnabled request type.

            Only entries to add/update/delete need to be included.
            Existing SendEnabled entries that are not included in this
            message are left unchanged.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module.
                type: string
            send_enabled:
                description: send_enabled is the list of entries to add or update.
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.SendEnabled'
                    type: object
                type: array
            use_default_for:
                description: |-
                    use_default_for is a list of denoms that should use the params.default_send_enabled value.
                    Denoms listed here will have their SendEnabled entries deleted.
                    If a denom is included that doesn't have a SendEnabled entry,
                    it will be ignored.
                items:
                    type: string
                type: array
        type: object
    cosmos.bank.v1beta1.MsgSetSendEnabledResponse:
        description: |-
            MsgSetSendEnabledResponse defines the Msg/SetSendEnabled response type.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.bank.v1beta1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the Msg/UpdateParams request type.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/cosmos.bank.v1beta1.Params'
                description: |-
                    params defines the x/bank parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    cosmos.bank.v1beta1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.bank.v1beta1.Output:
        description: Output models transaction outputs.
        properties:
            address:
                type: string
            coins:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
        type: object
    cosmos.bank.v1beta1.Params:
        description: Params defines the parameters for the bank module.
        properties:
            default_send_enabled:
                type: boolean
            send_enabled:
                description: |-
                    Deprecated: Use of SendEnabled in params is deprecated.
                    For genesis, use the newly added send_enabled field in the genesis object.
                    Storage, lookup, and manipulation of this information is now in the keeper.

                    As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.SendEnabled'
                    type: object
                type: array
        type: object
    cosmos.bank.v1beta1.QueryAllBalancesResponse:
        description: |-
            QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
            method.
        properties:
            balances:
                description: balances is the balances of all the coins.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.bank.v1beta1.QueryBalanceResponse:
        description: QueryBalanceResponse is the response type for the Query/Balance RPC method.
        properties:
            balance:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                description: balance is the balance of the coin.
        type: object
    cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse:
        description: |-
            QueryDenomMetadataByQueryStringResponse is the response type for the Query/DenomMetadata RPC
            method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
        properties:
            metadata:
                $ref: '#/definitions/cosmos.bank.v1beta1.Metadata'
                description: metadata describes and provides all the client information for the requested token.
        type: object
    cosmos.bank.v1beta1.QueryDenomMetadataResponse:
        description: |-
            QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
            method.
        properties:
            metadata:
                $ref: '#/definitions/cosmos.bank.v1beta1.Metadata'
                description: metadata describes and provides all the client information for the requested token.
        type: object
    cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse:
        description: |-
            QueryDenomOwnersByQueryResponse defines the RPC response of a DenomOwnersByQuery RPC query.

            Since: cosmos-sdk 0.50.3
        properties:
            denom_owners:
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.DenomOwner'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.bank.v1beta1.QueryDenomOwnersResponse:
        description: |-
            QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.

            Since: cosmos-sdk 0.46
        properties:
            denom_owners:
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.DenomOwner'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
        description: |-
            QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
            method.
        properties:
            metadatas:
                description: metadata provides the client information for all the registered tokens.
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.Metadata'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.bank.v1beta1.QueryParamsResponse:
        description: QueryParamsResponse defines the response type for querying x/bank parameters.
        properties:
            params:
                $ref: '#/definitions/cosmos.bank.v1beta1.Params'
                description: params provides the parameters of the bank module.
        type: object
    cosmos.bank.v1beta1.QuerySendEnabledResponse:
        description: |-
            QuerySendEnabledResponse defines the RPC response of a SendEnable query.

            Since: cosmos-sdk 0.47
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: |-
                    pagination defines the pagination in the response. This field is only
                    populated if the denoms field in the request is empty.
            send_enabled:
                items:
                    $ref: '#/definitions/cosmos.bank.v1beta1.SendEnabled'
                    type: object
                type: array
        type: object
    cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse:
        description: |-
            QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
            querying an account's spendable balance for a specific denom.

            Since: cosmos-sdk 0.47
        properties:
            balance:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                description: balance is the balance of the coin.
        type: object
    cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
        description: |-
            QuerySpendableBalancesResponse defines the gRPC response structure for querying
            an account's spendable balances.

            Since: cosmos-sdk 0.46
        properties:
            balances:
                description: balances is the spendable balances of all the coins.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.bank.v1beta1.QuerySupplyOfResponse:
        description: QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method.
        properties:
            amount:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                description: amount is the supply of the coin.
        type: object
    cosmos.bank.v1beta1.QueryTotalSupplyResponse:
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: |-
                    pagination defines the pagination in the response.

                    Since: cosmos-sdk 0.43
            supply:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: supply is the supply of the coins
                type: array
        title: |-
            QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
            method
        type: object
    cosmos.bank.v1beta1.SendEnabled:
        description: |-
            SendEnabled maps coin denom to a send_enabled status (whether a denom is
            sendable).
        properties:
            denom:
                type: string
            enabled:
                type: boolean
        type: object
    cosmos.base.abci.v1beta1.ABCIMessageLog:
        description: ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
        properties:
            events:
                description: |-
                    Events contains a slice of Event objects that were emitted during some
                    execution.
                items:
                    $ref: '#/definitions/cosmos.base.abci.v1beta1.StringEvent'
                    type: object
                type: array
            log:
                type: string
            msg_index:
                format: int64
                type: integer
        type: object
    cosmos.base.abci.v1beta1.Attribute:
        description: |-
            Attribute defines an attribute wrapper where the key and value are
            strings instead of raw bytes.
        properties:
            key:
                type: string
            value:
                type: string
        type: object
    cosmos.base.abci.v1beta1.GasInfo:
        description: GasInfo defines tx execution gas context.
        properties:
            gas_used:
                description: GasUsed is the amount of gas actually consumed.
                format: uint64
                type: string
            gas_wanted:
                description: GasWanted is the maximum units of work we allow this tx to perform.
                format: uint64
                type: string
        type: object
    cosmos.base.abci.v1beta1.Result:
        description: Result is the union of ResponseFormat and ResponseCheckTx.
        properties:
            data:
                description: |-
                    Data is any data returned from message or handler execution. It MUST be
                    length prefixed in order to separate data from multiple message executions.
                    Deprecated. This field is still populated, but prefer msg_response instead
                    because it also contains the Msg response typeURL.
                format: byte
                type: string
            events:
                description: |-
                    Events contains a slice of Event objects that were emitted during message
                    or handler execution.
                items:
                    $ref: '#/definitions/tendermint.abci.Event'
                    type: object
                type: array
            log:
                description: Log contains the log information from message or handler execution.
                type: string
            msg_responses:
                description: |-
                    msg_responses contains the Msg handler responses type packed in Anys.

                    Since: cosmos-sdk 0.46
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
        type: object
    cosmos.base.abci.v1beta1.StringEvent:
        description: |-
            StringEvent defines en Event object wrapper where all the attributes
            contain key/value pairs that are strings instead of raw bytes.
        properties:
            attributes:
                items:
                    $ref: '#/definitions/cosmos.base.abci.v1beta1.Attribute'
                    type: object
                type: array
            type:
                type: string
        type: object
    cosmos.base.abci.v1beta1.TxResponse:
        description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
        properties:
            code:
                description: Response code.
                format: int64
                type: integer
            codespace:
                title: Namespace for the Code
                type: string
            data:
                description: Result bytes, if any.
                type: string
            events:
                description: |-
                    Events defines all the events emitted by processing a transaction. Note,
                    these events include those emitted by processing all the messages and those
                    emitted from the ante. Whereas Logs contains the events, with
                    additional metadata, emitted only by processing the messages.

                    Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                items:
                    $ref: '#/definitions/tendermint.abci.Event'
                    type: object
                type: array
            gas_used:
                description: Amount of gas consumed by transaction.
                format: int64
                type: string
            gas_wanted:
                description: Amount of gas requested for transaction.
                format: int64
                type: string
            height:
                format: int64
                title: The block height
                type: string
            info:
                description: Additional information. May be non-deterministic.
                type: string
            logs:
                description: The output of the application's logger (typed). May be non-deterministic.
                items:
                    $ref: '#/definitions/cosmos.base.abci.v1beta1.ABCIMessageLog'
                    type: object
                type: array
            raw_log:
                description: |-
                    The output of the application's logger (raw string). May be
                    non-deterministic.
                type: string
            timestamp:
                description: |-
                    Time of the previous block. For heights > 1, it's the weighted median of
                    the timestamps of the valid votes in the block.LastCommit. For height == 1,
                    it's genesis time.
                type: string
            tx:
                $ref: '#/definitions/google.protobuf.Any'
                description: The request transaction bytes.
            txhash:
                description: The transaction hash.
                type: string
        type: object
    cosmos.base.node.v1beta1.ConfigResponse:
        description: ConfigResponse defines the response structure for the Config gRPC query.
        properties:
            halt_height:
                format: uint64
                type: string
            minimum_gas_price:
                type: string
            pruning_interval:
                type: string
            pruning_keep_recent:
                type: string
        type: object
    cosmos.base.node.v1beta1.StatusResponse:
        description: StateResponse defines the response structure for the status of a node.
        properties:
            app_hash:
                format: byte
                title: app hash of the current block
                type: string
            earliest_store_height:
                format: uint64
                title: earliest block height available in the store
                type: string
            height:
                format: uint64
                title: current block height
                type: string
            timestamp:
                format: date-time
                title: block height timestamp
                type: string
            validator_hash:
                format: byte
                title: validator hash provided by the consensus header
                type: string
        type: object
    cosmos.base.query.v1beta1.PageRequest:
        description: |-
            message SomeRequest {
                     Foo some_parameter = 1;
                     PageRequest pagination = 2;
             }
        properties:
            count_total:
                description: |-
                    count_total is set to true  to indicate that the result set should include
                    a count of the total number of items available for pagination in UIs.
                    count_total is only respected when offset is used. It is ignored when key
                    is set.
                type: boolean
            key:
                description: |-
                    key is a value returned in PageResponse.next_key to begin
                    querying the next page most efficiently. Only one of offset or key
                    should be set.
                format: byte
                type: string
            limit:
                description: |-
                    limit is the total number of results to be returned in the result page.
                    If left empty it will default to a value to be set by each app.
                format: uint64
                type: string
            offset:
                description: |-
                    offset is a numeric offset that can be used when key is unavailable.
                    It is less efficient than using key. Only one of offset or key should
                    be set.
                format: uint64
                type: string
            reverse:
                description: |-
                    reverse is set to true if results are to be returned in the descending order.

                    Since: cosmos-sdk 0.43
                type: boolean
        title: |-
            PageRequest is to be embedded in gRPC request messages for efficient
            pagination. Ex:
        type: object
    cosmos.base.query.v1beta1.PageResponse:
        description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        properties:
            next_key:
                description: |-
                    next_key is the key to be passed to PageRequest.key to
                    query the next page most efficiently. It will be empty if
                    there are no more results.
                format: byte
                type: string
            total:
                format: uint64
                title: |-
                    total is total number of results available if PageRequest.count_total
                    was set, its value is undefined otherwise
                type: string
        type: object
    cosmos.base.reflection.v1beta1.ListAllInterfacesResponse:
        description: ListAllInterfacesResponse is the response type of the ListAllInterfaces RPC.
        properties:
            interface_names:
                description: interface_names is an array of all the registered interfaces.
                items:
                    type: string
                type: array
        type: object
    cosmos.base.reflection.v1beta1.ListImplementationsResponse:
        description: |-
            ListImplementationsResponse is the response type of the ListImplementations
            RPC.
        properties:
            implementation_message_names:
                items:
                    type: string
                type: array
        type: object
    cosmos.base.reflection.v2alpha1.AuthnDescriptor:
        properties:
            sign_modes:
                items:
                    $ref: '#/definitions/cosmos.base.reflection.v2alpha1.SigningModeDescriptor'
                    type: object
                title: sign_modes defines the supported signature algorithm
                type: array
        title: |-
            AuthnDescriptor provides information on how to sign transactions without relying
            on the online RPCs GetTxMetadata and CombineUnsignedTxAndSignatures
        type: object
    cosmos.base.reflection.v2alpha1.ChainDescriptor:
        properties:
            id:
                title: id is the chain id
                type: string
        title: ChainDescriptor describes chain information of the application
        type: object
    cosmos.base.reflection.v2alpha1.CodecDescriptor:
        properties:
            interfaces:
                items:
                    $ref: '#/definitions/cosmos.base.reflection.v2alpha1.InterfaceDescriptor'
                    type: object
                title: interfaces is a list of the registerted interfaces descriptors
                type: array
        title: CodecDescriptor describes the registered interfaces and provides metadata information on the types
        type: object
    cosmos.base.reflection.v2alpha1.ConfigurationDescriptor:
        properties:
            bech32_account_address_prefix:
                title: bech32_account_address_prefix is the account address prefix
                type: string
        title: ConfigurationDescriptor contains metadata information on the sdk.Config
        type: object
    cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse:
        properties:
            authn:
                $ref: '#/definitions/cosmos.base.reflection.v2alpha1.AuthnDescriptor'
                title: authn describes how to authenticate to the application when sending transactions
        title: GetAuthnDescriptorResponse is the response returned by the GetAuthnDescriptor RPC
        type: object
    cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse:
        properties:
            chain:
                $ref: '#/definitions/cosmos.base.reflection.v2alpha1.ChainDescriptor'
                title: chain describes application chain information
        title: GetChainDescriptorResponse is the response returned by the GetChainDescriptor RPC
        type: object
    cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse:
        properties:
            codec:
                $ref: '#/definitions/cosmos.base.reflection.v2alpha1.CodecDescriptor'
                title: codec describes the application codec such as registered interfaces and implementations
        title: GetCodecDescriptorResponse is the response returned by the GetCodecDescriptor RPC
        type: object
    cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse:
        properties:
            config:
                $ref: '#/definitions/cosmos.base.reflection.v2alpha1.ConfigurationDescriptor'
                title: config describes the application's sdk.Config
        title: GetConfigurationDescriptorResponse is the response returned by the GetConfigurationDescriptor RPC
        type: object
    cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse:
        properties:
            queries:
                $ref: '#/definitions/cosmos.base.reflection.v2alpha1.QueryServicesDescriptor'
                title: queries provides information on the available queryable services
        title: GetQueryServicesDescriptorResponse is the response returned by the GetQueryServicesDescriptor RPC
        type: object
    cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse:
        properties:
            tx:
                $ref: '#/definitions/cosmos.base.reflection.v2alpha1.TxDescriptor'
                title: |-
                    tx provides information on msgs that can be forwarded to the application
                    alongside the accepted transaction protobuf type
        title: GetTxDescriptorResponse is the response returned by the GetTxDescriptor RPC
        type: object
    cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor:
        properties:
            field_descriptor_names:
                items:
                    type: string
                title: |-
                    field_descriptor_names is a list of the protobuf name (not fullname) of the field
                    which contains the interface as google.protobuf.Any (the interface is the same, but
                    it can be in multiple fields of the same proto message)
                type: array
            fullname:
                title: fullname is the protobuf fullname of the type containing the interface
                type: string
        title: |-
            InterfaceAcceptingMessageDescriptor describes a protobuf message which contains
            an interface represented as a google.protobuf.Any
        type: object
    cosmos.base.reflection.v2alpha1.InterfaceDescriptor:
        properties:
            fullname:
                title: fullname is the name of the interface
                type: string
            interface_accepting_messages:
                items:
                    $ref: '#/definitions/cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor'
                    type: object
                title: |-
                    interface_accepting_messages contains information regarding the proto messages which contain the interface as
                    google.protobuf.Any field
                type: array
            interface_implementers:
                items:
                    $ref: '#/definitions/cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor'
                    type: object
                title: interface_implementers is a list of the descriptors of the interface implementers
                type: array
        title: InterfaceDescriptor describes the implementation of an interface
        type: object
    cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor:
        properties:
            fullname:
                title: fullname is the protobuf queryable name of the interface implementer
                type: string
            type_url:
                title: |-
                    type_url defines the type URL used when marshalling the type as any
                    this is required so we can provide type safe google.protobuf.Any marshalling and
                    unmarshalling, making sure that we don't accept just 'any' type
                    in our interface fields
                type: string
        title: InterfaceImplementerDescriptor describes an interface implementer
        type: object
    cosmos.base.reflection.v2alpha1.MsgDescriptor:
        properties:
            msg_type_url:
                description: msg_type_url contains the TypeURL of a sdk.Msg.
                type: string
        title: MsgDescriptor describes a cosmos-sdk message that can be delivered with a transaction
        type: object
    cosmos.base.reflection.v2alpha1.QueryMethodDescriptor:
        properties:
            full_query_path:
                title: |-
                    full_query_path is the path that can be used to query
                    this method via tendermint abci.Query
                type: string
            name:
                title: name is the protobuf name (not fullname) of the method
                type: string
        title: |-
            QueryMethodDescriptor describes a queryable method of a query service
            no other info is provided beside method name and tendermint queryable path
            because it would be redundant with the grpc reflection service
        type: object
    cosmos.base.reflection.v2alpha1.QueryServiceDescriptor:
        properties:
            fullname:
                title: fullname is the protobuf fullname of the service descriptor
                type: string
            is_module:
                title: is_module describes if this service is actually exposed by an application's module
                type: boolean
            methods:
                items:
                    $ref: '#/definitions/cosmos.base.reflection.v2alpha1.QueryMethodDescriptor'
                    type: object
                title: methods provides a list of query service methods
                type: array
        title: QueryServiceDescriptor describes a cosmos-sdk queryable service
        type: object
    cosmos.base.reflection.v2alpha1.QueryServicesDescriptor:
        properties:
            query_services:
                items:
                    $ref: '#/definitions/cosmos.base.reflection.v2alpha1.QueryServiceDescriptor'
                    type: object
                title: query_services is a list of cosmos-sdk QueryServiceDescriptor
                type: array
        title: QueryServicesDescriptor contains the list of cosmos-sdk queriable services
        type: object
    cosmos.base.reflection.v2alpha1.SigningModeDescriptor:
        properties:
            authn_info_provider_method_fullname:
                title: |-
                    authn_info_provider_method_fullname defines the fullname of the method to call to get
                    the metadata required to authenticate using the provided sign_modes
                type: string
            name:
                title: name defines the unique name of the signing mode
                type: string
            number:
                format: int32
                title: number is the unique int32 identifier for the sign_mode enum
                type: integer
        title: |-
            SigningModeDescriptor provides information on a signing flow of the application
            NOTE(fdymylja): here we could go as far as providing an entire flow on how
            to sign a message given a SigningModeDescriptor, but it's better to think about
            this another time
        type: object
    cosmos.base.reflection.v2alpha1.TxDescriptor:
        properties:
            fullname:
                description: |-
                    fullname is the protobuf fullname of the raw transaction type (for instance the tx.Tx type)
                    it is not meant to support polymorphism of transaction types, it is supposed to be used by
                    reflection clients to understand if they can handle a specific transaction type in an application.
                type: string
            msgs:
                items:
                    $ref: '#/definitions/cosmos.base.reflection.v2alpha1.MsgDescriptor'
                    type: object
                title: msgs lists the accepted application messages (sdk.Msg)
                type: array
        title: TxDescriptor describes the accepted transaction type
        type: object
    cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
        description: |-
            ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

            Note: This type is a duplicate of the ResponseQuery proto type defined in
            Tendermint.
        properties:
            code:
                format: int64
                type: integer
            codespace:
                type: string
            height:
                format: int64
                type: string
            index:
                format: int64
                type: string
            info:
                title: nondeterministic
                type: string
            key:
                format: byte
                type: string
            log:
                title: nondeterministic
                type: string
            proof_ops:
                $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ProofOps'
            value:
                format: byte
                type: string
        type: object
    cosmos.base.tendermint.v1beta1.Block:
        description: |-
            Block is tendermint type Block, with the Header proposer address
            field converted to bech32 string.
        properties:
            data:
                $ref: '#/definitions/tendermint.types.Data'
            evidence:
                $ref: '#/definitions/tendermint.types.EvidenceList'
            header:
                $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Header'
            last_commit:
                $ref: '#/definitions/tendermint.types.Commit'
        type: object
    cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
        description: GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method.
        properties:
            block:
                $ref: '#/definitions/tendermint.types.Block'
                title: 'Deprecated: please use `sdk_block` instead'
            block_id:
                $ref: '#/definitions/tendermint.types.BlockID'
            sdk_block:
                $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Block'
                title: 'Since: cosmos-sdk 0.47'
        type: object
    cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
        description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method.
        properties:
            block:
                $ref: '#/definitions/tendermint.types.Block'
                title: 'Deprecated: please use `sdk_block` instead'
            block_id:
                $ref: '#/definitions/tendermint.types.BlockID'
            sdk_block:
                $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Block'
                title: 'Since: cosmos-sdk 0.47'
        type: object
    cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
        description: GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
        properties:
            block_height:
                format: int64
                type: string
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines an pagination for the response.
            validators:
                items:
                    $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Validator'
                    type: object
                type: array
        type: object
    cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
        description: GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC method.
        properties:
            application_version:
                $ref: '#/definitions/cosmos.base.tendermint.v1beta1.VersionInfo'
            default_node_info:
                $ref: '#/definitions/tendermint.p2p.DefaultNodeInfo'
        type: object
    cosmos.base.tendermint.v1beta1.GetSyncingResponse:
        description: GetSyncingResponse is the response type for the Query/GetSyncing RPC method.
        properties:
            syncing:
                type: boolean
        type: object
    cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
        description: GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
        properties:
            block_height:
                format: int64
                type: string
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines an pagination for the response.
            validators:
                items:
                    $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Validator'
                    type: object
                type: array
        type: object
    cosmos.base.tendermint.v1beta1.Header:
        description: Header defines the structure of a Tendermint block header.
        properties:
            app_hash:
                format: byte
                title: state after txs from the previous block
                type: string
            chain_id:
                type: string
            consensus_hash:
                format: byte
                title: consensus params for current block
                type: string
            data_hash:
                format: byte
                title: transactions
                type: string
            evidence_hash:
                description: evidence included in the block
                format: byte
                title: consensus info
                type: string
            height:
                format: int64
                type: string
            last_block_id:
                $ref: '#/definitions/tendermint.types.BlockID'
                title: prev block info
            last_commit_hash:
                description: commit from validators from the last block
                format: byte
                title: hashes of block data
                type: string
            last_results_hash:
                format: byte
                title: root hash of all results from the txs from the previous block
                type: string
            next_validators_hash:
                format: byte
                title: validators for the next block
                type: string
            proposer_address:
                description: |-
                    proposer_address is the original block proposer address, formatted as a Bech32 string.
                    In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                    for better UX.

                    original proposer of the block
                type: string
            time:
                format: date-time
                type: string
            validators_hash:
                description: validators for the current block
                format: byte
                title: hashes from the app output from the prev block
                type: string
            version:
                $ref: '#/definitions/tendermint.version.Consensus'
                title: basic block info
        type: object
    cosmos.base.tendermint.v1beta1.Module:
        properties:
            path:
                title: module path
                type: string
            sum:
                title: checksum
                type: string
            version:
                title: module version
                type: string
        title: Module is the type for VersionInfo
        type: object
    cosmos.base.tendermint.v1beta1.ProofOp:
        description: |-
            ProofOp defines an operation used for calculating Merkle root. The data could
            be arbitrary format, providing necessary data for example neighbouring node
            hash.

            Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
        properties:
            data:
                format: byte
                type: string
            key:
                format: byte
                type: string
            type:
                type: string
        type: object
    cosmos.base.tendermint.v1beta1.ProofOps:
        description: |-
            ProofOps is Merkle proof defined by the list of ProofOps.

            Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
        properties:
            ops:
                items:
                    $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ProofOp'
                    type: object
                type: array
        type: object
    cosmos.base.tendermint.v1beta1.Validator:
        description: Validator is the type for the validator-set.
        properties:
            address:
                type: string
            proposer_priority:
                format: int64
                type: string
            pub_key:
                $ref: '#/definitions/google.protobuf.Any'
            voting_power:
                format: int64
                type: string
        type: object
    cosmos.base.tendermint.v1beta1.VersionInfo:
        description: VersionInfo is the type for the GetNodeInfoResponse message.
        properties:
            app_name:
                type: string
            build_deps:
                items:
                    $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Module'
                    type: object
                type: array
            build_tags:
                type: string
            cosmos_sdk_version:
                title: 'Since: cosmos-sdk 0.43'
                type: string
            git_commit:
                type: string
            go_version:
                type: string
            name:
                type: string
            version:
                type: string
        type: object
    cosmos.base.v1beta1.Coin:
        description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        properties:
            amount:
                type: string
            denom:
                type: string
        type: object
    cosmos.base.v1beta1.DecCoin:
        description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        properties:
            amount:
                type: string
            denom:
                type: string
        type: object
    cosmos.circuit.v1.AccountResponse:
        description: AccountResponse is the response type for the Query/Account RPC method.
        properties:
            permission:
                $ref: '#/definitions/cosmos.circuit.v1.Permissions'
        type: object
    cosmos.circuit.v1.AccountsResponse:
        description: AccountsResponse is the response type for the Query/Accounts RPC method.
        properties:
            accounts:
                items:
                    $ref: '#/definitions/cosmos.circuit.v1.GenesisAccountPermissions'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.circuit.v1.DisabledListResponse:
        description: DisabledListResponse is the response type for the Query/DisabledList RPC method.
        properties:
            disabled_list:
                items:
                    type: string
                type: array
        type: object
    cosmos.circuit.v1.GenesisAccountPermissions:
        properties:
            address:
                type: string
            permissions:
                $ref: '#/definitions/cosmos.circuit.v1.Permissions'
        title: GenesisAccountPermissions is the account permissions for the circuit breaker in genesis
        type: object
    cosmos.circuit.v1.MsgAuthorizeCircuitBreaker:
        description: MsgAuthorizeCircuitBreaker defines the Msg/AuthorizeCircuitBreaker request type.
        properties:
            grantee:
                description: grantee is the account authorized with the provided permissions.
                type: string
            granter:
                description: |-
                    granter is the granter of the circuit breaker permissions and must have
                    LEVEL_SUPER_ADMIN.
                type: string
            permissions:
                $ref: '#/definitions/cosmos.circuit.v1.Permissions'
                description: |-
                    permissions are the circuit breaker permissions that the grantee receives.
                    These will overwrite any existing permissions. LEVEL_NONE_UNSPECIFIED can
                    be specified to revoke all permissions.
        type: object
    cosmos.circuit.v1.MsgAuthorizeCircuitBreakerResponse:
        description: MsgAuthorizeCircuitBreakerResponse defines the Msg/AuthorizeCircuitBreaker response type.
        properties:
            success:
                type: boolean
        type: object
    cosmos.circuit.v1.MsgResetCircuitBreaker:
        description: MsgResetCircuitBreaker defines the Msg/ResetCircuitBreaker request type.
        properties:
            authority:
                description: authority is the account authorized to trip or reset the circuit breaker.
                type: string
            msg_type_urls:
                description: |-
                    msg_type_urls specifies a list of Msg type URLs to resume processing. If
                    it is left empty all Msg processing for type URLs that the account is
                    authorized to trip will resume.
                items:
                    type: string
                type: array
        type: object
    cosmos.circuit.v1.MsgResetCircuitBreakerResponse:
        description: MsgResetCircuitBreakerResponse defines the Msg/ResetCircuitBreaker response type.
        properties:
            success:
                type: boolean
        type: object
    cosmos.circuit.v1.MsgTripCircuitBreaker:
        description: MsgTripCircuitBreaker defines the Msg/TripCircuitBreaker request type.
        properties:
            authority:
                description: authority is the account authorized to trip the circuit breaker.
                type: string
            msg_type_urls:
                description: |-
                    msg_type_urls specifies a list of type URLs to immediately stop processing.
                    IF IT IS LEFT EMPTY, ALL MSG PROCESSING WILL STOP IMMEDIATELY.
                    This value is validated against the authority's permissions and if the
                    authority does not have permissions to trip the specified msg type URLs
                    (or all URLs), the operation will fail.
                items:
                    type: string
                type: array
        type: object
    cosmos.circuit.v1.MsgTripCircuitBreakerResponse:
        description: MsgTripCircuitBreakerResponse defines the Msg/TripCircuitBreaker response type.
        properties:
            success:
                type: boolean
        type: object
    cosmos.circuit.v1.Permissions:
        description: |-
            Permissions are the permissions that an account has to trip
            or reset the circuit breaker.
        properties:
            level:
                $ref: '#/definitions/cosmos.circuit.v1.Permissions.Level'
                description: level is the level of permissions granted to this account.
            limit_type_urls:
                description: |-
                    limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
                    URLs that the account can trip. It is an error to use limit_type_urls with
                    a level other than LEVEL_SOME_MSGS.
                items:
                    type: string
                type: array
        type: object
    cosmos.circuit.v1.Permissions.Level:
        default: LEVEL_NONE_UNSPECIFIED
        description: |-
            Level is the permission level.

             - LEVEL_NONE_UNSPECIFIED: LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit
            breaker permissions.
             - LEVEL_SOME_MSGS: LEVEL_SOME_MSGS indicates that the account will have permission to
            trip or reset the circuit breaker for some Msg type URLs. If this level
            is chosen, a non-empty list of Msg type URLs must be provided in
            limit_type_urls.
             - LEVEL_ALL_MSGS: LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit
            breaker for Msg's of all type URLs.
             - LEVEL_SUPER_ADMIN: LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker
            actions and can grant permissions to other accounts.
        enum:
            - LEVEL_NONE_UNSPECIFIED
            - LEVEL_SOME_MSGS
            - LEVEL_ALL_MSGS
            - LEVEL_SUPER_ADMIN
        type: string
    cosmos.consensus.v1.MsgUpdateParams:
        description: MsgUpdateParams is the Msg/UpdateParams request type.
        properties:
            abci:
                $ref: '#/definitions/tendermint.types.ABCIParams'
                title: 'Since: cosmos-sdk 0.50'
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            block:
                $ref: '#/definitions/tendermint.types.BlockParams'
                description: |-
                    params defines the x/consensus parameters to update.
                    VersionsParams is not included in this Msg because it is tracked
                    separarately in x/upgrade.

                    NOTE: All parameters must be supplied.
            evidence:
                $ref: '#/definitions/tendermint.types.EvidenceParams'
            validator:
                $ref: '#/definitions/tendermint.types.ValidatorParams'
        type: object
    cosmos.consensus.v1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.
        type: object
    cosmos.consensus.v1.QueryParamsResponse:
        description: QueryParamsResponse defines the response type for querying x/consensus parameters.
        properties:
            params:
                $ref: '#/definitions/tendermint.types.ConsensusParams'
                description: |-
                    params are the tendermint consensus params stored in the consensus module.
                    Please note that `params.version` is not populated in this response, it is
                    tracked separately in the x/upgrade module.
        type: object
    cosmos.crisis.v1beta1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the Msg/UpdateParams request type.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            constant_fee:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                description: constant_fee defines the x/crisis parameter.
        type: object
    cosmos.crisis.v1beta1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.crisis.v1beta1.MsgVerifyInvariant:
        description: MsgVerifyInvariant represents a message to verify a particular invariance.
        properties:
            invariant_module_name:
                description: name of the invariant module.
                type: string
            invariant_route:
                description: invariant_route is the msg's invariant route.
                type: string
            sender:
                description: sender is the account address of private key to send coins to fee collector account.
                type: string
        type: object
    cosmos.crisis.v1beta1.MsgVerifyInvariantResponse:
        description: MsgVerifyInvariantResponse defines the Msg/VerifyInvariant response type.
        type: object
    cosmos.crypto.multisig.v1beta1.CompactBitArray:
        description: |-
            CompactBitArray is an implementation of a space efficient bit array.
            This is used to ensure that the encoded data takes up a minimal amount of
            space after proto encoding.
            This is not thread safe, and is not intended for concurrent usage.
        properties:
            elems:
                format: byte
                type: string
            extra_bits_stored:
                format: int64
                type: integer
        type: object
    cosmos.distribution.v1beta1.DelegationDelegatorReward:
        description: |-
            DelegationDelegatorReward represents the properties
            of a delegator's delegation reward.
        properties:
            reward:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
                    type: object
                type: array
            validator_address:
                type: string
        type: object
    cosmos.distribution.v1beta1.MsgCommunityPoolSpend:
        description: |-
            MsgCommunityPoolSpend defines a message for sending tokens from the community
            pool to another account. This message is typically executed via a governance
            proposal with the governance module being the executing authority.

            Since: cosmos-sdk 0.47
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            recipient:
                type: string
        type: object
    cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse:
        description: |-
            MsgCommunityPoolSpendResponse defines the response to executing a
            MsgCommunityPoolSpend message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool:
        description: |-
            DepositValidatorRewardsPool defines the request structure to provide
            additional rewards to delegators from a specific validator.

            Since: cosmos-sdk 0.50
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            depositor:
                type: string
            validator_address:
                type: string
        type: object
    cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse:
        description: |-
            MsgDepositValidatorRewardsPoolResponse defines the response to executing a
            MsgDepositValidatorRewardsPool message.

            Since: cosmos-sdk 0.50
        type: object
    cosmos.distribution.v1beta1.MsgFundCommunityPool:
        description: |-
            MsgFundCommunityPool allows an account to directly
            fund the community pool.
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            depositor:
                type: string
        type: object
    cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse:
        description: MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response type.
        type: object
    cosmos.distribution.v1beta1.MsgSetWithdrawAddress:
        description: |-
            MsgSetWithdrawAddress sets the withdraw address for
            a delegator (or validator self-delegation).
        properties:
            delegator_address:
                type: string
            withdraw_address:
                type: string
        type: object
    cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse:
        description: |-
            MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response
            type.
        type: object
    cosmos.distribution.v1beta1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the Msg/UpdateParams request type.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/cosmos.distribution.v1beta1.Params'
                description: |-
                    params defines the x/distribution parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    cosmos.distribution.v1beta1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward:
        description: |-
            MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
            from a single validator.
        properties:
            delegator_address:
                type: string
            validator_address:
                type: string
        type: object
    cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse:
        description: |-
            MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward
            response type.
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: 'Since: cosmos-sdk 0.46'
                type: array
        type: object
    cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission:
        description: |-
            MsgWithdrawValidatorCommission withdraws the full commission to the validator
            address.
        properties:
            validator_address:
                type: string
        type: object
    cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse:
        description: |-
            MsgWithdrawValidatorCommissionResponse defines the
            Msg/WithdrawValidatorCommission response type.
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: 'Since: cosmos-sdk 0.46'
                type: array
        type: object
    cosmos.distribution.v1beta1.Params:
        description: Params defines the set of params for the distribution module.
        properties:
            base_proposer_reward:
                description: |-
                    Deprecated: The base_proposer_reward field is deprecated and is no longer used
                    in the x/distribution module's reward mechanism.
                type: string
            bonus_proposer_reward:
                description: |-
                    Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
                    in the x/distribution module's reward mechanism.
                type: string
            community_tax:
                type: string
            withdraw_addr_enabled:
                type: boolean
        type: object
    cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
        description: |-
            QueryCommunityPoolResponse is the response type for the Query/CommunityPool
            RPC method.
        properties:
            pool:
                description: pool defines community pool's coins.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
                    type: object
                type: array
        type: object
    cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
        description: |-
            QueryDelegationRewardsResponse is the response type for the
            Query/DelegationRewards RPC method.
        properties:
            rewards:
                description: rewards defines the rewards accrued by a delegation.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
                    type: object
                type: array
        type: object
    cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
        description: |-
            QueryDelegationTotalRewardsResponse is the response type for the
            Query/DelegationTotalRewards RPC method.
        properties:
            rewards:
                description: rewards defines all the rewards accrued by a delegator.
                items:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.DelegationDelegatorReward'
                    type: object
                type: array
            total:
                description: total defines the sum of all the rewards.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
                    type: object
                type: array
        type: object
    cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
        description: |-
            QueryDelegatorValidatorsResponse is the response type for the
            Query/DelegatorValidators RPC method.
        properties:
            validators:
                description: validators defines the validators a delegator is delegating for.
                items:
                    type: string
                type: array
        type: object
    cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
        description: |-
            QueryDelegatorWithdrawAddressResponse is the response type for the
            Query/DelegatorWithdrawAddress RPC method.
        properties:
            withdraw_address:
                description: withdraw_address defines the delegator address to query for.
                type: string
        type: object
    cosmos.distribution.v1beta1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/cosmos.distribution.v1beta1.Params'
                description: params defines the parameters of the module.
        type: object
    cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
        properties:
            commission:
                $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission'
                description: commission defines the commission the validator received.
        title: |-
            QueryValidatorCommissionResponse is the response type for the
            Query/ValidatorCommission RPC method
        type: object
    cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse:
        description: QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method.
        properties:
            commission:
                description: commission defines the commission the validator received.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
                    type: object
                type: array
            operator_address:
                description: operator_address defines the validator operator address.
                type: string
            self_bond_rewards:
                description: self_bond_rewards defines the self delegations rewards.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
                    type: object
                type: array
        type: object
    cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
        description: |-
            QueryValidatorOutstandingRewardsResponse is the response type for the
            Query/ValidatorOutstandingRewards RPC method.
        properties:
            rewards:
                $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorOutstandingRewards'
        type: object
    cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
        description: |-
            QueryValidatorSlashesResponse is the response type for the
            Query/ValidatorSlashes RPC method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            slashes:
                description: slashes defines the slashes the validator received.
                items:
                    $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorSlashEvent'
                    type: object
                type: array
        type: object
    cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
        description: |-
            ValidatorAccumulatedCommission represents accumulated commission
            for a validator kept as a running counter, can be withdrawn at any time.
        properties:
            commission:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
                    type: object
                type: array
        type: object
    cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
        description: |-
            ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
            for a validator inexpensive to track, allows simple sanity checks.
        properties:
            rewards:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
                    type: object
                type: array
        type: object
    cosmos.distribution.v1beta1.ValidatorSlashEvent:
        description: |-
            ValidatorSlashEvent represents a validator slash event.
            Height is implicit within the store key.
            This is needed to calculate appropriate amount of staking tokens
            for delegations which are withdrawn after a slash has occurred.
        properties:
            fraction:
                type: string
            validator_period:
                format: uint64
                type: string
        type: object
    cosmos.evidence.v1beta1.MsgSubmitEvidence:
        description: |-
            MsgSubmitEvidence represents a message that supports submitting arbitrary
            Evidence of misbehavior such as equivocation or counterfactual signing.
        properties:
            evidence:
                $ref: '#/definitions/google.protobuf.Any'
                description: evidence defines the evidence of misbehavior.
            submitter:
                description: submitter is the signer account address of evidence.
                type: string
        type: object
    cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse:
        description: MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response type.
        properties:
            hash:
                description: hash defines the hash of the evidence.
                format: byte
                type: string
        type: object
    cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
        description: |-
            QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
            method.
        properties:
            evidence:
                description: evidence returns all evidences.
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.evidence.v1beta1.QueryEvidenceResponse:
        description: QueryEvidenceResponse is the response type for the Query/Evidence RPC method.
        properties:
            evidence:
                $ref: '#/definitions/google.protobuf.Any'
                description: evidence returns the requested evidence.
        type: object
    cosmos.feegrant.v1beta1.Grant:
        properties:
            allowance:
                $ref: '#/definitions/google.protobuf.Any'
                description: allowance can be any of basic, periodic, allowed fee allowance.
            grantee:
                description: grantee is the address of the user being granted an allowance of another user's funds.
                type: string
            granter:
                description: granter is the address of the user granting an allowance of their funds.
                type: string
        title: Grant is stored in the KVStore to record a grant with full context
        type: object
    cosmos.feegrant.v1beta1.MsgGrantAllowance:
        description: |-
            MsgGrantAllowance adds permission for Grantee to spend up to Allowance
            of fees from the account of Granter.
        properties:
            allowance:
                $ref: '#/definitions/google.protobuf.Any'
                description: allowance can be any of basic, periodic, allowed fee allowance.
            grantee:
                description: grantee is the address of the user being granted an allowance of another user's funds.
                type: string
            granter:
                description: granter is the address of the user granting an allowance of their funds.
                type: string
        type: object
    cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse:
        description: MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse response type.
        type: object
    cosmos.feegrant.v1beta1.MsgPruneAllowances:
        description: |-
            MsgPruneAllowances prunes expired fee allowances.

            Since cosmos-sdk 0.50
        properties:
            pruner:
                description: pruner is the address of the user pruning expired allowances.
                type: string
        type: object
    cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse:
        description: |-
            MsgPruneAllowancesResponse defines the Msg/PruneAllowancesResponse response type.

            Since cosmos-sdk 0.50
        type: object
    cosmos.feegrant.v1beta1.MsgRevokeAllowance:
        description: MsgRevokeAllowance removes any existing Allowance from Granter to Grantee.
        properties:
            grantee:
                description: grantee is the address of the user being granted an allowance of another user's funds.
                type: string
            granter:
                description: granter is the address of the user granting an allowance of their funds.
                type: string
        type: object
    cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse:
        description: MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse response type.
        type: object
    cosmos.feegrant.v1beta1.QueryAllowanceResponse:
        description: QueryAllowanceResponse is the response type for the Query/Allowance RPC method.
        properties:
            allowance:
                $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
                description: allowance is a allowance granted for grantee by granter.
        type: object
    cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
        description: |-
            QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.

            Since: cosmos-sdk 0.46
        properties:
            allowances:
                description: allowances that have been issued by the granter.
                items:
                    $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines an pagination for the response.
        type: object
    cosmos.feegrant.v1beta1.QueryAllowancesResponse:
        description: QueryAllowancesResponse is the response type for the Query/Allowances RPC method.
        properties:
            allowances:
                description: allowances are allowance's granted for grantee by granter.
                items:
                    $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines an pagination for the response.
        type: object
    cosmos.gov.v1beta1.Deposit:
        description: |-
            Deposit defines an amount deposited by an account address to an active
            proposal.
        properties:
            amount:
                description: amount to be deposited by depositor.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            depositor:
                description: depositor defines the deposit addresses from the proposals.
                type: string
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.gov.v1beta1.DepositParams:
        description: DepositParams defines the params for deposits on governance proposals.
        properties:
            max_deposit_period:
                description: |-
                    Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                    months.
                type: string
            min_deposit:
                description: Minimum deposit for a proposal to enter voting period.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
        type: object
    cosmos.gov.v1beta1.MsgDeposit:
        description: MsgDeposit defines a message to submit a deposit to an existing proposal.
        properties:
            amount:
                description: amount to be deposited by depositor.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            depositor:
                description: depositor defines the deposit addresses from the proposals.
                type: string
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.gov.v1beta1.MsgDepositResponse:
        description: MsgDepositResponse defines the Msg/Deposit response type.
        type: object
    cosmos.gov.v1beta1.MsgSubmitProposal:
        description: |-
            MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
            proposal Content.
        properties:
            content:
                $ref: '#/definitions/google.protobuf.Any'
                description: content is the proposal's content.
            initial_deposit:
                description: initial_deposit is the deposit value that must be paid at proposal submission.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            proposer:
                description: proposer is the account address of the proposer.
                type: string
        type: object
    cosmos.gov.v1beta1.MsgSubmitProposalResponse:
        description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
        properties:
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.gov.v1beta1.MsgVote:
        description: MsgVote defines a message to cast a vote.
        properties:
            option:
                $ref: '#/definitions/cosmos.gov.v1beta1.VoteOption'
                description: option defines the vote option.
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            voter:
                description: voter is the voter address for the proposal.
                type: string
        type: object
    cosmos.gov.v1beta1.MsgVoteResponse:
        description: MsgVoteResponse defines the Msg/Vote response type.
        type: object
    cosmos.gov.v1beta1.MsgVoteWeighted:
        description: |-
            MsgVoteWeighted defines a message to cast a vote.

            Since: cosmos-sdk 0.43
        properties:
            options:
                description: options defines the weighted vote options.
                items:
                    $ref: '#/definitions/cosmos.gov.v1beta1.WeightedVoteOption'
                    type: object
                type: array
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            voter:
                description: voter is the voter address for the proposal.
                type: string
        type: object
    cosmos.gov.v1beta1.MsgVoteWeightedResponse:
        description: |-
            MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.

            Since: cosmos-sdk 0.43
        type: object
    cosmos.gov.v1beta1.Proposal:
        description: Proposal defines the core field members of a governance proposal.
        properties:
            content:
                $ref: '#/definitions/google.protobuf.Any'
                description: content is the proposal's content.
            deposit_end_time:
                description: deposit_end_time is the end time for deposition.
                format: date-time
                type: string
            final_tally_result:
                $ref: '#/definitions/cosmos.gov.v1beta1.TallyResult'
                description: |-
                    final_tally_result is the final tally result of the proposal. When
                    querying a proposal via gRPC, this field is not populated until the
                    proposal's voting period has ended.
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            status:
                $ref: '#/definitions/cosmos.gov.v1beta1.ProposalStatus'
                description: status defines the proposal status.
            submit_time:
                description: submit_time is the time of proposal submission.
                format: date-time
                type: string
            total_deposit:
                description: total_deposit is the total deposit on the proposal.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            voting_end_time:
                description: voting_end_time is the end time of voting on a proposal.
                format: date-time
                type: string
            voting_start_time:
                description: voting_start_time is the starting time to vote on a proposal.
                format: date-time
                type: string
        type: object
    cosmos.gov.v1beta1.ProposalStatus:
        default: PROPOSAL_STATUS_UNSPECIFIED
        description: |-
            ProposalStatus enumerates the valid statuses of a proposal.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
        enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
        type: string
    cosmos.gov.v1beta1.QueryDepositResponse:
        description: QueryDepositResponse is the response type for the Query/Deposit RPC method.
        properties:
            deposit:
                $ref: '#/definitions/cosmos.gov.v1beta1.Deposit'
                description: deposit defines the requested deposit.
        type: object
    cosmos.gov.v1beta1.QueryDepositsResponse:
        description: QueryDepositsResponse is the response type for the Query/Deposits RPC method.
        properties:
            deposits:
                description: deposits defines the requested deposits.
                items:
                    $ref: '#/definitions/cosmos.gov.v1beta1.Deposit'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.gov.v1beta1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            deposit_params:
                $ref: '#/definitions/cosmos.gov.v1beta1.DepositParams'
                description: deposit_params defines the parameters related to deposit.
            tally_params:
                $ref: '#/definitions/cosmos.gov.v1beta1.TallyParams'
                description: tally_params defines the parameters related to tally.
            voting_params:
                $ref: '#/definitions/cosmos.gov.v1beta1.VotingParams'
                description: voting_params defines the parameters related to voting.
        type: object
    cosmos.gov.v1beta1.QueryProposalResponse:
        description: QueryProposalResponse is the response type for the Query/Proposal RPC method.
        properties:
            proposal:
                $ref: '#/definitions/cosmos.gov.v1beta1.Proposal'
        type: object
    cosmos.gov.v1beta1.QueryProposalsResponse:
        description: |-
            QueryProposalsResponse is the response type for the Query/Proposals RPC
            method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            proposals:
                description: proposals defines all the requested governance proposals.
                items:
                    $ref: '#/definitions/cosmos.gov.v1beta1.Proposal'
                    type: object
                type: array
        type: object
    cosmos.gov.v1beta1.QueryTallyResultResponse:
        description: QueryTallyResultResponse is the response type for the Query/Tally RPC method.
        properties:
            tally:
                $ref: '#/definitions/cosmos.gov.v1beta1.TallyResult'
                description: tally defines the requested tally.
        type: object
    cosmos.gov.v1beta1.QueryVoteResponse:
        description: QueryVoteResponse is the response type for the Query/Vote RPC method.
        properties:
            vote:
                $ref: '#/definitions/cosmos.gov.v1beta1.Vote'
                description: vote defines the queried vote.
        type: object
    cosmos.gov.v1beta1.QueryVotesResponse:
        description: QueryVotesResponse is the response type for the Query/Votes RPC method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            votes:
                description: votes defines the queried votes.
                items:
                    $ref: '#/definitions/cosmos.gov.v1beta1.Vote'
                    type: object
                type: array
        type: object
    cosmos.gov.v1beta1.TallyParams:
        description: TallyParams defines the params for tallying votes on governance proposals.
        properties:
            quorum:
                description: |-
                    Minimum percentage of total stake needed to vote for a result to be
                    considered valid.
                format: byte
                type: string
            threshold:
                description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
                format: byte
                type: string
            veto_threshold:
                description: |-
                    Minimum value of Veto votes to Total votes ratio for proposal to be
                    vetoed. Default value: 1/3.
                format: byte
                type: string
        type: object
    cosmos.gov.v1beta1.TallyResult:
        description: TallyResult defines a standard tally for a governance proposal.
        properties:
            abstain:
                description: abstain is the number of abstain votes on a proposal.
                type: string
            "no":
                description: no is the number of no votes on a proposal.
                type: string
            no_with_veto:
                description: no_with_veto is the number of no with veto votes on a proposal.
                type: string
            "yes":
                description: yes is the number of yes votes on a proposal.
                type: string
        type: object
    cosmos.gov.v1beta1.Vote:
        description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
        properties:
            option:
                $ref: '#/definitions/cosmos.gov.v1beta1.VoteOption'
                description: |-
                    Deprecated: Prefer to use `options` instead. This field is set in queries
                    if and only if `len(options) == 1` and that option has weight 1. In all
                    other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
            options:
                description: |-
                    options is the weighted vote options.

                    Since: cosmos-sdk 0.43
                items:
                    $ref: '#/definitions/cosmos.gov.v1beta1.WeightedVoteOption'
                    type: object
                type: array
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            voter:
                description: voter is the voter address of the proposal.
                type: string
        type: object
    cosmos.gov.v1beta1.VoteOption:
        default: VOTE_OPTION_UNSPECIFIED
        description: |-
            VoteOption enumerates the valid vote options for a given governance proposal.

             - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
             - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
             - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
             - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
             - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
        enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
        type: string
    cosmos.gov.v1beta1.VotingParams:
        description: VotingParams defines the params for voting on governance proposals.
        properties:
            voting_period:
                description: Duration of the voting period.
                type: string
        type: object
    cosmos.gov.v1beta1.WeightedVoteOption:
        description: |-
            WeightedVoteOption defines a unit of vote for vote split.

            Since: cosmos-sdk 0.43
        properties:
            option:
                $ref: '#/definitions/cosmos.gov.v1beta1.VoteOption'
                description: option defines the valid vote options, it must not contain duplicate vote options.
            weight:
                description: weight is the vote weight associated with the vote option.
                type: string
        type: object
    cosmos.gov.v1.Deposit:
        description: |-
            Deposit defines an amount deposited by an account address to an active
            proposal.
        properties:
            amount:
                description: amount to be deposited by depositor.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            depositor:
                description: depositor defines the deposit addresses from the proposals.
                type: string
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.gov.v1.DepositParams:
        description: DepositParams defines the params for deposits on governance proposals.
        properties:
            max_deposit_period:
                description: |-
                    Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                    months.
                type: string
            min_deposit:
                description: Minimum deposit for a proposal to enter voting period.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
        type: object
    cosmos.gov.v1.MsgCancelProposal:
        description: |-
            MsgCancelProposal is the Msg/CancelProposal request type.

            Since: cosmos-sdk 0.50
        properties:
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            proposer:
                description: proposer is the account address of the proposer.
                type: string
        type: object
    cosmos.gov.v1.MsgCancelProposalResponse:
        description: |-
            MsgCancelProposalResponse defines the response structure for executing a
            MsgCancelProposal message.

            Since: cosmos-sdk 0.50
        properties:
            canceled_height:
                description: canceled_height defines the block height at which the proposal is canceled.
                format: uint64
                type: string
            canceled_time:
                description: canceled_time is the time when proposal is canceled.
                format: date-time
                type: string
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.gov.v1.MsgDeposit:
        description: MsgDeposit defines a message to submit a deposit to an existing proposal.
        properties:
            amount:
                description: amount to be deposited by depositor.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            depositor:
                description: depositor defines the deposit addresses from the proposals.
                type: string
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.gov.v1.MsgDepositResponse:
        description: MsgDepositResponse defines the Msg/Deposit response type.
        type: object
    cosmos.gov.v1.MsgExecLegacyContent:
        description: |-
            MsgExecLegacyContent is used to wrap the legacy content field into a message.
            This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
        properties:
            authority:
                description: authority must be the gov module address.
                type: string
            content:
                $ref: '#/definitions/google.protobuf.Any'
                description: content is the proposal's content.
        type: object
    cosmos.gov.v1.MsgExecLegacyContentResponse:
        description: MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent response type.
        type: object
    cosmos.gov.v1.MsgSubmitProposal:
        description: |-
            MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
            proposal Content.
        properties:
            expedited:
                description: 'Since: cosmos-sdk 0.50'
                title: expedited defines if the proposal is expedited or not
                type: boolean
            initial_deposit:
                description: initial_deposit is the deposit value that must be paid at proposal submission.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            messages:
                description: messages are the arbitrary messages to be executed if proposal passes.
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
            metadata:
                description: metadata is any arbitrary metadata attached to the proposal.
                type: string
            proposer:
                description: proposer is the account address of the proposer.
                type: string
            summary:
                description: 'Since: cosmos-sdk 0.47'
                title: summary is the summary of the proposal
                type: string
            title:
                description: |-
                    title is the title of the proposal.

                    Since: cosmos-sdk 0.47
                type: string
        type: object
    cosmos.gov.v1.MsgSubmitProposalResponse:
        description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
        properties:
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.gov.v1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the Msg/UpdateParams request type.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/cosmos.gov.v1.Params'
                description: |-
                    params defines the x/gov parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    cosmos.gov.v1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.gov.v1.MsgVote:
        description: MsgVote defines a message to cast a vote.
        properties:
            metadata:
                description: metadata is any arbitrary metadata attached to the Vote.
                type: string
            option:
                $ref: '#/definitions/cosmos.gov.v1.VoteOption'
                description: option defines the vote option.
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            voter:
                description: voter is the voter address for the proposal.
                type: string
        type: object
    cosmos.gov.v1.MsgVoteResponse:
        description: MsgVoteResponse defines the Msg/Vote response type.
        type: object
    cosmos.gov.v1.MsgVoteWeighted:
        description: MsgVoteWeighted defines a message to cast a vote.
        properties:
            metadata:
                description: metadata is any arbitrary metadata attached to the VoteWeighted.
                type: string
            options:
                description: options defines the weighted vote options.
                items:
                    $ref: '#/definitions/cosmos.gov.v1.WeightedVoteOption'
                    type: object
                type: array
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            voter:
                description: voter is the voter address for the proposal.
                type: string
        type: object
    cosmos.gov.v1.MsgVoteWeightedResponse:
        description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
        type: object
    cosmos.gov.v1.Params:
        description: |-
            Params defines the parameters for the x/gov module.

            Since: cosmos-sdk 0.47
        properties:
            burn_proposal_deposit_prevote:
                title: burn deposits if the proposal does not enter voting period
                type: boolean
            burn_vote_quorum:
                title: burn deposits if a proposal does not meet quorum
                type: boolean
            burn_vote_veto:
                title: burn deposits if quorum with vote type no_veto is met
                type: boolean
            expedited_min_deposit:
                description: Minimum expedited deposit for a proposal to enter voting period.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            expedited_threshold:
                description: |-
                    Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.

                    Since: cosmos-sdk 0.50
                type: string
            expedited_voting_period:
                description: |-
                    Duration of the voting period of an expedited proposal.

                    Since: cosmos-sdk 0.50
                type: string
            max_deposit_period:
                description: |-
                    Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                    months.
                type: string
            min_deposit:
                description: Minimum deposit for a proposal to enter voting period.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            min_deposit_ratio:
                description: |-
                    The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
                    Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
                    required.

                    Since: cosmos-sdk 0.50
                type: string
            min_initial_deposit_ratio:
                description: The ratio representing the proportion of the deposit value that must be paid at proposal submission.
                type: string
            proposal_cancel_dest:
                description: |-
                    The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
                    If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.

                    Since: cosmos-sdk 0.50
                type: string
            proposal_cancel_ratio:
                description: |-
                    The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.

                    Since: cosmos-sdk 0.50
                type: string
            quorum:
                description: |-
                    Minimum percentage of total stake needed to vote for a result to be
                     considered valid.
                type: string
            threshold:
                description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
                type: string
            veto_threshold:
                description: |-
                    Minimum value of Veto votes to Total votes ratio for proposal to be
                     vetoed. Default value: 1/3.
                type: string
            voting_period:
                description: Duration of the voting period.
                type: string
        type: object
    cosmos.gov.v1.Proposal:
        description: Proposal defines the core field members of a governance proposal.
        properties:
            deposit_end_time:
                description: deposit_end_time is the end time for deposition.
                format: date-time
                type: string
            expedited:
                description: 'Since: cosmos-sdk 0.50'
                title: expedited defines if the proposal is expedited
                type: boolean
            failed_reason:
                description: 'Since: cosmos-sdk 0.50'
                title: failed_reason defines the reason why the proposal failed
                type: string
            final_tally_result:
                $ref: '#/definitions/cosmos.gov.v1.TallyResult'
                description: |-
                    final_tally_result is the final tally result of the proposal. When
                    querying a proposal via gRPC, this field is not populated until the
                    proposal's voting period has ended.
            id:
                description: id defines the unique id of the proposal.
                format: uint64
                type: string
            messages:
                description: messages are the arbitrary messages to be executed if the proposal passes.
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
            metadata:
                title: |-
                    metadata is any arbitrary metadata attached to the proposal.
                    the recommended format of the metadata is to be found here:
                    https://docs.cosmos.network/v0.47/modules/gov#proposal-3
                type: string
            proposer:
                description: 'Since: cosmos-sdk 0.47'
                title: proposer is the address of the proposal sumbitter
                type: string
            status:
                $ref: '#/definitions/cosmos.gov.v1.ProposalStatus'
                description: status defines the proposal status.
            submit_time:
                description: submit_time is the time of proposal submission.
                format: date-time
                type: string
            summary:
                description: 'Since: cosmos-sdk 0.47'
                title: summary is a short summary of the proposal
                type: string
            title:
                description: 'Since: cosmos-sdk 0.47'
                title: title is the title of the proposal
                type: string
            total_deposit:
                description: total_deposit is the total deposit on the proposal.
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            voting_end_time:
                description: voting_end_time is the end time of voting on a proposal.
                format: date-time
                type: string
            voting_start_time:
                description: voting_start_time is the starting time to vote on a proposal.
                format: date-time
                type: string
        type: object
    cosmos.gov.v1.ProposalStatus:
        default: PROPOSAL_STATUS_UNSPECIFIED
        description: |-
            ProposalStatus enumerates the valid statuses of a proposal.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
        enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
        type: string
    cosmos.gov.v1.QueryConstitutionResponse:
        properties:
            constitution:
                type: string
        title: QueryConstitutionResponse is the response type for the Query/Constitution RPC method
        type: object
    cosmos.gov.v1.QueryDepositResponse:
        description: QueryDepositResponse is the response type for the Query/Deposit RPC method.
        properties:
            deposit:
                $ref: '#/definitions/cosmos.gov.v1.Deposit'
                description: deposit defines the requested deposit.
        type: object
    cosmos.gov.v1.QueryDepositsResponse:
        description: QueryDepositsResponse is the response type for the Query/Deposits RPC method.
        properties:
            deposits:
                description: deposits defines the requested deposits.
                items:
                    $ref: '#/definitions/cosmos.gov.v1.Deposit'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.gov.v1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            deposit_params:
                $ref: '#/definitions/cosmos.gov.v1.DepositParams'
                description: |-
                    Deprecated: Prefer to use `params` instead.
                    deposit_params defines the parameters related to deposit.
            params:
                $ref: '#/definitions/cosmos.gov.v1.Params'
                description: |-
                    params defines all the paramaters of x/gov module.

                    Since: cosmos-sdk 0.47
            tally_params:
                $ref: '#/definitions/cosmos.gov.v1.TallyParams'
                description: |-
                    Deprecated: Prefer to use `params` instead.
                    tally_params defines the parameters related to tally.
            voting_params:
                $ref: '#/definitions/cosmos.gov.v1.VotingParams'
                description: |-
                    Deprecated: Prefer to use `params` instead.
                    voting_params defines the parameters related to voting.
        type: object
    cosmos.gov.v1.QueryProposalResponse:
        description: QueryProposalResponse is the response type for the Query/Proposal RPC method.
        properties:
            proposal:
                $ref: '#/definitions/cosmos.gov.v1.Proposal'
                description: proposal is the requested governance proposal.
        type: object
    cosmos.gov.v1.QueryProposalsResponse:
        description: |-
            QueryProposalsResponse is the response type for the Query/Proposals RPC
            method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            proposals:
                description: proposals defines all the requested governance proposals.
                items:
                    $ref: '#/definitions/cosmos.gov.v1.Proposal'
                    type: object
                type: array
        type: object
    cosmos.gov.v1.QueryTallyResultResponse:
        description: QueryTallyResultResponse is the response type for the Query/Tally RPC method.
        properties:
            tally:
                $ref: '#/definitions/cosmos.gov.v1.TallyResult'
                description: tally defines the requested tally.
        type: object
    cosmos.gov.v1.QueryVoteResponse:
        description: QueryVoteResponse is the response type for the Query/Vote RPC method.
        properties:
            vote:
                $ref: '#/definitions/cosmos.gov.v1.Vote'
                description: vote defines the queried vote.
        type: object
    cosmos.gov.v1.QueryVotesResponse:
        description: QueryVotesResponse is the response type for the Query/Votes RPC method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            votes:
                description: votes defines the queried votes.
                items:
                    $ref: '#/definitions/cosmos.gov.v1.Vote'
                    type: object
                type: array
        type: object
    cosmos.gov.v1.TallyParams:
        description: TallyParams defines the params for tallying votes on governance proposals.
        properties:
            quorum:
                description: |-
                    Minimum percentage of total stake needed to vote for a result to be
                    considered valid.
                type: string
            threshold:
                description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
                type: string
            veto_threshold:
                description: |-
                    Minimum value of Veto votes to Total votes ratio for proposal to be
                    vetoed. Default value: 1/3.
                type: string
        type: object
    cosmos.gov.v1.TallyResult:
        description: TallyResult defines a standard tally for a governance proposal.
        properties:
            abstain_count:
                description: abstain_count is the number of abstain votes on a proposal.
                type: string
            no_count:
                description: no_count is the number of no votes on a proposal.
                type: string
            no_with_veto_count:
                description: no_with_veto_count is the number of no with veto votes on a proposal.
                type: string
            yes_count:
                description: yes_count is the number of yes votes on a proposal.
                type: string
        type: object
    cosmos.gov.v1.Vote:
        description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
        properties:
            metadata:
                title: |-
                    metadata is any arbitrary metadata attached to the vote.
                    the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
                type: string
            options:
                description: options is the weighted vote options.
                items:
                    $ref: '#/definitions/cosmos.gov.v1.WeightedVoteOption'
                    type: object
                type: array
            proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            voter:
                description: voter is the voter address of the proposal.
                type: string
        type: object
    cosmos.gov.v1.VoteOption:
        default: VOTE_OPTION_UNSPECIFIED
        description: |-
            VoteOption enumerates the valid vote options for a given governance proposal.

             - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
             - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
             - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
             - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
             - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
        enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
        type: string
    cosmos.gov.v1.VotingParams:
        description: VotingParams defines the params for voting on governance proposals.
        properties:
            voting_period:
                description: Duration of the voting period.
                type: string
        type: object
    cosmos.gov.v1.WeightedVoteOption:
        description: WeightedVoteOption defines a unit of vote for vote split.
        properties:
            option:
                $ref: '#/definitions/cosmos.gov.v1.VoteOption'
                description: option defines the valid vote options, it must not contain duplicate vote options.
            weight:
                description: weight is the vote weight associated with the vote option.
                type: string
        type: object
    cosmos.group.v1.Exec:
        default: EXEC_UNSPECIFIED
        description: |-
            Exec defines modes of execution of a proposal on creation or on new vote.

             - EXEC_UNSPECIFIED: An empty value means that there should be a separate
            MsgExec request for the proposal to execute.
             - EXEC_TRY: Try to execute the proposal immediately.
            If the proposal is not allowed per the DecisionPolicy,
            the proposal will still be open and could
            be executed at a later point.
        enum:
            - EXEC_UNSPECIFIED
            - EXEC_TRY
        type: string
    cosmos.group.v1.GroupInfo:
        description: GroupInfo represents the high-level on-chain information for a group.
        properties:
            admin:
                description: admin is the account address of the group's admin.
                type: string
            created_at:
                description: created_at is a timestamp specifying when a group was created.
                format: date-time
                type: string
            id:
                description: id is the unique ID of the group.
                format: uint64
                type: string
            metadata:
                title: |-
                    metadata is any arbitrary metadata to attached to the group.
                    the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
                type: string
            total_weight:
                description: total_weight is the sum of the group members' weights.
                type: string
            version:
                format: uint64
                title: |-
                    version is used to track changes to a group's membership structure that
                    would break existing proposals. Whenever any members weight is changed,
                    or any member is added or removed this version is incremented and will
                    cause proposals based on older versions of this group to fail
                type: string
        type: object
    cosmos.group.v1.GroupMember:
        description: GroupMember represents the relationship between a group and a member.
        properties:
            group_id:
                description: group_id is the unique ID of the group.
                format: uint64
                type: string
            member:
                $ref: '#/definitions/cosmos.group.v1.Member'
                description: member is the member data.
        type: object
    cosmos.group.v1.GroupPolicyInfo:
        description: GroupPolicyInfo represents the high-level on-chain information for a group policy.
        properties:
            address:
                description: address is the account address of group policy.
                type: string
            admin:
                description: admin is the account address of the group admin.
                type: string
            created_at:
                description: created_at is a timestamp specifying when a group policy was created.
                format: date-time
                type: string
            decision_policy:
                $ref: '#/definitions/google.protobuf.Any'
                description: decision_policy specifies the group policy's decision policy.
            group_id:
                description: group_id is the unique ID of the group.
                format: uint64
                type: string
            metadata:
                title: |-
                    metadata is any arbitrary metadata attached to the group policy.
                    the recommended format of the metadata is to be found here:
                    https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
                type: string
            version:
                description: |-
                    version is used to track changes to a group's GroupPolicyInfo structure that
                    would create a different result on a running proposal.
                format: uint64
                type: string
        type: object
    cosmos.group.v1.Member:
        description: |-
            Member represents a group member with an account address,
            non-zero weight, metadata and added_at timestamp.
        properties:
            added_at:
                description: added_at is a timestamp specifying when a member was added.
                format: date-time
                type: string
            address:
                description: address is the member's account address.
                type: string
            metadata:
                description: metadata is any arbitrary metadata attached to the member.
                type: string
            weight:
                description: weight is the member's voting weight that should be greater than 0.
                type: string
        type: object
    cosmos.group.v1.MemberRequest:
        description: |-
            MemberRequest represents a group member to be used in Msg server requests.
            Contrary to `Member`, it doesn't have any `added_at` field
            since this field cannot be set as part of requests.
        properties:
            address:
                description: address is the member's account address.
                type: string
            metadata:
                description: metadata is any arbitrary metadata attached to the member.
                type: string
            weight:
                description: weight is the member's voting weight that should be greater than 0.
                type: string
        type: object
    cosmos.group.v1.MsgCreateGroup:
        description: MsgCreateGroup is the Msg/CreateGroup request type.
        properties:
            admin:
                description: admin is the account address of the group admin.
                type: string
            members:
                description: members defines the group members.
                items:
                    $ref: '#/definitions/cosmos.group.v1.MemberRequest'
                    type: object
                type: array
            metadata:
                description: metadata is any arbitrary metadata to attached to the group.
                type: string
        type: object
    cosmos.group.v1.MsgCreateGroupPolicy:
        description: MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type.
        properties:
            admin:
                description: admin is the account address of the group admin.
                type: string
            decision_policy:
                $ref: '#/definitions/google.protobuf.Any'
                description: decision_policy specifies the group policy's decision policy.
            group_id:
                description: group_id is the unique ID of the group.
                format: uint64
                type: string
            metadata:
                description: metadata is any arbitrary metadata attached to the group policy.
                type: string
        type: object
    cosmos.group.v1.MsgCreateGroupPolicyResponse:
        description: MsgCreateGroupPolicyResponse is the Msg/CreateGroupPolicy response type.
        properties:
            address:
                description: address is the account address of the newly created group policy.
                type: string
        type: object
    cosmos.group.v1.MsgCreateGroupResponse:
        description: MsgCreateGroupResponse is the Msg/CreateGroup response type.
        properties:
            group_id:
                description: group_id is the unique ID of the newly created group.
                format: uint64
                type: string
        type: object
    cosmos.group.v1.MsgCreateGroupWithPolicy:
        description: MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type.
        properties:
            admin:
                description: admin is the account address of the group and group policy admin.
                type: string
            decision_policy:
                $ref: '#/definitions/google.protobuf.Any'
                description: decision_policy specifies the group policy's decision policy.
            group_metadata:
                description: group_metadata is any arbitrary metadata attached to the group.
                type: string
            group_policy_as_admin:
                description: |-
                    group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group
                    and group policy admin.
                type: boolean
            group_policy_metadata:
                description: group_policy_metadata is any arbitrary metadata attached to the group policy.
                type: string
            members:
                description: members defines the group members.
                items:
                    $ref: '#/definitions/cosmos.group.v1.MemberRequest'
                    type: object
                type: array
        type: object
    cosmos.group.v1.MsgCreateGroupWithPolicyResponse:
        description: MsgCreateGroupWithPolicyResponse is the Msg/CreateGroupWithPolicy response type.
        properties:
            group_id:
                description: group_id is the unique ID of the newly created group with policy.
                format: uint64
                type: string
            group_policy_address:
                description: group_policy_address is the account address of the newly created group policy.
                type: string
        type: object
    cosmos.group.v1.MsgExec:
        description: MsgExec is the Msg/Exec request type.
        properties:
            executor:
                description: executor is the account address used to execute the proposal.
                type: string
            proposal_id:
                description: proposal is the unique ID of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.group.v1.MsgExecResponse:
        description: MsgExecResponse is the Msg/Exec request type.
        properties:
            result:
                $ref: '#/definitions/cosmos.group.v1.ProposalExecutorResult'
                description: result is the final result of the proposal execution.
        type: object
    cosmos.group.v1.MsgLeaveGroup:
        description: MsgLeaveGroup is the Msg/LeaveGroup request type.
        properties:
            address:
                description: address is the account address of the group member.
                type: string
            group_id:
                description: group_id is the unique ID of the group.
                format: uint64
                type: string
        type: object
    cosmos.group.v1.MsgLeaveGroupResponse:
        description: MsgLeaveGroupResponse is the Msg/LeaveGroup response type.
        type: object
    cosmos.group.v1.MsgSubmitProposal:
        description: MsgSubmitProposal is the Msg/SubmitProposal request type.
        properties:
            exec:
                $ref: '#/definitions/cosmos.group.v1.Exec'
                description: |-
                    exec defines the mode of execution of the proposal,
                    whether it should be executed immediately on creation or not.
                    If so, proposers signatures are considered as Yes votes.
            group_policy_address:
                description: group_policy_address is the account address of group policy.
                type: string
            messages:
                description: messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
            metadata:
                description: metadata is any arbitrary metadata attached to the proposal.
                type: string
            proposers:
                description: |-
                    proposers are the account addresses of the proposers.
                    Proposers signatures will be counted as yes votes.
                items:
                    type: string
                type: array
            summary:
                description: |-
                    summary is the summary of the proposal.

                    Since: cosmos-sdk 0.47
                type: string
            title:
                description: |-
                    title is the title of the proposal.

                    Since: cosmos-sdk 0.47
                type: string
        type: object
    cosmos.group.v1.MsgSubmitProposalResponse:
        description: MsgSubmitProposalResponse is the Msg/SubmitProposal response type.
        properties:
            proposal_id:
                description: proposal is the unique ID of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.group.v1.MsgUpdateGroupAdmin:
        description: MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type.
        properties:
            admin:
                description: admin is the current account address of the group admin.
                type: string
            group_id:
                description: group_id is the unique ID of the group.
                format: uint64
                type: string
            new_admin:
                description: new_admin is the group new admin account address.
                type: string
        type: object
    cosmos.group.v1.MsgUpdateGroupAdminResponse:
        description: MsgUpdateGroupAdminResponse is the Msg/UpdateGroupAdmin response type.
        type: object
    cosmos.group.v1.MsgUpdateGroupMembers:
        description: MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type.
        properties:
            admin:
                description: admin is the account address of the group admin.
                type: string
            group_id:
                description: group_id is the unique ID of the group.
                format: uint64
                type: string
            member_updates:
                description: |-
                    member_updates is the list of members to update,
                    set weight to 0 to remove a member.
                items:
                    $ref: '#/definitions/cosmos.group.v1.MemberRequest'
                    type: object
                type: array
        type: object
    cosmos.group.v1.MsgUpdateGroupMembersResponse:
        description: MsgUpdateGroupMembersResponse is the Msg/UpdateGroupMembers response type.
        type: object
    cosmos.group.v1.MsgUpdateGroupMetadata:
        description: MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type.
        properties:
            admin:
                description: admin is the account address of the group admin.
                type: string
            group_id:
                description: group_id is the unique ID of the group.
                format: uint64
                type: string
            metadata:
                description: metadata is the updated group's metadata.
                type: string
        type: object
    cosmos.group.v1.MsgUpdateGroupMetadataResponse:
        description: MsgUpdateGroupMetadataResponse is the Msg/UpdateGroupMetadata response type.
        type: object
    cosmos.group.v1.MsgUpdateGroupPolicyAdmin:
        description: MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type.
        properties:
            admin:
                description: admin is the account address of the group admin.
                type: string
            group_policy_address:
                description: group_policy_address is the account address of the group policy.
                type: string
            new_admin:
                description: new_admin is the new group policy admin.
                type: string
        type: object
    cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse:
        description: MsgUpdateGroupPolicyAdminResponse is the Msg/UpdateGroupPolicyAdmin response type.
        type: object
    cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy:
        description: MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type.
        properties:
            admin:
                description: admin is the account address of the group admin.
                type: string
            decision_policy:
                $ref: '#/definitions/google.protobuf.Any'
                description: decision_policy is the updated group policy's decision policy.
            group_policy_address:
                description: group_policy_address is the account address of group policy.
                type: string
        type: object
    cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse:
        description: MsgUpdateGroupPolicyDecisionPolicyResponse is the Msg/UpdateGroupPolicyDecisionPolicy response type.
        type: object
    cosmos.group.v1.MsgUpdateGroupPolicyMetadata:
        description: MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type.
        properties:
            admin:
                description: admin is the account address of the group admin.
                type: string
            group_policy_address:
                description: group_policy_address is the account address of group policy.
                type: string
            metadata:
                description: metadata is the group policy metadata to be updated.
                type: string
        type: object
    cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse:
        description: MsgUpdateGroupPolicyMetadataResponse is the Msg/UpdateGroupPolicyMetadata response type.
        type: object
    cosmos.group.v1.MsgVote:
        description: MsgVote is the Msg/Vote request type.
        properties:
            exec:
                $ref: '#/definitions/cosmos.group.v1.Exec'
                description: |-
                    exec defines whether the proposal should be executed
                    immediately after voting or not.
            metadata:
                description: metadata is any arbitrary metadata attached to the vote.
                type: string
            option:
                $ref: '#/definitions/cosmos.group.v1.VoteOption'
                description: option is the voter's choice on the proposal.
            proposal_id:
                description: proposal is the unique ID of the proposal.
                format: uint64
                type: string
            voter:
                description: voter is the voter account address.
                type: string
        type: object
    cosmos.group.v1.MsgVoteResponse:
        description: MsgVoteResponse is the Msg/Vote response type.
        type: object
    cosmos.group.v1.MsgWithdrawProposal:
        description: MsgWithdrawProposal is the Msg/WithdrawProposal request type.
        properties:
            address:
                description: address is the admin of the group policy or one of the proposer of the proposal.
                type: string
            proposal_id:
                description: proposal is the unique ID of the proposal.
                format: uint64
                type: string
        type: object
    cosmos.group.v1.MsgWithdrawProposalResponse:
        description: MsgWithdrawProposalResponse is the Msg/WithdrawProposal response type.
        type: object
    cosmos.group.v1.Proposal:
        description: |-
            Proposal defines a group proposal. Any member of a group can submit a proposal
            for a group policy to decide upon.
            A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal
            passes as well as some optional metadata associated with the proposal.
        properties:
            executor_result:
                $ref: '#/definitions/cosmos.group.v1.ProposalExecutorResult'
                description: executor_result is the final result of the proposal execution. Initial value is NotRun.
            final_tally_result:
                $ref: '#/definitions/cosmos.group.v1.TallyResult'
                description: |-
                    final_tally_result contains the sums of all weighted votes for this
                    proposal for each vote option. It is empty at submission, and only
                    populated after tallying, at voting period end or at proposal execution,
                    whichever happens first.
            group_policy_address:
                description: group_policy_address is the account address of group policy.
                type: string
            group_policy_version:
                description: |-
                    group_policy_version tracks the version of the group policy at proposal submission.
                    When a decision policy is changed, existing proposals from previous policy
                    versions will become invalid with the `ABORTED` status.
                    This field is here for informational purposes only.
                format: uint64
                type: string
            group_version:
                description: |-
                    group_version tracks the version of the group at proposal submission.
                    This field is here for informational purposes only.
                format: uint64
                type: string
            id:
                description: id is the unique id of the proposal.
                format: uint64
                type: string
            messages:
                description: messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
            metadata:
                title: |-
                    metadata is any arbitrary metadata attached to the proposal.
                    the recommended format of the metadata is to be found here:
                    https://docs.cosmos.network/v0.47/modules/group#proposal-4
                type: string
            proposers:
                description: proposers are the account addresses of the proposers.
                items:
                    type: string
                type: array
            status:
                $ref: '#/definitions/cosmos.group.v1.ProposalStatus'
                description: status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
            submit_time:
                description: submit_time is a timestamp specifying when a proposal was submitted.
                format: date-time
                type: string
            summary:
                description: 'Since: cosmos-sdk 0.47'
                title: summary is a short summary of the proposal
                type: string
            title:
                description: 'Since: cosmos-sdk 0.47'
                title: title is the title of the proposal
                type: string
            voting_period_end:
                description: |-
                    voting_period_end is the timestamp before which voting must be done.
                    Unless a successful MsgExec is called before (to execute a proposal whose
                    tally is successful before the voting period ends), tallying will be done
                    at this point, and the `final_tally_result`and `status` fields will be
                    accordingly updated.
                format: date-time
                type: string
        type: object
    cosmos.group.v1.ProposalExecutorResult:
        default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
        description: |-
            ProposalExecutorResult defines types of proposal executor results.

             - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.
             - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.
             - PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed action updated state.
             - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned an error and proposed action didn't update state.
        enum:
            - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
            - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
            - PROPOSAL_EXECUTOR_RESULT_SUCCESS
            - PROPOSAL_EXECUTOR_RESULT_FAILURE
        type: string
    cosmos.group.v1.ProposalStatus:
        default: PROPOSAL_STATUS_UNSPECIFIED
        description: |-
            ProposalStatus defines proposal statuses.

             - PROPOSAL_STATUS_UNSPECIFIED: An empty value is invalid and not allowed.
             - PROPOSAL_STATUS_SUBMITTED: Initial status of a proposal when submitted.
             - PROPOSAL_STATUS_ACCEPTED: Final status of a proposal when the final tally is done and the outcome
            passes the group policy's decision policy.
             - PROPOSAL_STATUS_REJECTED: Final status of a proposal when the final tally is done and the outcome
            is rejected by the group policy's decision policy.
             - PROPOSAL_STATUS_ABORTED: Final status of a proposal when the group policy is modified before the
            final tally.
             - PROPOSAL_STATUS_WITHDRAWN: A proposal can be withdrawn before the voting start time by the owner.
            When this happens the final status is Withdrawn.
        enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_SUBMITTED
            - PROPOSAL_STATUS_ACCEPTED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_ABORTED
            - PROPOSAL_STATUS_WITHDRAWN
        type: string
    cosmos.group.v1.QueryGroupInfoResponse:
        description: QueryGroupInfoResponse is the Query/GroupInfo response type.
        properties:
            info:
                $ref: '#/definitions/cosmos.group.v1.GroupInfo'
                description: info is the GroupInfo of the group.
        type: object
    cosmos.group.v1.QueryGroupMembersResponse:
        description: QueryGroupMembersResponse is the Query/GroupMembersResponse response type.
        properties:
            members:
                description: members are the members of the group with given group_id.
                items:
                    $ref: '#/definitions/cosmos.group.v1.GroupMember'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.group.v1.QueryGroupPoliciesByAdminResponse:
        description: QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin response type.
        properties:
            group_policies:
                description: group_policies are the group policies info with provided admin.
                items:
                    $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.group.v1.QueryGroupPoliciesByGroupResponse:
        description: QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup response type.
        properties:
            group_policies:
                description: group_policies are the group policies info associated with the provided group.
                items:
                    $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.group.v1.QueryGroupPolicyInfoResponse:
        description: QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response type.
        properties:
            info:
                $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
                description: info is the GroupPolicyInfo of the group policy.
        type: object
    cosmos.group.v1.QueryGroupsByAdminResponse:
        description: QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response type.
        properties:
            groups:
                description: groups are the groups info with the provided admin.
                items:
                    $ref: '#/definitions/cosmos.group.v1.GroupInfo'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.group.v1.QueryGroupsByMemberResponse:
        description: QueryGroupsByMemberResponse is the Query/GroupsByMember response type.
        properties:
            groups:
                description: groups are the groups info with the provided group member.
                items:
                    $ref: '#/definitions/cosmos.group.v1.GroupInfo'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.group.v1.QueryGroupsResponse:
        description: |-
            QueryGroupsResponse is the Query/Groups response type.

            Since: cosmos-sdk 0.47.1
        properties:
            groups:
                description: '`groups` is all the groups present in state.'
                items:
                    $ref: '#/definitions/cosmos.group.v1.GroupInfo'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.group.v1.QueryProposalResponse:
        description: QueryProposalResponse is the Query/Proposal response type.
        properties:
            proposal:
                $ref: '#/definitions/cosmos.group.v1.Proposal'
                description: proposal is the proposal info.
        type: object
    cosmos.group.v1.QueryProposalsByGroupPolicyResponse:
        description: QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy response type.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            proposals:
                description: proposals are the proposals with given group policy.
                items:
                    $ref: '#/definitions/cosmos.group.v1.Proposal'
                    type: object
                type: array
        type: object
    cosmos.group.v1.QueryTallyResultResponse:
        description: QueryTallyResultResponse is the Query/TallyResult response type.
        properties:
            tally:
                $ref: '#/definitions/cosmos.group.v1.TallyResult'
                description: tally defines the requested tally.
        type: object
    cosmos.group.v1.QueryVoteByProposalVoterResponse:
        description: QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter response type.
        properties:
            vote:
                $ref: '#/definitions/cosmos.group.v1.Vote'
                description: vote is the vote with given proposal_id and voter.
        type: object
    cosmos.group.v1.QueryVotesByProposalResponse:
        description: QueryVotesByProposalResponse is the Query/VotesByProposal response type.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            votes:
                description: votes are the list of votes for given proposal_id.
                items:
                    $ref: '#/definitions/cosmos.group.v1.Vote'
                    type: object
                type: array
        type: object
    cosmos.group.v1.QueryVotesByVoterResponse:
        description: QueryVotesByVoterResponse is the Query/VotesByVoter response type.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            votes:
                description: votes are the list of votes by given voter.
                items:
                    $ref: '#/definitions/cosmos.group.v1.Vote'
                    type: object
                type: array
        type: object
    cosmos.group.v1.TallyResult:
        description: TallyResult represents the sum of weighted votes for each vote option.
        properties:
            abstain_count:
                description: abstain_count is the weighted sum of abstainers.
                type: string
            no_count:
                description: no_count is the weighted sum of no votes.
                type: string
            no_with_veto_count:
                description: no_with_veto_count is the weighted sum of veto.
                type: string
            yes_count:
                description: yes_count is the weighted sum of yes votes.
                type: string
        type: object
    cosmos.group.v1.Vote:
        properties:
            metadata:
                title: |-
                    metadata is any arbitrary metadata attached to the vote.
                    the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
                type: string
            option:
                $ref: '#/definitions/cosmos.group.v1.VoteOption'
                description: option is the voter's choice on the proposal.
            proposal_id:
                description: proposal is the unique ID of the proposal.
                format: uint64
                type: string
            submit_time:
                description: submit_time is the timestamp when the vote was submitted.
                format: date-time
                type: string
            voter:
                description: voter is the account address of the voter.
                type: string
        title: Vote represents a vote for a proposal.string metadata
        type: object
    cosmos.group.v1.VoteOption:
        default: VOTE_OPTION_UNSPECIFIED
        description: |-
            VoteOption enumerates the valid vote options for a given proposal.

             - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will
            return an error.
             - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
             - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
             - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
             - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
        enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
        type: string
    cosmos.mint.v1beta1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the Msg/UpdateParams request type.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/cosmos.mint.v1beta1.Params'
                description: |-
                    params defines the x/mint parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    cosmos.mint.v1beta1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.mint.v1beta1.Params:
        description: Params defines the parameters for the x/mint module.
        properties:
            blocks_per_year:
                format: uint64
                title: expected blocks per year
                type: string
            goal_bonded:
                title: goal of percent bonded atoms
                type: string
            inflation_max:
                title: maximum inflation rate
                type: string
            inflation_min:
                title: minimum inflation rate
                type: string
            inflation_rate_change:
                title: maximum annual change in inflation rate
                type: string
            mint_denom:
                title: type of coin to mint
                type: string
        type: object
    cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
        description: |-
            QueryAnnualProvisionsResponse is the response type for the
            Query/AnnualProvisions RPC method.
        properties:
            annual_provisions:
                description: annual_provisions is the current minting annual provisions value.
                format: byte
                type: string
        type: object
    cosmos.mint.v1beta1.QueryInflationResponse:
        description: |-
            QueryInflationResponse is the response type for the Query/Inflation RPC
            method.
        properties:
            inflation:
                description: inflation is the current minting inflation value.
                format: byte
                type: string
        type: object
    cosmos.mint.v1beta1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/cosmos.mint.v1beta1.Params'
                description: params defines the parameters of the module.
        type: object
    cosmos.nft.v1beta1.Class:
        description: Class defines the class of the nft type.
        properties:
            data:
                $ref: '#/definitions/google.protobuf.Any'
                title: data is the app specific metadata of the NFT class. Optional
            description:
                title: description is a brief description of nft classification. Optional
                type: string
            id:
                title: id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
                type: string
            name:
                title: name defines the human-readable name of the NFT classification. Optional
                type: string
            symbol:
                title: symbol is an abbreviated name for nft classification. Optional
                type: string
            uri:
                title: uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional
                type: string
            uri_hash:
                title: uri_hash is a hash of the document pointed by uri. Optional
                type: string
        type: object
    cosmos.nft.v1beta1.MsgSend:
        description: MsgSend represents a message to send a nft from one account to another account.
        properties:
            class_id:
                title: class_id defines the unique identifier of the nft classification, similar to the contract address of ERC721
                type: string
            id:
                title: id defines the unique identification of nft
                type: string
            receiver:
                title: receiver is the receiver address of nft
                type: string
            sender:
                title: sender is the address of the owner of nft
                type: string
        type: object
    cosmos.nft.v1beta1.MsgSendResponse:
        description: MsgSendResponse defines the Msg/Send response type.
        type: object
    cosmos.nft.v1beta1.NFT:
        description: NFT defines the NFT.
        properties:
            class_id:
                title: class_id associated with the NFT, similar to the contract address of ERC721
                type: string
            data:
                $ref: '#/definitions/google.protobuf.Any'
                title: data is an app specific data of the NFT. Optional
            id:
                title: id is a unique identifier of the NFT
                type: string
            uri:
                title: uri for the NFT metadata stored off chain
                type: string
            uri_hash:
                title: uri_hash is a hash of the document pointed by uri
                type: string
        type: object
    cosmos.nft.v1beta1.QueryBalanceResponse:
        properties:
            amount:
                format: uint64
                title: amount is the number of all NFTs of a given class owned by the owner
                type: string
        title: QueryBalanceResponse is the response type for the Query/Balance RPC method
        type: object
    cosmos.nft.v1beta1.QueryClassResponse:
        properties:
            class:
                $ref: '#/definitions/cosmos.nft.v1beta1.Class'
                description: class defines the class of the nft type.
        title: QueryClassResponse is the response type for the Query/Class RPC method
        type: object
    cosmos.nft.v1beta1.QueryClassesResponse:
        properties:
            classes:
                description: class defines the class of the nft type.
                items:
                    $ref: '#/definitions/cosmos.nft.v1beta1.Class'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: QueryClassesResponse is the response type for the Query/Classes RPC method
        type: object
    cosmos.nft.v1beta1.QueryNFTResponse:
        properties:
            nft:
                $ref: '#/definitions/cosmos.nft.v1beta1.NFT'
                title: owner is the owner address of the nft
        title: QueryNFTResponse is the response type for the Query/NFT RPC method
        type: object
    cosmos.nft.v1beta1.QueryNFTsResponse:
        properties:
            nfts:
                items:
                    $ref: '#/definitions/cosmos.nft.v1beta1.NFT'
                    type: object
                title: NFT defines the NFT
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: QueryNFTsResponse is the response type for the Query/NFTs RPC methods
        type: object
    cosmos.nft.v1beta1.QueryOwnerResponse:
        properties:
            owner:
                title: owner is the owner address of the nft
                type: string
        title: QueryOwnerResponse is the response type for the Query/Owner RPC method
        type: object
    cosmos.nft.v1beta1.QuerySupplyResponse:
        properties:
            amount:
                format: uint64
                title: amount is the number of all NFTs from the given class
                type: string
        title: QuerySupplyResponse is the response type for the Query/Supply RPC method
        type: object
    cosmos.params.v1beta1.ParamChange:
        description: |-
            ParamChange defines an individual parameter change, for use in
            ParameterChangeProposal.
        properties:
            key:
                type: string
            subspace:
                type: string
            value:
                type: string
        type: object
    cosmos.params.v1beta1.QueryParamsResponse:
        description: QueryParamsResponse is response type for the Query/Params RPC method.
        properties:
            param:
                $ref: '#/definitions/cosmos.params.v1beta1.ParamChange'
                description: param defines the queried parameter.
        type: object
    cosmos.params.v1beta1.QuerySubspacesResponse:
        description: |-
            QuerySubspacesResponse defines the response types for querying for all
            registered subspaces and all keys for a subspace.

            Since: cosmos-sdk 0.46
        properties:
            subspaces:
                items:
                    $ref: '#/definitions/cosmos.params.v1beta1.Subspace'
                    type: object
                type: array
        type: object
    cosmos.params.v1beta1.Subspace:
        description: |-
            Subspace defines a parameter subspace name and all the keys that exist for
            the subspace.

            Since: cosmos-sdk 0.46
        properties:
            keys:
                items:
                    type: string
                type: array
            subspace:
                type: string
        type: object
    cosmos.slashing.v1beta1.MsgUnjail:
        properties:
            validator_addr:
                type: string
        title: MsgUnjail defines the Msg/Unjail request type
        type: object
    cosmos.slashing.v1beta1.MsgUnjailResponse:
        title: MsgUnjailResponse defines the Msg/Unjail response type
        type: object
    cosmos.slashing.v1beta1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the Msg/UpdateParams request type.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/cosmos.slashing.v1beta1.Params'
                description: |-
                    params defines the x/slashing parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    cosmos.slashing.v1beta1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.slashing.v1beta1.Params:
        description: Params represents the parameters used for by the slashing module.
        properties:
            downtime_jail_duration:
                type: string
            min_signed_per_window:
                format: byte
                type: string
            signed_blocks_window:
                format: int64
                type: string
            slash_fraction_double_sign:
                format: byte
                type: string
            slash_fraction_downtime:
                format: byte
                type: string
        type: object
    cosmos.slashing.v1beta1.QueryParamsResponse:
        properties:
            params:
                $ref: '#/definitions/cosmos.slashing.v1beta1.Params'
        title: QueryParamsResponse is the response type for the Query/Params RPC method
        type: object
    cosmos.slashing.v1beta1.QuerySigningInfoResponse:
        properties:
            val_signing_info:
                $ref: '#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo'
                title: val_signing_info is the signing info of requested val cons address
        title: |-
            QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
            method
        type: object
    cosmos.slashing.v1beta1.QuerySigningInfosResponse:
        properties:
            info:
                items:
                    $ref: '#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo'
                    type: object
                title: info is the signing info of all validators
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        title: |-
            QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
            method
        type: object
    cosmos.slashing.v1beta1.ValidatorSigningInfo:
        description: |-
            ValidatorSigningInfo defines a validator's signing info for monitoring their
            liveness activity.
        properties:
            address:
                type: string
            index_offset:
                description: |-
                    Index which is incremented every time a validator is bonded in a block and
                    _may_ have signed a pre-commit or not. This in conjunction with the
                    signed_blocks_window param determines the index in the missed block bitmap.
                format: int64
                type: string
            jailed_until:
                description: Timestamp until which the validator is jailed due to liveness downtime.
                format: date-time
                type: string
            missed_blocks_counter:
                description: |-
                    A counter of missed (unsigned) blocks. It is used to avoid unnecessary
                    reads in the missed block bitmap.
                format: int64
                type: string
            start_height:
                format: int64
                title: Height at which validator was first a candidate OR was un-jailed
                type: string
            tombstoned:
                description: |-
                    Whether or not a validator has been tombstoned (killed out of validator
                    set). It is set once the validator commits an equivocation or for any other
                    configured misbehavior.
                type: boolean
        type: object
    cosmos.staking.v1beta1.BondStatus:
        default: BOND_STATUS_UNSPECIFIED
        description: |-
            BondStatus is the status of a validator.

             - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
             - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
             - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
             - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
        enum:
            - BOND_STATUS_UNSPECIFIED
            - BOND_STATUS_UNBONDED
            - BOND_STATUS_UNBONDING
            - BOND_STATUS_BONDED
        type: string
    cosmos.staking.v1beta1.Commission:
        description: Commission defines commission parameters for a given validator.
        properties:
            commission_rates:
                $ref: '#/definitions/cosmos.staking.v1beta1.CommissionRates'
                description: commission_rates defines the initial commission rates to be used for creating a validator.
            update_time:
                description: update_time is the last time the commission rate was changed.
                format: date-time
                type: string
        type: object
    cosmos.staking.v1beta1.CommissionRates:
        description: |-
            CommissionRates defines the initial commission rates to be used for creating
            a validator.
        properties:
            max_change_rate:
                description: max_change_rate defines the maximum daily increase of the validator commission, as a fraction.
                type: string
            max_rate:
                description: max_rate defines the maximum commission rate which validator can ever charge, as a fraction.
                type: string
            rate:
                description: rate is the commission rate charged to delegators, as a fraction.
                type: string
        type: object
    cosmos.staking.v1beta1.Delegation:
        description: |-
            Delegation represents the bond with tokens held by an account. It is
            owned by one delegator, and is associated with the voting power of one
            validator.
        properties:
            delegator_address:
                description: delegator_address is the encoded address of the delegator.
                type: string
            shares:
                description: shares define the delegation shares received.
                type: string
            validator_address:
                description: validator_address is the encoded address of the validator.
                type: string
        type: object
    cosmos.staking.v1beta1.DelegationResponse:
        description: |-
            DelegationResponse is equivalent to Delegation except that it contains a
            balance in addition to shares which is more suitable for client responses.
        properties:
            balance:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
            delegation:
                $ref: '#/definitions/cosmos.staking.v1beta1.Delegation'
        type: object
    cosmos.staking.v1beta1.Description:
        description: Description defines a validator description.
        properties:
            details:
                description: details define other optional details.
                type: string
            identity:
                description: identity defines an optional identity signature (ex. UPort or Keybase).
                type: string
            moniker:
                description: moniker defines a human-readable name for the validator.
                type: string
            security_contact:
                description: security_contact defines an optional email for security contact.
                type: string
            website:
                description: website defines an optional website link.
                type: string
        type: object
    cosmos.staking.v1beta1.HistoricalInfo:
        description: |-
            HistoricalInfo contains header and validator information for a given block.
            It is stored as part of staking module's state, which persists the `n` most
            recent HistoricalInfo
            (`n` is set by the staking module's `historical_entries` parameter).
        properties:
            header:
                $ref: '#/definitions/tendermint.types.Header'
            valset:
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
                    type: object
                type: array
        type: object
    cosmos.staking.v1beta1.MsgBeginRedelegate:
        description: |-
            MsgBeginRedelegate defines a SDK message for performing a redelegation
            of coins from a delegator and source validator to a destination validator.
        properties:
            amount:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
            delegator_address:
                type: string
            validator_dst_address:
                type: string
            validator_src_address:
                type: string
        type: object
    cosmos.staking.v1beta1.MsgBeginRedelegateResponse:
        description: MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
        properties:
            completion_time:
                format: date-time
                type: string
        type: object
    cosmos.staking.v1beta1.MsgCancelUnbondingDelegation:
        description: 'Since: cosmos-sdk 0.46'
        properties:
            amount:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                title: amount is always less than or equal to unbonding delegation entry balance
            creation_height:
                description: creation_height is the height which the unbonding took place.
                format: int64
                type: string
            delegator_address:
                type: string
            validator_address:
                type: string
        title: MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator
        type: object
    cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse:
        description: 'Since: cosmos-sdk 0.46'
        title: MsgCancelUnbondingDelegationResponse
        type: object
    cosmos.staking.v1beta1.MsgCreateValidator:
        description: MsgCreateValidator defines a SDK message for creating a new validator.
        properties:
            commission:
                $ref: '#/definitions/cosmos.staking.v1beta1.CommissionRates'
            delegator_address:
                description: |-
                    Deprecated: Use of Delegator Address in MsgCreateValidator is deprecated.
                    The validator address bytes and delegator address bytes refer to the same account while creating validator (defer
                    only in bech32 notation).
                type: string
            description:
                $ref: '#/definitions/cosmos.staking.v1beta1.Description'
            min_self_delegation:
                type: string
            pubkey:
                $ref: '#/definitions/google.protobuf.Any'
            validator_address:
                type: string
            value:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: object
    cosmos.staking.v1beta1.MsgCreateValidatorResponse:
        description: MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
        type: object
    cosmos.staking.v1beta1.MsgDelegate:
        description: |-
            MsgDelegate defines a SDK message for performing a delegation of coins
            from a delegator to a validator.
        properties:
            amount:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
            delegator_address:
                type: string
            validator_address:
                type: string
        type: object
    cosmos.staking.v1beta1.MsgDelegateResponse:
        description: MsgDelegateResponse defines the Msg/Delegate response type.
        type: object
    cosmos.staking.v1beta1.MsgEditValidator:
        description: MsgEditValidator defines a SDK message for editing an existing validator.
        properties:
            commission_rate:
                title: |-
                    We pass a reference to the new commission rate and min self delegation as
                    it's not mandatory to update. If not updated, the deserialized rate will be
                    zero with no way to distinguish if an update was intended.
                    REF: #2373
                type: string
            description:
                $ref: '#/definitions/cosmos.staking.v1beta1.Description'
            min_self_delegation:
                type: string
            validator_address:
                type: string
        type: object
    cosmos.staking.v1beta1.MsgEditValidatorResponse:
        description: MsgEditValidatorResponse defines the Msg/EditValidator response type.
        type: object
    cosmos.staking.v1beta1.MsgUndelegate:
        description: |-
            MsgUndelegate defines a SDK message for performing an undelegation from a
            delegate and a validator.
        properties:
            amount:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
            delegator_address:
                type: string
            validator_address:
                type: string
        type: object
    cosmos.staking.v1beta1.MsgUndelegateResponse:
        description: MsgUndelegateResponse defines the Msg/Undelegate response type.
        properties:
            amount:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                description: 'Since: cosmos-sdk 0.50'
                title: amount returns the amount of undelegated coins
            completion_time:
                format: date-time
                type: string
        type: object
    cosmos.staking.v1beta1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the Msg/UpdateParams request type.

            Since: cosmos-sdk 0.47
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/cosmos.staking.v1beta1.Params'
                description: |-
                    params defines the x/staking parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    cosmos.staking.v1beta1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: cosmos-sdk 0.47
        type: object
    cosmos.staking.v1beta1.Params:
        description: Params defines the parameters for the x/staking module.
        properties:
            bond_denom:
                description: bond_denom defines the bondable coin denomination.
                type: string
            historical_entries:
                description: historical_entries is the number of historical entries to persist.
                format: int64
                type: integer
            max_entries:
                description: max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
                format: int64
                type: integer
            max_validators:
                description: max_validators is the maximum number of validators.
                format: int64
                type: integer
            min_commission_rate:
                title: min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
                type: string
            unbonding_time:
                description: unbonding_time is the time duration of unbonding.
                type: string
        type: object
    cosmos.staking.v1beta1.Pool:
        description: |-
            Pool is used for tracking bonded and not-bonded token supply of the bond
            denomination.
        properties:
            bonded_tokens:
                type: string
            not_bonded_tokens:
                type: string
        type: object
    cosmos.staking.v1beta1.QueryDelegationResponse:
        description: QueryDelegationResponse is response type for the Query/Delegation RPC method.
        properties:
            delegation_response:
                $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
                description: delegation_responses defines the delegation info of a delegation.
        type: object
    cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
        description: |-
            QueryDelegatorDelegationsResponse is response type for the
            Query/DelegatorDelegations RPC method.
        properties:
            delegation_responses:
                description: delegation_responses defines all the delegations' info of a delegator.
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
        description: |-
            QueryUnbondingDelegatorDelegationsResponse is response type for the
            Query/UnbondingDelegatorDelegations RPC method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            unbonding_responses:
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
                    type: object
                type: array
        type: object
    cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
        description: |-
            QueryDelegatorValidatorResponse response type for the
            Query/DelegatorValidator RPC method.
        properties:
            validator:
                $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
                description: validator defines the validator info.
        type: object
    cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
        description: |-
            QueryDelegatorValidatorsResponse is response type for the
            Query/DelegatorValidators RPC method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            validators:
                description: validators defines the validators' info of a delegator.
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
                    type: object
                type: array
        type: object
    cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
        description: |-
            QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
            method.
        properties:
            hist:
                $ref: '#/definitions/cosmos.staking.v1beta1.HistoricalInfo'
                description: hist defines the historical info at the given height.
        type: object
    cosmos.staking.v1beta1.QueryParamsResponse:
        description: QueryParamsResponse is response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/cosmos.staking.v1beta1.Params'
                description: params holds all the parameters of this module.
        type: object
    cosmos.staking.v1beta1.QueryPoolResponse:
        description: QueryPoolResponse is response type for the Query/Pool RPC method.
        properties:
            pool:
                $ref: '#/definitions/cosmos.staking.v1beta1.Pool'
                description: pool defines the pool info.
        type: object
    cosmos.staking.v1beta1.QueryRedelegationsResponse:
        description: |-
            QueryRedelegationsResponse is response type for the Query/Redelegations RPC
            method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            redelegation_responses:
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationResponse'
                    type: object
                type: array
        type: object
    cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
        description: |-
            QueryDelegationResponse is response type for the Query/UnbondingDelegation
            RPC method.
        properties:
            unbond:
                $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
                description: unbond defines the unbonding information of a delegation.
        type: object
    cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
        properties:
            delegation_responses:
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: |-
            QueryValidatorDelegationsResponse is response type for the
            Query/ValidatorDelegations RPC method
        type: object
    cosmos.staking.v1beta1.QueryValidatorResponse:
        properties:
            validator:
                $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
                description: validator defines the validator info.
        title: QueryValidatorResponse is response type for the Query/Validator RPC method
        type: object
    cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
        description: |-
            QueryValidatorUnbondingDelegationsResponse is response type for the
            Query/ValidatorUnbondingDelegations RPC method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            unbonding_responses:
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
                    type: object
                type: array
        type: object
    cosmos.staking.v1beta1.QueryValidatorsResponse:
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
            validators:
                description: validators contains all the queried validators.
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
                    type: object
                type: array
        title: QueryValidatorsResponse is response type for the Query/Validators RPC method
        type: object
    cosmos.staking.v1beta1.Redelegation:
        description: |-
            Redelegation contains the list of a particular delegator's redelegating bonds
            from a particular source validator to a particular destination validator.
        properties:
            delegator_address:
                description: delegator_address is the bech32-encoded address of the delegator.
                type: string
            entries:
                description: |-
                    entries are the redelegation entries.

                    redelegation entries
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntry'
                    type: object
                type: array
            validator_dst_address:
                description: validator_dst_address is the validator redelegation destination operator address.
                type: string
            validator_src_address:
                description: validator_src_address is the validator redelegation source operator address.
                type: string
        type: object
    cosmos.staking.v1beta1.RedelegationEntry:
        description: RedelegationEntry defines a redelegation object with relevant metadata.
        properties:
            completion_time:
                description: completion_time defines the unix time for redelegation completion.
                format: date-time
                type: string
            creation_height:
                description: creation_height  defines the height which the redelegation took place.
                format: int64
                type: string
            initial_balance:
                description: initial_balance defines the initial balance when redelegation started.
                type: string
            shares_dst:
                description: shares_dst is the amount of destination-validator shares created by redelegation.
                type: string
            unbonding_id:
                format: uint64
                title: Incrementing id that uniquely identifies this entry
                type: string
            unbonding_on_hold_ref_count:
                format: int64
                title: Strictly positive if this entry's unbonding has been stopped by external modules
                type: string
        type: object
    cosmos.staking.v1beta1.RedelegationEntryResponse:
        description: |-
            RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
            contains a balance in addition to shares which is more suitable for client
            responses.
        properties:
            balance:
                type: string
            redelegation_entry:
                $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntry'
        type: object
    cosmos.staking.v1beta1.RedelegationResponse:
        description: |-
            RedelegationResponse is equivalent to a Redelegation except that its entries
            contain a balance in addition to shares which is more suitable for client
            responses.
        properties:
            entries:
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntryResponse'
                    type: object
                type: array
            redelegation:
                $ref: '#/definitions/cosmos.staking.v1beta1.Redelegation'
        type: object
    cosmos.staking.v1beta1.UnbondingDelegation:
        description: |-
            UnbondingDelegation stores all of a single delegator's unbonding bonds
            for a single validator in an time-ordered list.
        properties:
            delegator_address:
                description: delegator_address is the encoded address of the delegator.
                type: string
            entries:
                description: |-
                    entries are the unbonding delegation entries.

                    unbonding delegation entries
                items:
                    $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegationEntry'
                    type: object
                type: array
            validator_address:
                description: validator_address is the encoded address of the validator.
                type: string
        type: object
    cosmos.staking.v1beta1.UnbondingDelegationEntry:
        description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
        properties:
            balance:
                description: balance defines the tokens to receive at completion.
                type: string
            completion_time:
                description: completion_time is the unix time for unbonding completion.
                format: date-time
                type: string
            creation_height:
                description: creation_height is the height which the unbonding took place.
                format: int64
                type: string
            initial_balance:
                description: initial_balance defines the tokens initially scheduled to receive at completion.
                type: string
            unbonding_id:
                format: uint64
                title: Incrementing id that uniquely identifies this entry
                type: string
            unbonding_on_hold_ref_count:
                format: int64
                title: Strictly positive if this entry's unbonding has been stopped by external modules
                type: string
        type: object
    cosmos.staking.v1beta1.Validator:
        description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
        properties:
            commission:
                $ref: '#/definitions/cosmos.staking.v1beta1.Commission'
                description: commission defines the commission parameters.
            consensus_pubkey:
                $ref: '#/definitions/google.protobuf.Any'
                description: consensus_pubkey is the consensus public key of the validator, as a Protobuf Any.
            delegator_shares:
                description: delegator_shares defines total shares issued to a validator's delegators.
                type: string
            description:
                $ref: '#/definitions/cosmos.staking.v1beta1.Description'
                description: description defines the description terms for the validator.
            jailed:
                description: jailed defined whether the validator has been jailed from bonded status or not.
                type: boolean
            min_self_delegation:
                description: |-
                    min_self_delegation is the validator's self declared minimum self delegation.

                    Since: cosmos-sdk 0.46
                type: string
            operator_address:
                description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                type: string
            status:
                $ref: '#/definitions/cosmos.staking.v1beta1.BondStatus'
                description: status is the validator status (bonded/unbonding/unbonded).
            tokens:
                description: tokens define the delegated tokens (incl. self-delegation).
                type: string
            unbonding_height:
                description: unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
                format: int64
                type: string
            unbonding_ids:
                items:
                    format: uint64
                    type: string
                title: list of unbonding ids, each uniquely identifing an unbonding of this validator
                type: array
            unbonding_on_hold_ref_count:
                format: int64
                title: strictly positive if this validator's unbonding has been stopped by external modules
                type: string
            unbonding_time:
                description: unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
                format: date-time
                type: string
        type: object
    cosmos.store.streaming.abci.ListenCommitRequest:
        properties:
            block_height:
                format: int64
                title: explicitly pass in block height as ResponseCommit does not contain this info
                type: string
            change_set:
                items:
                    $ref: '#/definitions/cosmos.store.v1beta1.StoreKVPair'
                    type: object
                type: array
            res:
                $ref: '#/definitions/tendermint.abci.ResponseCommit'
        title: ListenCommitRequest is the request type for the ListenCommit RPC method
        type: object
    cosmos.store.streaming.abci.ListenCommitResponse:
        title: ListenCommitResponse is the response type for the ListenCommit RPC method
        type: object
    cosmos.store.streaming.abci.ListenFinalizeBlockRequest:
        properties:
            req:
                $ref: '#/definitions/tendermint.abci.RequestFinalizeBlock'
            res:
                $ref: '#/definitions/tendermint.abci.ResponseFinalizeBlock'
        title: ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
        type: object
    cosmos.store.streaming.abci.ListenFinalizeBlockResponse:
        title: ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
        type: object
    cosmos.store.v1beta1.StoreKVPair:
        description: 'Since: cosmos-sdk 0.43'
        properties:
            delete:
                title: true indicates a delete operation, false indicates a set operation
                type: boolean
            key:
                format: byte
                type: string
            store_key:
                title: the store key for the KVStore this pair originates from
                type: string
            value:
                format: byte
                type: string
        title: |-
            StoreKVPair is a KVStore KVPair used for listening to state changes (Sets and Deletes)
            It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and
            Deletes
        type: object
    cosmos.tx.signing.v1beta1.SignMode:
        default: SIGN_MODE_UNSPECIFIED
        description: |-
            SignMode represents a signing mode with its own security guarantees.

            This enum should be considered a registry of all known sign modes
            in the Cosmos ecosystem. Apps are not expected to support all known
            sign modes. Apps that would like to support custom  sign modes are
            encouraged to open a small PR against this file to add a new case
            to this SignMode enum describing their sign mode so that different
            apps have a consistent version of this enum.

             - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
            rejected.
             - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
            verified with raw bytes from Tx.
             - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
            human-readable textual representation on top of the binary representation
            from SIGN_MODE_DIRECT.

            Since: cosmos-sdk 0.50
             - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
            SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
            require signers signing over other signers' `signer_info`.

            Since: cosmos-sdk 0.46
             - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
            Amino JSON and will be removed in the future.
             - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
            SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

            Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
            but is not implemented on the SDK by default. To enable EIP-191, you need
            to pass a custom `TxConfig` that has an implementation of
            `SignModeHandler` for EIP-191. The SDK may decide to fully support
            EIP-191 in the future.

            Since: cosmos-sdk 0.45.2
        enum:
            - SIGN_MODE_UNSPECIFIED
            - SIGN_MODE_DIRECT
            - SIGN_MODE_TEXTUAL
            - SIGN_MODE_DIRECT_AUX
            - SIGN_MODE_LEGACY_AMINO_JSON
            - SIGN_MODE_EIP_191
        type: string
    cosmos.tx.v1beta1.AuthInfo:
        description: |-
            AuthInfo describes the fee and signer modes that are used to sign a
            transaction.
        properties:
            fee:
                $ref: '#/definitions/cosmos.tx.v1beta1.Fee'
                description: |-
                    Fee is the fee and gas limit for the transaction. The first signer is the
                    primary signer and the one which pays the fee. The fee can be calculated
                    based on the cost of evaluating the body and doing signature verification
                    of the signers. This can be estimated via simulation.
            signer_infos:
                description: |-
                    signer_infos defines the signing modes for the required signers. The number
                    and order of elements must match the required signers from TxBody's
                    messages. The first element is the primary signer and the one which pays
                    the fee.
                items:
                    $ref: '#/definitions/cosmos.tx.v1beta1.SignerInfo'
                    type: object
                type: array
            tip:
                $ref: '#/definitions/cosmos.tx.v1beta1.Tip'
                description: |-
                    Tip is the optional tip used for transactions fees paid in another denom.

                    This field is ignored if the chain didn't enable tips, i.e. didn't add the
                    `TipDecorator` in its posthandler.

                    Since: cosmos-sdk 0.46
        type: object
    cosmos.tx.v1beta1.BroadcastMode:
        default: BROADCAST_MODE_UNSPECIFIED
        description: |-
            BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
            method.

             - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
             - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
            BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
             - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
            for a CheckTx execution response only.
             - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
            returns immediately.
        enum:
            - BROADCAST_MODE_UNSPECIFIED
            - BROADCAST_MODE_BLOCK
            - BROADCAST_MODE_SYNC
            - BROADCAST_MODE_ASYNC
        type: string
    cosmos.tx.v1beta1.BroadcastTxRequest:
        description: |-
            BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
            RPC method.
        properties:
            mode:
                $ref: '#/definitions/cosmos.tx.v1beta1.BroadcastMode'
            tx_bytes:
                description: tx_bytes is the raw transaction.
                format: byte
                type: string
        type: object
    cosmos.tx.v1beta1.BroadcastTxResponse:
        description: |-
            BroadcastTxResponse is the response type for the
            Service.BroadcastTx method.
        properties:
            tx_response:
                $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
                description: tx_response is the queried TxResponses.
        type: object
    cosmos.tx.v1beta1.Fee:
        description: |-
            Fee includes the amount of coins paid in fees and the maximum
            gas to be used by the transaction. The ratio yields an effective "gasprice",
            which must be above some miminum to be accepted into the mempool.
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: amount is the amount of coins to be paid as a fee
                type: array
            gas_limit:
                format: uint64
                title: |-
                    gas_limit is the maximum gas that can be used in transaction processing
                    before an out of gas error occurs
                type: string
            granter:
                title: |-
                    if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
                    to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
                    not support fee grants, this will fail
                type: string
            payer:
                description: |-
                    if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
                    the payer must be a tx signer (and thus have signed this field in AuthInfo).
                    setting this field does *not* change the ordering of required signers for the transaction.
                type: string
        type: object
    cosmos.tx.v1beta1.GetBlockWithTxsResponse:
        description: |-
            GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs
            method.

            Since: cosmos-sdk 0.45.2
        properties:
            block:
                $ref: '#/definitions/tendermint.types.Block'
            block_id:
                $ref: '#/definitions/tendermint.types.BlockID'
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines a pagination for the response.
            txs:
                description: txs are the transactions in the block.
                items:
                    $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
                    type: object
                type: array
        type: object
    cosmos.tx.v1beta1.GetTxResponse:
        description: GetTxResponse is the response type for the Service.GetTx method.
        properties:
            tx:
                $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
                description: tx is the queried transaction.
            tx_response:
                $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
                description: tx_response is the queried TxResponses.
        type: object
    cosmos.tx.v1beta1.GetTxsEventResponse:
        description: |-
            GetTxsEventResponse is the response type for the Service.TxsByEvents
            RPC method.
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: |-
                    pagination defines a pagination for the response.
                    Deprecated post v0.46.x: use total instead.
            total:
                format: uint64
                title: total is total number of results available
                type: string
            tx_responses:
                description: tx_responses is the list of queried TxResponses.
                items:
                    $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
                    type: object
                type: array
            txs:
                description: txs is the list of queried transactions.
                items:
                    $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
                    type: object
                type: array
        type: object
    cosmos.tx.v1beta1.ModeInfo:
        description: ModeInfo describes the signing mode of a single or nested multisig signer.
        properties:
            multi:
                $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo.Multi'
                title: multi represents a nested multisig signer
            single:
                $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo.Single'
                title: single represents a single signer
        type: object
    cosmos.tx.v1beta1.ModeInfo.Multi:
        properties:
            bitarray:
                $ref: '#/definitions/cosmos.crypto.multisig.v1beta1.CompactBitArray'
                title: bitarray specifies which keys within the multisig are signing
            mode_infos:
                items:
                    $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
                    type: object
                title: |-
                    mode_infos is the corresponding modes of the signers of the multisig
                    which could include nested multisig public keys
                type: array
        title: Multi is the mode info for a multisig public key
        type: object
    cosmos.tx.v1beta1.ModeInfo.Single:
        properties:
            mode:
                $ref: '#/definitions/cosmos.tx.signing.v1beta1.SignMode'
                title: mode is the signing mode of the single signer
        title: |-
            Single is the mode info for a single signer. It is structured as a message
            to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
            future
        type: object
    cosmos.tx.v1beta1.OrderBy:
        default: ORDER_BY_UNSPECIFIED
        description: |-
            - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
            to ASC in this case.
             - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
             - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
        enum:
            - ORDER_BY_UNSPECIFIED
            - ORDER_BY_ASC
            - ORDER_BY_DESC
        title: OrderBy defines the sorting order
        type: string
    cosmos.tx.v1beta1.SignerInfo:
        description: |-
            SignerInfo describes the public key and signing mode of a single top-level
            signer.
        properties:
            mode_info:
                $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
                title: |-
                    mode_info describes the signing mode of the signer and is a nested
                    structure to support nested multisig pubkey's
            public_key:
                $ref: '#/definitions/google.protobuf.Any'
                description: |-
                    public_key is the public key of the signer. It is optional for accounts
                    that already exist in state. If unset, the verifier can use the required \
                    signer address for this position and lookup the public key.
            sequence:
                description: |-
                    sequence is the sequence of the account, which describes the
                    number of committed transactions signed by a given address. It is used to
                    prevent replay attacks.
                format: uint64
                type: string
        type: object
    cosmos.tx.v1beta1.SimulateRequest:
        description: |-
            SimulateRequest is the request type for the Service.Simulate
            RPC method.
        properties:
            tx:
                $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
                description: |-
                    tx is the transaction to simulate.
                    Deprecated. Send raw tx bytes instead.
            tx_bytes:
                description: |-
                    tx_bytes is the raw transaction.

                    Since: cosmos-sdk 0.43
                format: byte
                type: string
        type: object
    cosmos.tx.v1beta1.SimulateResponse:
        description: |-
            SimulateResponse is the response type for the
            Service.SimulateRPC method.
        properties:
            gas_info:
                $ref: '#/definitions/cosmos.base.abci.v1beta1.GasInfo'
                description: gas_info is the information about gas used in the simulation.
            result:
                $ref: '#/definitions/cosmos.base.abci.v1beta1.Result'
                description: result is the result of the simulation.
        type: object
    cosmos.tx.v1beta1.Tip:
        description: |-
            Tip is the tip used for meta-transactions.

            Since: cosmos-sdk 0.46
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: amount is the amount of the tip
                type: array
            tipper:
                title: tipper is the address of the account paying for the tip
                type: string
        type: object
    cosmos.tx.v1beta1.Tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties:
            auth_info:
                $ref: '#/definitions/cosmos.tx.v1beta1.AuthInfo'
                title: |-
                    auth_info is the authorization related content of the transaction,
                    specifically signers, signer modes and fee
            body:
                $ref: '#/definitions/cosmos.tx.v1beta1.TxBody'
                title: body is the processable content of the transaction
            signatures:
                description: |-
                    signatures is a list of signatures that matches the length and order of
                    AuthInfo's signer_infos to allow connecting signature meta information like
                    public key and signing mode by position.
                items:
                    format: byte
                    type: string
                type: array
        type: object
    cosmos.tx.v1beta1.TxBody:
        description: TxBody is the body of a transaction that all signers sign over.
        properties:
            extension_options:
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                title: |-
                    extension_options are arbitrary options that can be added by chains
                    when the default options are not sufficient. If any of these are present
                    and can't be handled, the transaction will be rejected
                type: array
            memo:
                description: |-
                    memo is any arbitrary note/comment to be added to the transaction.
                    WARNING: in clients, any publicly exposed text should not be called memo,
                    but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                type: string
            messages:
                description: |-
                    messages is a list of messages to be executed. The required signers of
                    those messages define the number and order of elements in AuthInfo's
                    signer_infos and Tx's signatures. Each required signer address is added to
                    the list only the first time it occurs.
                    By convention, the first required signer (usually from the first message)
                    is referred to as the primary signer and pays the fee for the whole
                    transaction.
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
            non_critical_extension_options:
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                title: |-
                    extension_options are arbitrary options that can be added by chains
                    when the default options are not sufficient. If any of these are present
                    and can't be handled, they will be ignored
                type: array
            timeout_height:
                format: uint64
                title: |-
                    timeout is the block height after which this transaction will not
                    be processed by the chain
                type: string
        type: object
    cosmos.tx.v1beta1.TxDecodeAminoRequest:
        description: |-
            TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
            RPC method.

            Since: cosmos-sdk 0.47
        properties:
            amino_binary:
                format: byte
                type: string
        type: object
    cosmos.tx.v1beta1.TxDecodeAminoResponse:
        description: |-
            TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
            RPC method.

            Since: cosmos-sdk 0.47
        properties:
            amino_json:
                type: string
        type: object
    cosmos.tx.v1beta1.TxDecodeRequest:
        description: |-
            TxDecodeRequest is the request type for the Service.TxDecode
            RPC method.

            Since: cosmos-sdk 0.47
        properties:
            tx_bytes:
                description: tx_bytes is the raw transaction.
                format: byte
                type: string
        type: object
    cosmos.tx.v1beta1.TxDecodeResponse:
        description: |-
            TxDecodeResponse is the response type for the
            Service.TxDecode method.

            Since: cosmos-sdk 0.47
        properties:
            tx:
                $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
                description: tx is the decoded transaction.
        type: object
    cosmos.tx.v1beta1.TxEncodeAminoRequest:
        description: |-
            TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
            RPC method.

            Since: cosmos-sdk 0.47
        properties:
            amino_json:
                type: string
        type: object
    cosmos.tx.v1beta1.TxEncodeAminoResponse:
        description: |-
            TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
            RPC method.

            Since: cosmos-sdk 0.47
        properties:
            amino_binary:
                format: byte
                type: string
        type: object
    cosmos.tx.v1beta1.TxEncodeRequest:
        description: |-
            TxEncodeRequest is the request type for the Service.TxEncode
            RPC method.

            Since: cosmos-sdk 0.47
        properties:
            tx:
                $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
                description: tx is the transaction to encode.
        type: object
    cosmos.tx.v1beta1.TxEncodeResponse:
        description: |-
            TxEncodeResponse is the response type for the
            Service.TxEncode method.

            Since: cosmos-sdk 0.47
        properties:
            tx_bytes:
                description: tx_bytes is the encoded transaction bytes.
                format: byte
                type: string
        type: object
    cosmos.upgrade.v1beta1.ModuleVersion:
        description: |-
            ModuleVersion specifies a module and its consensus version.

            Since: cosmos-sdk 0.43
        properties:
            name:
                title: name of the app module
                type: string
            version:
                format: uint64
                title: consensus version of the app module
                type: string
        type: object
    cosmos.upgrade.v1beta1.MsgCancelUpgrade:
        description: |-
            MsgCancelUpgrade is the Msg/CancelUpgrade request type.

            Since: cosmos-sdk 0.46
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
        type: object
    cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse:
        description: |-
            MsgCancelUpgradeResponse is the Msg/CancelUpgrade response type.

            Since: cosmos-sdk 0.46
        type: object
    cosmos.upgrade.v1beta1.MsgSoftwareUpgrade:
        description: |-
            MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.

            Since: cosmos-sdk 0.46
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            plan:
                $ref: '#/definitions/cosmos.upgrade.v1beta1.Plan'
                description: plan is the upgrade plan.
        type: object
    cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse:
        description: |-
            MsgSoftwareUpgradeResponse is the Msg/SoftwareUpgrade response type.

            Since: cosmos-sdk 0.46
        type: object
    cosmos.upgrade.v1beta1.Plan:
        description: Plan specifies information about a planned upgrade and when it should occur.
        properties:
            height:
                description: The height at which the upgrade must be performed.
                format: int64
                type: string
            info:
                title: |-
                    Any application specific upgrade info to be included on-chain
                    such as a git commit that validators could automatically upgrade to
                type: string
            name:
                description: |-
                    Sets the name for the upgrade. This name will be used by the upgraded
                    version of the software to apply any special "on-upgrade" commands during
                    the first BeginBlock method after the upgrade is applied. It is also used
                    to detect whether a software version can handle a given upgrade. If no
                    upgrade handler with this name has been set in the software, it will be
                    assumed that the software is out-of-date when the upgrade Time or Height is
                    reached and the software will exit.
                type: string
            time:
                description: |-
                    Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
                    has been removed from the SDK.
                    If this field is not empty, an error will be thrown.
                format: date-time
                type: string
            upgraded_client_state:
                $ref: '#/definitions/google.protobuf.Any'
                description: |-
                    Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
                    moved to the IBC module in the sub module 02-client.
                    If this field is not empty, an error will be thrown.
        type: object
    cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
        description: |-
            QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
            method.
        properties:
            height:
                description: height is the block height at which the plan was applied.
                format: int64
                type: string
        type: object
    cosmos.upgrade.v1beta1.QueryAuthorityResponse:
        description: 'Since: cosmos-sdk 0.46'
        properties:
            address:
                type: string
        title: QueryAuthorityResponse is the response type for Query/Authority
        type: object
    cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
        description: |-
            QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
            method.
        properties:
            plan:
                $ref: '#/definitions/cosmos.upgrade.v1beta1.Plan'
                description: plan is the current upgrade plan.
        type: object
    cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
        description: |-
            QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
            RPC method.

            Since: cosmos-sdk 0.43
        properties:
            module_versions:
                description: module_versions is a list of module names with their consensus versions.
                items:
                    $ref: '#/definitions/cosmos.upgrade.v1beta1.ModuleVersion'
                    type: object
                type: array
        type: object
    cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
        description: |-
            QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
            RPC method.
        properties:
            upgraded_consensus_state:
                format: byte
                title: 'Since: cosmos-sdk 0.43'
                type: string
        type: object
    cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount:
        description: |-
            MsgCreateVestingAccount defines a message that enables creating a vesting
            account.

            Since: cosmos-sdk 0.46
        properties:
            from_address:
                type: string
            start_time:
                description: start of vesting as unix time (in seconds).
                format: int64
                type: string
            to_address:
                type: string
            vesting_periods:
                items:
                    $ref: '#/definitions/cosmos.vesting.v1beta1.Period'
                    type: object
                type: array
        type: object
    cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse:
        description: |-
            MsgCreateVestingAccountResponse defines the Msg/CreatePeriodicVestingAccount
            response type.

            Since: cosmos-sdk 0.46
        type: object
    cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount:
        description: |-
            MsgCreatePermanentLockedAccount defines a message that enables creating a permanent
            locked account.

            Since: cosmos-sdk 0.46
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            from_address:
                type: string
            to_address:
                type: string
        type: object
    cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse:
        description: |-
            MsgCreatePermanentLockedAccountResponse defines the Msg/CreatePermanentLockedAccount response type.

            Since: cosmos-sdk 0.46
        type: object
    cosmos.vesting.v1beta1.MsgCreateVestingAccount:
        description: |-
            MsgCreateVestingAccount defines a message that enables creating a vesting
            account.
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            delayed:
                type: boolean
            end_time:
                description: end of vesting as unix time (in seconds).
                format: int64
                type: string
            from_address:
                type: string
            to_address:
                type: string
        type: object
    cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse:
        description: MsgCreateVestingAccountResponse defines the Msg/CreateVestingAccount response type.
        type: object
    cosmos.vesting.v1beta1.Period:
        description: Period defines a length of time and amount of coins that will vest.
        properties:
            amount:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                type: array
            length:
                description: Period duration in seconds.
                format: int64
                type: string
        type: object
    google.protobuf.Any:
        additionalProperties: {}
        properties:
            '@type':
                type: string
        type: object
    google.rpc.Status:
        properties:
            code:
                format: int32
                type: integer
            details:
                items:
                    $ref: '#/definitions/google.protobuf.Any'
                    type: object
                type: array
            message:
                type: string
        type: object
    ibc.applications.fee.v1.Fee:
        properties:
            ack_fee:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: the packet acknowledgement fee
                type: array
            recv_fee:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: the packet receive fee
                type: array
            timeout_fee:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: the packet timeout fee
                type: array
        title: Fee defines the ICS29 receive, acknowledgement and timeout fees
        type: object
    ibc.applications.fee.v1.FeeEnabledChannel:
        properties:
            channel_id:
                title: unique channel identifier
                type: string
            port_id:
                title: unique port identifier
                type: string
        title: FeeEnabledChannel contains the PortID & ChannelID for a fee enabled channel
        type: object
    ibc.applications.fee.v1.IdentifiedPacketFees:
        properties:
            packet_fees:
                items:
                    $ref: '#/definitions/ibc.applications.fee.v1.PacketFee'
                    type: object
                title: list of packet fees
                type: array
            packet_id:
                $ref: '#/definitions/ibc.core.channel.v1.PacketId'
                title: unique packet identifier comprised of the channel ID, port ID and sequence
        title: IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
        type: object
    ibc.applications.fee.v1.MsgPayPacketFee:
        properties:
            fee:
                $ref: '#/definitions/ibc.applications.fee.v1.Fee'
                title: fee encapsulates the recv, ack and timeout fees associated with an IBC packet
            relayers:
                items:
                    type: string
                title: optional list of relayers permitted to the receive packet fees
                type: array
            signer:
                title: account address to refund fee if necessary
                type: string
            source_channel_id:
                title: the source channel unique identifer
                type: string
            source_port_id:
                title: the source port unique identifier
                type: string
        title: |-
            MsgPayPacketFee defines the request type for the PayPacketFee rpc
            This Msg can be used to pay for a packet at the next sequence send & should be combined with the Msg that will be
            paid for
        type: object
    ibc.applications.fee.v1.MsgPayPacketFeeAsync:
        properties:
            packet_fee:
                $ref: '#/definitions/ibc.applications.fee.v1.PacketFee'
                title: the packet fee associated with a particular IBC packet
            packet_id:
                $ref: '#/definitions/ibc.core.channel.v1.PacketId'
                title: unique packet identifier comprised of the channel ID, port ID and sequence
        title: |-
            MsgPayPacketFeeAsync defines the request type for the PayPacketFeeAsync rpc
            This Msg can be used to pay for a packet at a specified sequence (instead of the next sequence send)
        type: object
    ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse:
        title: MsgPayPacketFeeAsyncResponse defines the response type for the PayPacketFeeAsync rpc
        type: object
    ibc.applications.fee.v1.MsgPayPacketFeeResponse:
        title: MsgPayPacketFeeResponse defines the response type for the PayPacketFee rpc
        type: object
    ibc.applications.fee.v1.MsgRegisterCounterpartyPayee:
        properties:
            channel_id:
                title: unique channel identifier
                type: string
            counterparty_payee:
                title: the counterparty payee address
                type: string
            port_id:
                title: unique port identifier
                type: string
            relayer:
                title: the relayer address
                type: string
        title: MsgRegisterCounterpartyPayee defines the request type for the RegisterCounterpartyPayee rpc
        type: object
    ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse:
        title: MsgRegisterCounterpartyPayeeResponse defines the response type for the RegisterCounterpartyPayee rpc
        type: object
    ibc.applications.fee.v1.MsgRegisterPayee:
        properties:
            channel_id:
                title: unique channel identifier
                type: string
            payee:
                title: the payee address
                type: string
            port_id:
                title: unique port identifier
                type: string
            relayer:
                title: the relayer address
                type: string
        title: MsgRegisterPayee defines the request type for the RegisterPayee rpc
        type: object
    ibc.applications.fee.v1.MsgRegisterPayeeResponse:
        title: MsgRegisterPayeeResponse defines the response type for the RegisterPayee rpc
        type: object
    ibc.applications.fee.v1.PacketFee:
        properties:
            fee:
                $ref: '#/definitions/ibc.applications.fee.v1.Fee'
                title: fee encapsulates the recv, ack and timeout fees associated with an IBC packet
            refund_address:
                title: the refund address for unspent fees
                type: string
            relayers:
                items:
                    type: string
                title: optional list of relayers permitted to receive fees
                type: array
        title: PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers
        type: object
    ibc.applications.fee.v1.QueryCounterpartyPayeeResponse:
        properties:
            counterparty_payee:
                title: the counterparty payee address used to compensate forward relaying
                type: string
        title: QueryCounterpartyPayeeResponse defines the response type for the CounterpartyPayee rpc
        type: object
    ibc.applications.fee.v1.QueryFeeEnabledChannelResponse:
        properties:
            fee_enabled:
                title: boolean flag representing the fee enabled channel status
                type: boolean
        title: QueryFeeEnabledChannelResponse defines the response type for the FeeEnabledChannel rpc
        type: object
    ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse:
        properties:
            fee_enabled_channels:
                items:
                    $ref: '#/definitions/ibc.applications.fee.v1.FeeEnabledChannel'
                    type: object
                title: list of fee enabled channels
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: QueryFeeEnabledChannelsResponse defines the response type for the FeeEnabledChannels rpc
        type: object
    ibc.applications.fee.v1.QueryIncentivizedPacketResponse:
        properties:
            incentivized_packet:
                $ref: '#/definitions/ibc.applications.fee.v1.IdentifiedPacketFees'
                title: the identified fees for the incentivized packet
        title: QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPacket rpc
        type: object
    ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse:
        properties:
            incentivized_packets:
                items:
                    $ref: '#/definitions/ibc.applications.fee.v1.IdentifiedPacketFees'
                    type: object
                title: Map of all incentivized_packets
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: QueryIncentivizedPacketsResponse defines the response type for the incentivized packets RPC
        type: object
    ibc.applications.fee.v1.QueryIncentivizedPacketsResponse:
        properties:
            incentivized_packets:
                items:
                    $ref: '#/definitions/ibc.applications.fee.v1.IdentifiedPacketFees'
                    type: object
                title: list of identified fees for incentivized packets
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPackets rpc
        type: object
    ibc.applications.fee.v1.QueryPayeeResponse:
        properties:
            payee_address:
                title: the payee address to which packet fees are paid out
                type: string
        title: QueryPayeeResponse defines the response type for the Payee rpc
        type: object
    ibc.applications.fee.v1.QueryTotalAckFeesResponse:
        properties:
            ack_fees:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: the total packet acknowledgement fees
                type: array
        title: QueryTotalAckFeesResponse defines the response type for the TotalAckFees rpc
        type: object
    ibc.applications.fee.v1.QueryTotalRecvFeesResponse:
        properties:
            recv_fees:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: the total packet receive fees
                type: array
        title: QueryTotalRecvFeesResponse defines the response type for the TotalRecvFees rpc
        type: object
    ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse:
        properties:
            timeout_fees:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: the total packet timeout fees
                type: array
        title: QueryTotalTimeoutFeesResponse defines the response type for the TotalTimeoutFees rpc
        type: object
    ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount:
        properties:
            connection_id:
                type: string
            ordering:
                $ref: '#/definitions/ibc.core.channel.v1.Order'
            owner:
                type: string
            version:
                type: string
        title: MsgRegisterInterchainAccount defines the payload for Msg/RegisterAccount
        type: object
    ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse:
        properties:
            channel_id:
                type: string
            port_id:
                type: string
        title: MsgRegisterInterchainAccountResponse defines the response for Msg/RegisterAccount
        type: object
    ibc.applications.interchain_accounts.controller.v1.MsgSendTx:
        properties:
            connection_id:
                type: string
            owner:
                type: string
            packet_data:
                $ref: '#/definitions/ibc.applications.interchain_accounts.v1.InterchainAccountPacketData'
            relative_timeout:
                description: |-
                    Relative timeout timestamp provided will be added to the current block time during transaction execution.
                    The timeout timestamp must be non-zero.
                format: uint64
                type: string
        title: MsgSendTx defines the payload for Msg/SendTx
        type: object
    ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse:
        properties:
            sequence:
                format: uint64
                type: string
        title: MsgSendTxResponse defines the response for MsgSendTx
        type: object
    ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams:
        properties:
            params:
                $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.Params'
                description: |-
                    params defines the 27-interchain-accounts/controller parameters to update.

                    NOTE: All parameters must be supplied.
            signer:
                title: signer address
                type: string
        title: MsgUpdateParams defines the payload for Msg/UpdateParams
        type: object
    ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse:
        title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
        type: object
    ibc.applications.interchain_accounts.controller.v1.Params:
        description: |-
            Params defines the set of on-chain interchain accounts parameters.
            The following parameters may be used to disable the controller submodule.
        properties:
            controller_enabled:
                description: controller_enabled enables or disables the controller submodule.
                type: boolean
        type: object
    ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse:
        description: QueryInterchainAccountResponse the response type for the Query/InterchainAccount RPC method.
        properties:
            address:
                type: string
        type: object
    ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.Params'
                description: params defines the parameters of the module.
        type: object
    ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafe:
        properties:
            requests:
                description: requests defines the module safe queries to execute.
                items:
                    $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.QueryRequest'
                    type: object
                type: array
            signer:
                title: signer address
                type: string
        title: MsgModuleQuerySafe defines the payload for Msg/ModuleQuerySafe
        type: object
    ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafeResponse:
        properties:
            height:
                format: uint64
                title: height at which the responses were queried
                type: string
            responses:
                items:
                    format: byte
                    type: string
                title: protobuf encoded responses for each query
                type: array
        title: MsgModuleQuerySafeResponse defines the response for Msg/ModuleQuerySafe
        type: object
    ibc.applications.interchain_accounts.host.v1.MsgUpdateParams:
        properties:
            params:
                $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.Params'
                description: |-
                    params defines the 27-interchain-accounts/host parameters to update.

                    NOTE: All parameters must be supplied.
            signer:
                title: signer address
                type: string
        title: MsgUpdateParams defines the payload for Msg/UpdateParams
        type: object
    ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse:
        title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
        type: object
    ibc.applications.interchain_accounts.host.v1.Params:
        description: |-
            Params defines the set of on-chain interchain accounts parameters.
            The following parameters may be used to disable the host submodule.
        properties:
            allow_messages:
                description: allow_messages defines a list of sdk message typeURLs allowed to be executed on a host chain.
                items:
                    type: string
                type: array
            host_enabled:
                description: host_enabled enables or disables the host submodule.
                type: boolean
        type: object
    ibc.applications.interchain_accounts.host.v1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.Params'
                description: params defines the parameters of the module.
        type: object
    ibc.applications.interchain_accounts.host.v1.QueryRequest:
        description: |-
            QueryRequest defines the parameters for a particular query request
            by an interchain account.
        properties:
            data:
                format: byte
                title: |-
                    data defines the payload of the query request as defined by ADR-021.
                    https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing
                type: string
            path:
                title: |-
                    path defines the path of the query request as defined by ADR-021.
                    https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing
                type: string
        type: object
    ibc.applications.interchain_accounts.v1.InterchainAccountPacketData:
        description: InterchainAccountPacketData is comprised of a raw transaction, type of transaction and optional memo field.
        properties:
            data:
                format: byte
                type: string
            memo:
                type: string
            type:
                $ref: '#/definitions/ibc.applications.interchain_accounts.v1.Type'
        type: object
    ibc.applications.interchain_accounts.v1.Type:
        default: TYPE_UNSPECIFIED
        description: |-
            - TYPE_UNSPECIFIED: Default zero value enumeration
             - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts host chain
        enum:
            - TYPE_UNSPECIFIED
            - TYPE_EXECUTE_TX
        title: |-
            Type defines a classification of message issued from a controller chain to its associated interchain accounts
            host
        type: string
    ibc.applications.transfer.v1.DenomTrace:
        description: |-
            DenomTrace contains the base denomination for ICS20 fungible tokens and the
            source tracing information path.
        properties:
            base_denom:
                description: base denomination of the relayed fungible token.
                type: string
            path:
                description: |-
                    path defines the chain of port/channel identifiers used for tracing the
                    source of the fungible token.
                type: string
        type: object
    ibc.applications.transfer.v1.MsgTransfer:
        properties:
            memo:
                title: optional memo
                type: string
            receiver:
                title: the recipient address on the destination chain
                type: string
            sender:
                title: the sender address
                type: string
            source_channel:
                title: the channel by which the packet will be sent
                type: string
            source_port:
                title: the port on which the packet will be sent
                type: string
            timeout_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                description: |-
                    Timeout height relative to the current block height.
                    The timeout is disabled when set to 0.
            timeout_timestamp:
                description: |-
                    Timeout timestamp in absolute nanoseconds since unix epoch.
                    The timeout is disabled when set to 0.
                format: uint64
                type: string
            token:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                title: the tokens to be transferred
        title: |-
            MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between
            ICS20 enabled chains. See ICS Spec here:
            https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
        type: object
    ibc.applications.transfer.v1.MsgTransferResponse:
        description: MsgTransferResponse defines the Msg/Transfer response type.
        properties:
            sequence:
                format: uint64
                title: sequence number of the transfer packet sent
                type: string
        type: object
    ibc.applications.transfer.v1.MsgUpdateParams:
        description: MsgUpdateParams is the Msg/UpdateParams request type.
        properties:
            params:
                $ref: '#/definitions/ibc.applications.transfer.v1.Params'
                description: |-
                    params defines the transfer parameters to update.

                    NOTE: All parameters must be supplied.
            signer:
                title: signer address
                type: string
        type: object
    ibc.applications.transfer.v1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.
        type: object
    ibc.applications.transfer.v1.Params:
        description: |-
            Params defines the set of IBC transfer parameters.
            NOTE: To prevent a single token from being transferred, set the
            TransfersEnabled parameter to true and then set the bank module's SendEnabled
            parameter for the denomination to false.
        properties:
            receive_enabled:
                description: |-
                    receive_enabled enables or disables all cross-chain token transfers to this
                    chain.
                type: boolean
            send_enabled:
                description: |-
                    send_enabled enables or disables all cross-chain token transfers from this
                    chain.
                type: boolean
        type: object
    ibc.applications.transfer.v1.QueryDenomHashResponse:
        description: |-
            QueryDenomHashResponse is the response type for the Query/DenomHash RPC
            method.
        properties:
            hash:
                description: hash (in hex format) of the denomination trace information.
                type: string
        type: object
    ibc.applications.transfer.v1.QueryDenomTraceResponse:
        description: |-
            QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
            method.
        properties:
            denom_trace:
                $ref: '#/definitions/ibc.applications.transfer.v1.DenomTrace'
                description: denom_trace returns the requested denomination trace information.
        type: object
    ibc.applications.transfer.v1.QueryDenomTracesResponse:
        description: |-
            QueryConnectionsResponse is the response type for the Query/DenomTraces RPC
            method.
        properties:
            denom_traces:
                description: denom_traces returns all denominations trace information.
                items:
                    $ref: '#/definitions/ibc.applications.transfer.v1.DenomTrace'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    ibc.applications.transfer.v1.QueryEscrowAddressResponse:
        description: QueryEscrowAddressResponse is the response type of the EscrowAddress RPC method.
        properties:
            escrow_address:
                title: the escrow account address
                type: string
        type: object
    ibc.applications.transfer.v1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/ibc.applications.transfer.v1.Params'
                description: params defines the parameters of the module.
        type: object
    ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse:
        description: QueryTotalEscrowForDenomResponse is the response type for TotalEscrowForDenom RPC method.
        properties:
            amount:
                $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: object
    ibc.core.channel.v1.Channel:
        description: |-
            Channel defines pipeline for exactly-once packet delivery between specific
            modules on separate blockchains, which has at least one end capable of
            sending packets and one end capable of receiving packets.
        properties:
            connection_hops:
                items:
                    type: string
                title: |-
                    list of connection identifiers, in order, along which packets sent on
                    this channel will travel
                type: array
            counterparty:
                $ref: '#/definitions/ibc.core.channel.v1.Counterparty'
                title: counterparty channel end
            ordering:
                $ref: '#/definitions/ibc.core.channel.v1.Order'
                title: whether the channel is ordered or unordered
            state:
                $ref: '#/definitions/ibc.core.channel.v1.State'
                title: current state of the channel end
            upgrade_sequence:
                format: uint64
                title: |-
                    upgrade sequence indicates the latest upgrade attempt performed by this channel
                    the value of 0 indicates the channel has never been upgraded
                type: string
            version:
                title: opaque channel version, which is agreed upon during the handshake
                type: string
        type: object
    ibc.core.channel.v1.Counterparty:
        properties:
            channel_id:
                title: channel end on the counterparty chain
                type: string
            port_id:
                description: port on the counterparty chain which owns the other end of the channel.
                type: string
        title: Counterparty defines a channel end counterparty
        type: object
    ibc.core.channel.v1.ErrorReceipt:
        description: |-
            ErrorReceipt defines a type which encapsulates the upgrade sequence and error associated with the
            upgrade handshake failure. When a channel upgrade handshake is aborted both chains are expected to increment to the
            next sequence.
        properties:
            message:
                title: the error message detailing the cause of failure
                type: string
            sequence:
                format: uint64
                title: the channel upgrade sequence
                type: string
        type: object
    ibc.core.channel.v1.IdentifiedChannel:
        description: |-
            IdentifiedChannel defines a channel with additional port and channel
            identifier fields.
        properties:
            channel_id:
                title: channel identifier
                type: string
            connection_hops:
                items:
                    type: string
                title: |-
                    list of connection identifiers, in order, along which packets sent on
                    this channel will travel
                type: array
            counterparty:
                $ref: '#/definitions/ibc.core.channel.v1.Counterparty'
                title: counterparty channel end
            ordering:
                $ref: '#/definitions/ibc.core.channel.v1.Order'
                title: whether the channel is ordered or unordered
            port_id:
                title: port identifier
                type: string
            state:
                $ref: '#/definitions/ibc.core.channel.v1.State'
                title: current state of the channel end
            upgrade_sequence:
                format: uint64
                title: |-
                    upgrade sequence indicates the latest upgrade attempt performed by this channel
                    the value of 0 indicates the channel has never been upgraded
                type: string
            version:
                title: opaque channel version, which is agreed upon during the handshake
                type: string
        type: object
    ibc.core.channel.v1.MsgAcknowledgement:
        properties:
            acknowledgement:
                format: byte
                type: string
            packet:
                $ref: '#/definitions/ibc.core.channel.v1.Packet'
            proof_acked:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            signer:
                type: string
        title: MsgAcknowledgement receives incoming IBC acknowledgement
        type: object
    ibc.core.channel.v1.MsgAcknowledgementResponse:
        description: MsgAcknowledgementResponse defines the Msg/Acknowledgement response type.
        properties:
            result:
                $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
        type: object
    ibc.core.channel.v1.MsgChannelCloseConfirm:
        description: |-
            MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B
            to acknowledge the change of channel state to CLOSED on Chain A.
        properties:
            channel_id:
                type: string
            counterparty_upgrade_sequence:
                format: uint64
                type: string
            port_id:
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_init:
                format: byte
                type: string
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelCloseConfirmResponse:
        description: |-
            MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm response
            type.
        type: object
    ibc.core.channel.v1.MsgChannelCloseInit:
        description: |-
            MsgChannelCloseInit defines a msg sent by a Relayer to Chain A
            to close a channel with Chain B.
        properties:
            channel_id:
                type: string
            port_id:
                type: string
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelCloseInitResponse:
        description: MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit response type.
        type: object
    ibc.core.channel.v1.MsgChannelOpenAck:
        description: |-
            MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge
            the change of channel state to TRYOPEN on Chain B.
            WARNING: a channel upgrade MUST NOT initialize an upgrade for this channel
            in the same block as executing this message otherwise the counterparty will
            be incapable of opening.
        properties:
            channel_id:
                type: string
            counterparty_channel_id:
                type: string
            counterparty_version:
                type: string
            port_id:
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_try:
                format: byte
                type: string
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelOpenAckResponse:
        description: MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck response type.
        type: object
    ibc.core.channel.v1.MsgChannelOpenConfirm:
        description: |-
            MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to
            acknowledge the change of channel state to OPEN on Chain A.
        properties:
            channel_id:
                type: string
            port_id:
                type: string
            proof_ack:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelOpenConfirmResponse:
        description: |-
            MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm response
            type.
        type: object
    ibc.core.channel.v1.MsgChannelOpenInit:
        description: |-
            MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It
            is called by a relayer on Chain A.
        properties:
            channel:
                $ref: '#/definitions/ibc.core.channel.v1.Channel'
            port_id:
                type: string
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelOpenInitResponse:
        description: MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit response type.
        properties:
            channel_id:
                type: string
            version:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelOpenTry:
        description: |-
            MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel
            on Chain B. The version field within the Channel field has been deprecated. Its
            value will be ignored by core IBC.
        properties:
            channel:
                $ref: '#/definitions/ibc.core.channel.v1.Channel'
                description: 'NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC.'
            counterparty_version:
                type: string
            port_id:
                type: string
            previous_channel_id:
                description: 'Deprecated: this field is unused. Crossing hello''s are no longer supported in core IBC.'
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_init:
                format: byte
                type: string
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelOpenTryResponse:
        description: MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry response type.
        properties:
            channel_id:
                type: string
            version:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeAck:
        properties:
            channel_id:
                type: string
            counterparty_upgrade:
                $ref: '#/definitions/ibc.core.channel.v1.Upgrade'
            port_id:
                type: string
            proof_channel:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_upgrade:
                format: byte
                type: string
            signer:
                type: string
        title: MsgChannelUpgradeAck defines the request type for the ChannelUpgradeAck rpc
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeAckResponse:
        properties:
            result:
                $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
        title: MsgChannelUpgradeAckResponse defines MsgChannelUpgradeAck response type
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeCancel:
        properties:
            channel_id:
                type: string
            error_receipt:
                $ref: '#/definitions/ibc.core.channel.v1.ErrorReceipt'
            port_id:
                type: string
            proof_error_receipt:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            signer:
                type: string
        title: MsgChannelUpgradeCancel defines the request type for the ChannelUpgradeCancel rpc
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeCancelResponse:
        title: MsgChannelUpgradeCancelResponse defines the MsgChannelUpgradeCancel response type
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeConfirm:
        properties:
            channel_id:
                type: string
            counterparty_channel_state:
                $ref: '#/definitions/ibc.core.channel.v1.State'
            counterparty_upgrade:
                $ref: '#/definitions/ibc.core.channel.v1.Upgrade'
            port_id:
                type: string
            proof_channel:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_upgrade:
                format: byte
                type: string
            signer:
                type: string
        title: MsgChannelUpgradeConfirm defines the request type for the ChannelUpgradeConfirm rpc
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse:
        properties:
            result:
                $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
        title: MsgChannelUpgradeConfirmResponse defines MsgChannelUpgradeConfirm response type
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeInit:
        description: |-
            MsgChannelUpgradeInit defines the request type for the ChannelUpgradeInit rpc
            WARNING: Initializing a channel upgrade in the same block as opening the channel
            may result in the counterparty being incapable of opening.
        properties:
            channel_id:
                type: string
            fields:
                $ref: '#/definitions/ibc.core.channel.v1.UpgradeFields'
            port_id:
                type: string
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeInitResponse:
        properties:
            upgrade:
                $ref: '#/definitions/ibc.core.channel.v1.Upgrade'
            upgrade_sequence:
                format: uint64
                type: string
        title: MsgChannelUpgradeInitResponse defines the MsgChannelUpgradeInit response type
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeOpen:
        properties:
            channel_id:
                type: string
            counterparty_channel_state:
                $ref: '#/definitions/ibc.core.channel.v1.State'
            counterparty_upgrade_sequence:
                format: uint64
                type: string
            port_id:
                type: string
            proof_channel:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            signer:
                type: string
        title: MsgChannelUpgradeOpen defines the request type for the ChannelUpgradeOpen rpc
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeOpenResponse:
        title: MsgChannelUpgradeOpenResponse defines the MsgChannelUpgradeOpen response type
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeTimeout:
        properties:
            channel_id:
                type: string
            counterparty_channel:
                $ref: '#/definitions/ibc.core.channel.v1.Channel'
            port_id:
                type: string
            proof_channel:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            signer:
                type: string
        title: MsgChannelUpgradeTimeout defines the request type for the ChannelUpgradeTimeout rpc
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse:
        title: MsgChannelUpgradeTimeoutRepsonse defines the MsgChannelUpgradeTimeout response type
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeTry:
        properties:
            channel_id:
                type: string
            counterparty_upgrade_fields:
                $ref: '#/definitions/ibc.core.channel.v1.UpgradeFields'
            counterparty_upgrade_sequence:
                format: uint64
                type: string
            port_id:
                type: string
            proof_channel:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_upgrade:
                format: byte
                type: string
            proposed_upgrade_connection_hops:
                items:
                    type: string
                type: array
            signer:
                type: string
        title: MsgChannelUpgradeTry defines the request type for the ChannelUpgradeTry rpc
        type: object
    ibc.core.channel.v1.MsgChannelUpgradeTryResponse:
        properties:
            result:
                $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
            upgrade:
                $ref: '#/definitions/ibc.core.channel.v1.Upgrade'
            upgrade_sequence:
                format: uint64
                type: string
        title: MsgChannelUpgradeTryResponse defines the MsgChannelUpgradeTry response type
        type: object
    ibc.core.channel.v1.MsgPruneAcknowledgements:
        description: MsgPruneAcknowledgements defines the request type for the PruneAcknowledgements rpc.
        properties:
            channel_id:
                type: string
            limit:
                format: uint64
                type: string
            port_id:
                type: string
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgPruneAcknowledgementsResponse:
        description: MsgPruneAcknowledgementsResponse defines the response type for the PruneAcknowledgements rpc.
        properties:
            total_pruned_sequences:
                description: Number of sequences pruned (includes both packet acknowledgements and packet receipts where appropriate).
                format: uint64
                type: string
            total_remaining_sequences:
                description: Number of sequences left after pruning.
                format: uint64
                type: string
        type: object
    ibc.core.channel.v1.MsgRecvPacket:
        properties:
            packet:
                $ref: '#/definitions/ibc.core.channel.v1.Packet'
            proof_commitment:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            signer:
                type: string
        title: MsgRecvPacket receives incoming IBC packet
        type: object
    ibc.core.channel.v1.MsgRecvPacketResponse:
        description: MsgRecvPacketResponse defines the Msg/RecvPacket response type.
        properties:
            result:
                $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
        type: object
    ibc.core.channel.v1.MsgTimeout:
        properties:
            next_sequence_recv:
                format: uint64
                type: string
            packet:
                $ref: '#/definitions/ibc.core.channel.v1.Packet'
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_unreceived:
                format: byte
                type: string
            signer:
                type: string
        title: MsgTimeout receives timed-out packet
        type: object
    ibc.core.channel.v1.MsgTimeoutOnClose:
        description: MsgTimeoutOnClose timed-out packet upon counterparty channel closure.
        properties:
            counterparty_upgrade_sequence:
                format: uint64
                type: string
            next_sequence_recv:
                format: uint64
                type: string
            packet:
                $ref: '#/definitions/ibc.core.channel.v1.Packet'
            proof_close:
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_unreceived:
                format: byte
                type: string
            signer:
                type: string
        type: object
    ibc.core.channel.v1.MsgTimeoutOnCloseResponse:
        description: MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose response type.
        properties:
            result:
                $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
        type: object
    ibc.core.channel.v1.MsgTimeoutResponse:
        description: MsgTimeoutResponse defines the Msg/Timeout response type.
        properties:
            result:
                $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
        type: object
    ibc.core.channel.v1.MsgUpdateParams:
        description: MsgUpdateParams is the MsgUpdateParams request type.
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/ibc.core.channel.v1.Params'
                description: |-
                    params defines the channel parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    ibc.core.channel.v1.MsgUpdateParamsResponse:
        description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
        type: object
    ibc.core.channel.v1.Order:
        default: ORDER_NONE_UNSPECIFIED
        description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
        enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
        title: Order defines if a channel is ORDERED or UNORDERED
        type: string
    ibc.core.channel.v1.Packet:
        properties:
            data:
                format: byte
                title: actual opaque bytes transferred directly to the application module
                type: string
            destination_channel:
                description: identifies the channel end on the receiving chain.
                type: string
            destination_port:
                description: identifies the port on the receiving chain.
                type: string
            sequence:
                description: |-
                    number corresponds to the order of sends and receives, where a Packet
                    with an earlier sequence number must be sent and received before a Packet
                    with a later sequence number.
                format: uint64
                type: string
            source_channel:
                description: identifies the channel end on the sending chain.
                type: string
            source_port:
                description: identifies the port on the sending chain.
                type: string
            timeout_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: block height after which the packet times out
            timeout_timestamp:
                format: uint64
                title: block timestamp (in nanoseconds) after which the packet times out
                type: string
        title: Packet defines a type that carries data across different chains through IBC
        type: object
    ibc.core.channel.v1.PacketId:
        properties:
            channel_id:
                title: channel unique identifier
                type: string
            port_id:
                title: channel port identifier
                type: string
            sequence:
                format: uint64
                title: packet sequence
                type: string
        title: |-
            PacketId is an identifer for a unique Packet
            Source chains refer to packets by source port/channel
            Destination chains refer to packets by destination port/channel
        type: object
    ibc.core.channel.v1.PacketState:
        description: |-
            PacketState defines the generic type necessary to retrieve and store
            packet commitments, acknowledgements, and receipts.
            Caller is responsible for knowing the context necessary to interpret this
            state as a commitment, acknowledgement, or a receipt.
        properties:
            channel_id:
                description: channel unique identifier.
                type: string
            data:
                description: embedded data that represents packet state.
                format: byte
                type: string
            port_id:
                description: channel port identifier.
                type: string
            sequence:
                description: packet sequence.
                format: uint64
                type: string
        type: object
    ibc.core.channel.v1.Params:
        description: Params defines the set of IBC channel parameters.
        properties:
            upgrade_timeout:
                $ref: '#/definitions/ibc.core.channel.v1.Timeout'
                description: the relative timeout after which channel upgrades will time out.
        type: object
    ibc.core.channel.v1.QueryChannelClientStateResponse:
        properties:
            identified_client_state:
                $ref: '#/definitions/ibc.core.client.v1.IdentifiedClientState'
                title: client state associated with the channel
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QueryChannelClientStateResponse is the Response type for the
            Query/QueryChannelClientState RPC method
        type: object
    ibc.core.channel.v1.QueryChannelConsensusStateResponse:
        properties:
            client_id:
                title: client ID associated with the consensus state
                type: string
            consensus_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: consensus state associated with the channel
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QueryChannelClientStateResponse is the Response type for the
            Query/QueryChannelClientState RPC method
        type: object
    ibc.core.channel.v1.QueryChannelParamsResponse:
        description: QueryChannelParamsResponse is the response type for the Query/ChannelParams RPC method.
        properties:
            params:
                $ref: '#/definitions/ibc.core.channel.v1.Params'
                description: params defines the parameters of the module.
        type: object
    ibc.core.channel.v1.QueryChannelResponse:
        description: |-
            QueryChannelResponse is the response type for the Query/Channel RPC method.
            Besides the Channel end, it includes a proof and the height from which the
            proof was retrieved.
        properties:
            channel:
                $ref: '#/definitions/ibc.core.channel.v1.Channel'
                title: channel associated with the request identifiers
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        type: object
    ibc.core.channel.v1.QueryChannelsResponse:
        description: QueryChannelsResponse is the response type for the Query/Channels RPC method.
        properties:
            channels:
                description: list of stored channels of the chain.
                items:
                    $ref: '#/definitions/ibc.core.channel.v1.IdentifiedChannel'
                    type: object
                type: array
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: query block height
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                title: pagination response
        type: object
    ibc.core.channel.v1.QueryConnectionChannelsResponse:
        properties:
            channels:
                description: list of channels associated with a connection.
                items:
                    $ref: '#/definitions/ibc.core.channel.v1.IdentifiedChannel'
                    type: object
                type: array
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: query block height
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                title: pagination response
        title: |-
            QueryConnectionChannelsResponse is the Response type for the
            Query/QueryConnectionChannels RPC method
        type: object
    ibc.core.channel.v1.QueryNextSequenceReceiveResponse:
        properties:
            next_sequence_receive:
                format: uint64
                title: next sequence receive number
                type: string
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QuerySequenceResponse is the response type for the
            Query/QueryNextSequenceReceiveResponse RPC method
        type: object
    ibc.core.channel.v1.QueryNextSequenceSendResponse:
        properties:
            next_sequence_send:
                format: uint64
                title: next sequence send number
                type: string
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QueryNextSequenceSendResponse is the request type for the
            Query/QueryNextSequenceSend RPC method
        type: object
    ibc.core.channel.v1.QueryPacketAcknowledgementResponse:
        properties:
            acknowledgement:
                format: byte
                title: packet associated with the request fields
                type: string
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QueryPacketAcknowledgementResponse defines the client query response for a
            packet which also includes a proof and the height from which the
            proof was retrieved
        type: object
    ibc.core.channel.v1.QueryPacketAcknowledgementsResponse:
        properties:
            acknowledgements:
                items:
                    $ref: '#/definitions/ibc.core.channel.v1.PacketState'
                    type: object
                type: array
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: query block height
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                title: pagination response
        title: |-
            QueryPacketAcknowledgemetsResponse is the request type for the
            Query/QueryPacketAcknowledgements RPC method
        type: object
    ibc.core.channel.v1.QueryPacketCommitmentResponse:
        properties:
            commitment:
                format: byte
                title: packet associated with the request fields
                type: string
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QueryPacketCommitmentResponse defines the client query response for a packet
            which also includes a proof and the height from which the proof was
            retrieved
        type: object
    ibc.core.channel.v1.QueryPacketCommitmentsResponse:
        properties:
            commitments:
                items:
                    $ref: '#/definitions/ibc.core.channel.v1.PacketState'
                    type: object
                type: array
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: query block height
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                title: pagination response
        title: |-
            QueryPacketCommitmentsResponse is the request type for the
            Query/QueryPacketCommitments RPC method
        type: object
    ibc.core.channel.v1.QueryPacketReceiptResponse:
        properties:
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
            received:
                title: success flag for if receipt exists
                type: boolean
        title: |-
            QueryPacketReceiptResponse defines the client query response for a packet
            receipt which also includes a proof, and the height from which the proof was
            retrieved
        type: object
    ibc.core.channel.v1.QueryUnreceivedAcksResponse:
        properties:
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: query block height
            sequences:
                items:
                    format: uint64
                    type: string
                title: list of unreceived acknowledgement sequences
                type: array
        title: |-
            QueryUnreceivedAcksResponse is the response type for the
            Query/UnreceivedAcks RPC method
        type: object
    ibc.core.channel.v1.QueryUnreceivedPacketsResponse:
        properties:
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: query block height
            sequences:
                items:
                    format: uint64
                    type: string
                title: list of unreceived packet sequences
                type: array
        title: |-
            QueryUnreceivedPacketsResponse is the response type for the
            Query/UnreceivedPacketCommitments RPC method
        type: object
    ibc.core.channel.v1.QueryUpgradeErrorResponse:
        properties:
            error_receipt:
                $ref: '#/definitions/ibc.core.channel.v1.ErrorReceipt'
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: QueryUpgradeErrorResponse is the response type for the Query/QueryUpgradeError RPC method
        type: object
    ibc.core.channel.v1.QueryUpgradeResponse:
        properties:
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
            upgrade:
                $ref: '#/definitions/ibc.core.channel.v1.Upgrade'
        title: QueryUpgradeResponse is the response type for the QueryUpgradeResponse RPC method
        type: object
    ibc.core.channel.v1.ResponseResultType:
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: |-
            - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
             - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
             - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
             - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully
        enum:
            - RESPONSE_RESULT_TYPE_UNSPECIFIED
            - RESPONSE_RESULT_TYPE_NOOP
            - RESPONSE_RESULT_TYPE_SUCCESS
            - RESPONSE_RESULT_TYPE_FAILURE
        title: ResponseResultType defines the possible outcomes of the execution of a message
        type: string
    ibc.core.channel.v1.State:
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: |-
            State defines if a channel is in one of the following states:
            CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
             - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
             - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
        enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            - STATE_CLOSED
            - STATE_FLUSHING
            - STATE_FLUSHCOMPLETE
        type: string
    ibc.core.channel.v1.Timeout:
        description: |-
            Timeout defines an execution deadline structure for 04-channel handlers.
            This includes packet lifecycle handlers as well as the upgrade handshake handlers.
            A valid Timeout contains either one or both of a timestamp and block height (sequence).
        properties:
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: block height after which the packet or upgrade times out
            timestamp:
                format: uint64
                title: block timestamp (in nanoseconds) after which the packet or upgrade times out
                type: string
        type: object
    ibc.core.channel.v1.Upgrade:
        description: |-
            Upgrade is a verifiable type which contains the relevant information
            for an attempted upgrade. It provides the proposed changes to the channel
            end, the timeout for this upgrade attempt and the next packet sequence
            which allows the counterparty to efficiently know the highest sequence it has received.
            The next sequence send is used for pruning and upgrading from unordered to ordered channels.
        properties:
            fields:
                $ref: '#/definitions/ibc.core.channel.v1.UpgradeFields'
            next_sequence_send:
                format: uint64
                type: string
            timeout:
                $ref: '#/definitions/ibc.core.channel.v1.Timeout'
        type: object
    ibc.core.channel.v1.UpgradeFields:
        description: |-
            UpgradeFields are the fields in a channel end which may be changed
            during a channel upgrade.
        properties:
            connection_hops:
                items:
                    type: string
                type: array
            ordering:
                $ref: '#/definitions/ibc.core.channel.v1.Order'
            version:
                type: string
        type: object
    ibc.core.client.v1.ConsensusStateWithHeight:
        description: |-
            ConsensusStateWithHeight defines a consensus state with an additional height
            field.
        properties:
            consensus_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: consensus state
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: consensus state height
        type: object
    ibc.core.client.v1.Height:
        description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        properties:
            revision_height:
                format: uint64
                title: the height within the given revision
                type: string
            revision_number:
                format: uint64
                title: the revision that the client is currently on
                type: string
        title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
        type: object
    ibc.core.client.v1.IdentifiedClientState:
        description: |-
            IdentifiedClientState defines a client state with an additional client
            identifier field.
        properties:
            client_id:
                title: client identifier
                type: string
            client_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: client state
        type: object
    ibc.core.client.v1.MsgCreateClient:
        properties:
            client_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: light client state
            consensus_state:
                $ref: '#/definitions/google.protobuf.Any'
                description: |-
                    consensus state associated with the client that corresponds to a given
                    height.
            signer:
                title: signer address
                type: string
        title: MsgCreateClient defines a message to create an IBC client
        type: object
    ibc.core.client.v1.MsgCreateClientResponse:
        description: MsgCreateClientResponse defines the Msg/CreateClient response type.
        type: object
    ibc.core.client.v1.MsgIBCSoftwareUpgrade:
        properties:
            plan:
                $ref: '#/definitions/cosmos.upgrade.v1beta1.Plan'
            signer:
                title: signer address
                type: string
            upgraded_client_state:
                $ref: '#/definitions/google.protobuf.Any'
                description: |-
                    An UpgradedClientState must be provided to perform an IBC breaking upgrade.
                    This will make the chain commit to the correct upgraded (self) client state
                    before the upgrade occurs, so that connecting chains can verify that the
                    new upgraded client is valid by verifying a proof on the previous version
                    of the chain. This will allow IBC connections to persist smoothly across
                    planned chain upgrades. Correspondingly, the UpgradedClientState field has been
                    deprecated in the Cosmos SDK to allow for this logic to exist solely in
                    the 02-client module.
        title: MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade of an IBC client using a v1 governance proposal
        type: object
    ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse:
        description: MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade response type.
        type: object
    ibc.core.client.v1.MsgRecoverClient:
        description: MsgRecoverClient defines the message used to recover a frozen or expired client.
        properties:
            signer:
                title: signer address
                type: string
            subject_client_id:
                title: the client identifier for the client to be updated if the proposal passes
                type: string
            substitute_client_id:
                title: |-
                    the substitute client identifier for the client which will replace the subject
                    client
                type: string
        type: object
    ibc.core.client.v1.MsgRecoverClientResponse:
        description: MsgRecoverClientResponse defines the Msg/RecoverClient response type.
        type: object
    ibc.core.client.v1.MsgSubmitMisbehaviour:
        description: |-
            MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for
            light client misbehaviour.
            This message has been deprecated. Use MsgUpdateClient instead.
        properties:
            client_id:
                title: client unique identifier
                type: string
            misbehaviour:
                $ref: '#/definitions/google.protobuf.Any'
                title: misbehaviour used for freezing the light client
            signer:
                title: signer address
                type: string
        type: object
    ibc.core.client.v1.MsgSubmitMisbehaviourResponse:
        description: |-
            MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour response
            type.
        type: object
    ibc.core.client.v1.MsgUpdateClient:
        description: |-
            MsgUpdateClient defines an sdk.Msg to update a IBC client state using
            the given client message.
        properties:
            client_id:
                title: client unique identifier
                type: string
            client_message:
                $ref: '#/definitions/google.protobuf.Any'
                title: client message to update the light client
            signer:
                title: signer address
                type: string
        type: object
    ibc.core.client.v1.MsgUpdateClientResponse:
        description: MsgUpdateClientResponse defines the Msg/UpdateClient response type.
        type: object
    ibc.core.client.v1.MsgUpdateParams:
        description: MsgUpdateParams defines the sdk.Msg type to update the client parameters.
        properties:
            params:
                $ref: '#/definitions/ibc.core.client.v1.Params'
                description: |-
                    params defines the client parameters to update.

                    NOTE: All parameters must be supplied.
            signer:
                title: signer address
                type: string
        type: object
    ibc.core.client.v1.MsgUpdateParamsResponse:
        description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
        type: object
    ibc.core.client.v1.MsgUpgradeClient:
        properties:
            client_id:
                title: client unique identifier
                type: string
            client_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: upgraded client state
            consensus_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: |-
                    upgraded consensus state, only contains enough information to serve as a
                    basis of trust in update logic
            proof_upgrade_client:
                format: byte
                title: proof that old chain committed to new client
                type: string
            proof_upgrade_consensus_state:
                format: byte
                title: proof that old chain committed to new consensus state
                type: string
            signer:
                title: signer address
                type: string
        title: |-
            MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client
            state
        type: object
    ibc.core.client.v1.MsgUpgradeClientResponse:
        description: MsgUpgradeClientResponse defines the Msg/UpgradeClient response type.
        type: object
    ibc.core.client.v1.Params:
        description: Params defines the set of IBC light client parameters.
        properties:
            allowed_clients:
                description: |-
                    allowed_clients defines the list of allowed client state types which can be created
                    and interacted with. If a client type is removed from the allowed clients list, usage
                    of this client will be disabled until it is added again to the list.
                items:
                    type: string
                type: array
        type: object
    ibc.core.client.v1.QueryClientParamsResponse:
        description: |-
            QueryClientParamsResponse is the response type for the Query/ClientParams RPC
            method.
        properties:
            params:
                $ref: '#/definitions/ibc.core.client.v1.Params'
                description: params defines the parameters of the module.
        type: object
    ibc.core.client.v1.QueryClientStateResponse:
        description: |-
            QueryClientStateResponse is the response type for the Query/ClientState RPC
            method. Besides the client state, it includes a proof and the height from
            which the proof was retrieved.
        properties:
            client_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: client state associated with the request identifier
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        type: object
    ibc.core.client.v1.QueryClientStatesResponse:
        description: |-
            QueryClientStatesResponse is the response type for the Query/ClientStates RPC
            method.
        properties:
            client_states:
                description: list of stored ClientStates of the chain.
                items:
                    $ref: '#/definitions/ibc.core.client.v1.IdentifiedClientState'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                title: pagination response
        type: object
    ibc.core.client.v1.QueryClientStatusResponse:
        description: |-
            QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
            method. It returns the current status of the IBC client.
        properties:
            status:
                type: string
        type: object
    ibc.core.client.v1.QueryConsensusStateHeightsResponse:
        properties:
            consensus_state_heights:
                items:
                    $ref: '#/definitions/ibc.core.client.v1.Height'
                    type: object
                title: consensus state heights
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                title: pagination response
        title: |-
            QueryConsensusStateHeightsResponse is the response type for the
            Query/ConsensusStateHeights RPC method
        type: object
    ibc.core.client.v1.QueryConsensusStateResponse:
        properties:
            consensus_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: consensus state associated with the client identifier at the given height
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QueryConsensusStateResponse is the response type for the Query/ConsensusState
            RPC method
        type: object
    ibc.core.client.v1.QueryConsensusStatesResponse:
        properties:
            consensus_states:
                items:
                    $ref: '#/definitions/ibc.core.client.v1.ConsensusStateWithHeight'
                    type: object
                title: consensus states associated with the identifier
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                title: pagination response
        title: |-
            QueryConsensusStatesResponse is the response type for the
            Query/ConsensusStates RPC method
        type: object
    ibc.core.client.v1.QueryUpgradedClientStateResponse:
        description: |-
            QueryUpgradedClientStateResponse is the response type for the
            Query/UpgradedClientState RPC method.
        properties:
            upgraded_client_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: client state associated with the request identifier
        type: object
    ibc.core.client.v1.QueryUpgradedConsensusStateResponse:
        description: |-
            QueryUpgradedConsensusStateResponse is the response type for the
            Query/UpgradedConsensusState RPC method.
        properties:
            upgraded_consensus_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: Consensus state associated with the request identifier
        type: object
    ibc.core.client.v1.QueryVerifyMembershipRequest:
        properties:
            block_delay:
                format: uint64
                title: optional block delay
                type: string
            client_id:
                description: client unique identifier.
                type: string
            merkle_path:
                $ref: '#/definitions/ibc.core.commitment.v1.MerklePath'
                description: the commitment key path.
            proof:
                description: the proof to be verified by the client.
                format: byte
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                description: the height of the commitment root at which the proof is verified.
            time_delay:
                format: uint64
                title: optional time delay
                type: string
            value:
                description: the value which is proven.
                format: byte
                type: string
        title: QueryVerifyMembershipRequest is the request type for the Query/VerifyMembership RPC method
        type: object
    ibc.core.client.v1.QueryVerifyMembershipResponse:
        properties:
            success:
                description: boolean indicating success or failure of proof verification.
                type: boolean
        title: QueryVerifyMembershipResponse is the response type for the Query/VerifyMembership RPC method
        type: object
    ibc.core.commitment.v1.MerklePath:
        properties:
            key_path:
                items:
                    type: string
                type: array
        title: |-
            MerklePath is the path used to verify commitment proofs, which can be an
            arbitrary structured object (defined by a commitment type).
            MerklePath is represented from root-to-leaf
        type: object
    ibc.core.commitment.v1.MerklePrefix:
        properties:
            key_prefix:
                format: byte
                type: string
        title: |-
            MerklePrefix is merkle path prefixed to the key.
            The constructed key from the Path and the key will be append(Path.KeyPath,
            append(Path.KeyPrefix, key...))
        type: object
    ibc.core.connection.v1.ConnectionEnd:
        description: |-
            ConnectionEnd defines a stateful object on a chain connected to another
            separate one.
            NOTE: there must only be 2 defined ConnectionEnds to establish
            a connection between two chains.
        properties:
            client_id:
                description: client associated with this connection.
                type: string
            counterparty:
                $ref: '#/definitions/ibc.core.connection.v1.Counterparty'
                description: counterparty chain associated with this connection.
            delay_period:
                description: |-
                    delay period that must pass before a consensus state can be used for
                    packet-verification NOTE: delay period logic is only implemented by some
                    clients.
                format: uint64
                type: string
            state:
                $ref: '#/definitions/ibc.core.connection.v1.State'
                description: current state of the connection end.
            versions:
                description: |-
                    IBC version which can be utilised to determine encodings or protocols for
                    channels or packets utilising this connection.
                items:
                    $ref: '#/definitions/ibc.core.connection.v1.Version'
                    type: object
                type: array
        type: object
    ibc.core.connection.v1.Counterparty:
        description: Counterparty defines the counterparty chain associated with a connection end.
        properties:
            client_id:
                description: |-
                    identifies the client on the counterparty chain associated with a given
                    connection.
                type: string
            connection_id:
                description: |-
                    identifies the connection end on the counterparty chain associated with a
                    given connection.
                type: string
            prefix:
                $ref: '#/definitions/ibc.core.commitment.v1.MerklePrefix'
                description: commitment merkle prefix of the counterparty chain.
        type: object
    ibc.core.connection.v1.IdentifiedConnection:
        description: |-
            IdentifiedConnection defines a connection with additional connection
            identifier field.
        properties:
            client_id:
                description: client associated with this connection.
                type: string
            counterparty:
                $ref: '#/definitions/ibc.core.connection.v1.Counterparty'
                description: counterparty chain associated with this connection.
            delay_period:
                description: delay period associated with this connection.
                format: uint64
                type: string
            id:
                description: connection identifier.
                type: string
            state:
                $ref: '#/definitions/ibc.core.connection.v1.State'
                description: current state of the connection end.
            versions:
                items:
                    $ref: '#/definitions/ibc.core.connection.v1.Version'
                    type: object
                title: |-
                    IBC version which can be utilised to determine encodings or protocols for
                    channels or packets utilising this connection
                type: array
        type: object
    ibc.core.connection.v1.MsgConnectionOpenAck:
        description: |-
            MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
            acknowledge the change of connection state to TRYOPEN on Chain B.
        properties:
            client_state:
                $ref: '#/definitions/google.protobuf.Any'
            connection_id:
                type: string
            consensus_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            counterparty_connection_id:
                type: string
            host_consensus_state_proof:
                format: byte
                title: optional proof data for host state machines that are unable to introspect their own consensus state
                type: string
            proof_client:
                format: byte
                title: proof of client state included in message
                type: string
            proof_consensus:
                format: byte
                title: proof of client consensus state
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_try:
                format: byte
                title: |-
                    proof of the initialization the connection on Chain B: `UNITIALIZED ->
                    TRYOPEN`
                type: string
            signer:
                type: string
            version:
                $ref: '#/definitions/ibc.core.connection.v1.Version'
        type: object
    ibc.core.connection.v1.MsgConnectionOpenAckResponse:
        description: MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response type.
        type: object
    ibc.core.connection.v1.MsgConnectionOpenConfirm:
        description: |-
            MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
            acknowledge the change of connection state to OPEN on Chain A.
        properties:
            connection_id:
                type: string
            proof_ack:
                format: byte
                title: 'proof for the change of the connection state on Chain A: `INIT -> OPEN`'
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            signer:
                type: string
        type: object
    ibc.core.connection.v1.MsgConnectionOpenConfirmResponse:
        description: |-
            MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm
            response type.
        type: object
    ibc.core.connection.v1.MsgConnectionOpenInit:
        description: |-
            MsgConnectionOpenInit defines the msg sent by an account on Chain A to
            initialize a connection with Chain B.
        properties:
            client_id:
                type: string
            counterparty:
                $ref: '#/definitions/ibc.core.connection.v1.Counterparty'
            delay_period:
                format: uint64
                type: string
            signer:
                type: string
            version:
                $ref: '#/definitions/ibc.core.connection.v1.Version'
        type: object
    ibc.core.connection.v1.MsgConnectionOpenInitResponse:
        description: |-
            MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response
            type.
        type: object
    ibc.core.connection.v1.MsgConnectionOpenTry:
        description: |-
            MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
            connection on Chain B.
        properties:
            client_id:
                type: string
            client_state:
                $ref: '#/definitions/google.protobuf.Any'
            consensus_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            counterparty:
                $ref: '#/definitions/ibc.core.connection.v1.Counterparty'
            counterparty_versions:
                items:
                    $ref: '#/definitions/ibc.core.connection.v1.Version'
                    type: object
                type: array
            delay_period:
                format: uint64
                type: string
            host_consensus_state_proof:
                format: byte
                title: optional proof data for host state machines that are unable to introspect their own consensus state
                type: string
            previous_connection_id:
                description: 'Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC.'
                type: string
            proof_client:
                format: byte
                title: proof of client state included in message
                type: string
            proof_consensus:
                format: byte
                title: proof of client consensus state
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
            proof_init:
                format: byte
                title: |-
                    proof of the initialization the connection on Chain A: `UNITIALIZED ->
                    INIT`
                type: string
            signer:
                type: string
        type: object
    ibc.core.connection.v1.MsgConnectionOpenTryResponse:
        description: MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response type.
        type: object
    ibc.core.connection.v1.MsgUpdateParams:
        description: MsgUpdateParams defines the sdk.Msg type to update the connection parameters.
        properties:
            params:
                $ref: '#/definitions/ibc.core.connection.v1.Params'
                description: |-
                    params defines the connection parameters to update.

                    NOTE: All parameters must be supplied.
            signer:
                title: signer address
                type: string
        type: object
    ibc.core.connection.v1.MsgUpdateParamsResponse:
        description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
        type: object
    ibc.core.connection.v1.Params:
        description: Params defines the set of Connection parameters.
        properties:
            max_expected_time_per_block:
                description: |-
                    maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
                    largest amount of time that the chain might reasonably take to produce the next block under normal operating
                    conditions. A safe choice is 3-5x the expected time per block.
                format: uint64
                type: string
        type: object
    ibc.core.connection.v1.QueryClientConnectionsResponse:
        properties:
            connection_paths:
                description: slice of all the connection paths associated with a client.
                items:
                    type: string
                type: array
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was generated
        title: |-
            QueryClientConnectionsResponse is the response type for the
            Query/ClientConnections RPC method
        type: object
    ibc.core.connection.v1.QueryConnectionClientStateResponse:
        properties:
            identified_client_state:
                $ref: '#/definitions/ibc.core.client.v1.IdentifiedClientState'
                title: client state associated with the channel
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QueryConnectionClientStateResponse is the response type for the
            Query/ConnectionClientState RPC method
        type: object
    ibc.core.connection.v1.QueryConnectionConsensusStateResponse:
        properties:
            client_id:
                title: client ID associated with the consensus state
                type: string
            consensus_state:
                $ref: '#/definitions/google.protobuf.Any'
                title: consensus state associated with the channel
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        title: |-
            QueryConnectionConsensusStateResponse is the response type for the
            Query/ConnectionConsensusState RPC method
        type: object
    ibc.core.connection.v1.QueryConnectionParamsResponse:
        description: QueryConnectionParamsResponse is the response type for the Query/ConnectionParams RPC method.
        properties:
            params:
                $ref: '#/definitions/ibc.core.connection.v1.Params'
                description: params defines the parameters of the module.
        type: object
    ibc.core.connection.v1.QueryConnectionResponse:
        description: |-
            QueryConnectionResponse is the response type for the Query/Connection RPC
            method. Besides the connection end, it includes a proof and the height from
            which the proof was retrieved.
        properties:
            connection:
                $ref: '#/definitions/ibc.core.connection.v1.ConnectionEnd'
                title: connection associated with the request identifier
            proof:
                format: byte
                title: merkle proof of existence
                type: string
            proof_height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: height at which the proof was retrieved
        type: object
    ibc.core.connection.v1.QueryConnectionsResponse:
        description: |-
            QueryConnectionsResponse is the response type for the Query/Connections RPC
            method.
        properties:
            connections:
                description: list of stored connections of the chain.
                items:
                    $ref: '#/definitions/ibc.core.connection.v1.IdentifiedConnection'
                    type: object
                type: array
            height:
                $ref: '#/definitions/ibc.core.client.v1.Height'
                title: query block height
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                title: pagination response
        type: object
    ibc.core.connection.v1.State:
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: |-
            State defines if a connection is in one of the following states:
            INIT, TRYOPEN, OPEN or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A connection end has just started the opening handshake.
             - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty
            chain.
             - STATE_OPEN: A connection end has completed the handshake.
        enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
        type: string
    ibc.core.connection.v1.Version:
        description: |-
            Version defines the versioning scheme used to negotiate the IBC verison in
            the connection handshake.
        properties:
            features:
                items:
                    type: string
                title: list of features compatible with the specified identifier
                type: array
            identifier:
                title: unique version identifier
                type: string
        type: object
    ibc.lightclients.wasm.v1.MsgMigrateContract:
        description: MsgMigrateContract defines the request type for the MigrateContract rpc.
        properties:
            checksum:
                format: byte
                title: checksum is the sha256 hash of the new wasm byte code for the contract
                type: string
            client_id:
                title: the client id of the contract
                type: string
            msg:
                format: byte
                title: the json encoded message to be passed to the contract on migration
                type: string
            signer:
                title: signer address
                type: string
        type: object
    ibc.lightclients.wasm.v1.MsgMigrateContractResponse:
        title: MsgMigrateContractResponse defines the response type for the MigrateContract rpc
        type: object
    ibc.lightclients.wasm.v1.MsgRemoveChecksum:
        description: MsgRemoveChecksum defines the request type for the MsgRemoveChecksum rpc.
        properties:
            checksum:
                format: byte
                title: checksum is the sha256 hash to be removed from the store
                type: string
            signer:
                title: signer address
                type: string
        type: object
    ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse:
        title: MsgStoreChecksumResponse defines the response type for the StoreCode rpc
        type: object
    ibc.lightclients.wasm.v1.MsgStoreCode:
        description: MsgStoreCode defines the request type for the StoreCode rpc.
        properties:
            signer:
                title: signer address
                type: string
            wasm_byte_code:
                format: byte
                title: wasm byte code of light client contract. It can be raw or gzip compressed
                type: string
        type: object
    ibc.lightclients.wasm.v1.MsgStoreCodeResponse:
        properties:
            checksum:
                format: byte
                title: checksum is the sha256 hash of the stored code
                type: string
        title: MsgStoreCodeResponse defines the response type for the StoreCode rpc
        type: object
    ibc.lightclients.wasm.v1.QueryChecksumsResponse:
        description: QueryChecksumsResponse is the response type for the Query/Checksums RPC method.
        properties:
            checksums:
                description: checksums is a list of the hex encoded checksums of all wasm codes stored.
                items:
                    type: string
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        type: object
    ibc.lightclients.wasm.v1.QueryCodeResponse:
        description: QueryCodeResponse is the response type for the Query/Code RPC method.
        properties:
            data:
                format: byte
                type: string
        type: object
    junction.rollup.Batch:
        properties:
            batchNo:
                format: uint64
                type: string
            daCommitment:
                type: string
            daHash:
                type: string
            daName:
                type: string
            daNamespace:
                type: string
            daPointer:
                type: string
            isFinalized:
                type: boolean
            merkleRootHash:
                type: string
            previousMerkleRootHash:
                type: string
            publicWitness:
                format: byte
                type: string
            rollupId:
                type: string
            submitter:
                type: string
            timestamp:
                title: da data for a batch
                type: string
            zkProof:
                format: byte
                title: prover data for a batch
                type: string
        type: object
    junction.rollup.Creator:
        properties:
            creator_address:
                type: string
            rollups:
                items:
                    $ref: '#/definitions/junction.rollup.RollupStake'
                    type: object
                type: array
        type: object
    junction.rollup.MsgInitProver:
        properties:
            creator:
                type: string
            proverEndpoint:
                type: string
            proverType:
                type: string
            proverVerificationKey:
                format: byte
                type: string
            rollupId:
                type: string
        type: object
    junction.rollup.MsgInitProverResponse:
        properties:
            status:
                type: boolean
        type: object
    junction.rollup.MsgInitRollup:
        properties:
            aclContractAddress:
                title: cosmos.base.v1beta1.Coin genesisSupply  = 8 [(gogoproto.nullable) = false];
                type: string
            ascContractAddress:
                type: string
            chainId:
                type: string
            creator:
                type: string
            daType:
                type: string
            denomName:
                type: string
            gatewayContractAddress:
                type: string
            keys:
                items:
                    type: string
                type: array
            kmsVerifierAddress:
                type: string
            moniker:
                type: string
            relayerASCAddress:
                type: string
            relayerGAddress:
                type: string
            supply:
                items:
                    format: uint64
                    type: string
                type: array
            tfheExecutorAddress:
                type: string
        type: object
    junction.rollup.MsgInitRollupResponse:
        properties:
            rollupId:
                type: string
            status:
                type: boolean
        type: object
    junction.rollup.MsgSubmitBatch:
        properties:
            batchNo:
                format: uint64
                type: string
            creator:
                type: string
            merkleRootHash:
                type: string
            previousMerkleRootHash:
                type: string
            publicWitness:
                format: byte
                type: string
            rollupId:
                type: string
            zkProof:
                format: byte
                type: string
        type: object
    junction.rollup.MsgSubmitBatchMetadata:
        properties:
            batchNo:
                format: uint64
                type: string
            creator:
                type: string
            daCommitment:
                type: string
            daHash:
                type: string
            daName:
                type: string
            daNamespace:
                type: string
            daPointer:
                type: string
            rollupId:
                type: string
        type: object
    junction.rollup.MsgSubmitBatchMetadataResponse:
        properties:
            status:
                type: boolean
        type: object
    junction.rollup.MsgSubmitBatchResponse:
        properties:
            status:
                type: boolean
        type: object
    junction.rollup.MsgUpdateParams:
        description: MsgUpdateParams is the Msg/UpdateParams request type.
        properties:
            authority:
                description: authority is the address that controls the module (defaults to x/gov unless overwritten).
                type: string
            params:
                $ref: '#/definitions/junction.rollup.Params'
                description: 'NOTE: All parameters must be supplied.'
        type: object
    junction.rollup.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.
        type: object
    junction.rollup.Params:
        description: Params defines the parameters for the module.
        type: object
    junction.rollup.QueryCheckMonikerAvailabilityResponse:
        properties:
            is_available:
                type: boolean
        type: object
    junction.rollup.QueryGetAllBatchesResponse:
        properties:
            batch:
                items:
                    $ref: '#/definitions/junction.rollup.Batch'
                    type: object
                type: array
            limit:
                format: uint64
                type: string
            offset:
                format: uint64
                type: string
            order:
                type: string
            total:
                format: uint64
                type: string
        type: object
    junction.rollup.QueryGetBatchInfoResponse:
        properties:
            batchInfo:
                $ref: '#/definitions/junction.rollup.Batch'
        type: object
    junction.rollup.QueryGetRollupByMonikerResponse:
        properties:
            rollupInfo:
                $ref: '#/definitions/junction.rollup.RollupMetadata'
        type: object
    junction.rollup.QueryGetRollupInfoResponse:
        properties:
            rollupInfo:
                $ref: '#/definitions/junction.rollup.RollupMetadata'
        type: object
    junction.rollup.QueryGetRollupStakedAmountResponse:
        properties:
            amountStaked:
                format: uint64
                type: string
            denom:
                type: string
        type: object
    junction.rollup.QueryGetRollupsResponse:
        properties:
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
            rollups:
                items:
                    $ref: '#/definitions/junction.rollup.RollupMetadata'
                    type: object
                type: array
        type: object
    junction.rollup.QueryGetStakeDetailsByUserResponse:
        properties:
            rollups:
                items:
                    $ref: '#/definitions/junction.rollup.RollupStake'
                    type: object
                type: array
            total_staked_amount:
                format: int64
                type: string
        type: object
    junction.rollup.QueryGetTotalStakedAmountResponse:
        properties:
            creators:
                items:
                    $ref: '#/definitions/junction.rollup.Creator'
                    type: object
                type: array
            total_staked_amount:
                format: int64
                type: string
        type: object
    junction.rollup.QueryParamsResponse:
        description: QueryParamsResponse is response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/junction.rollup.Params'
                description: params holds all the parameters of this module.
        type: object
    junction.rollup.RollupMetadata:
        properties:
            aclContractAddress:
                title: FHE data for a rollup
                type: string
            ascContractAddress:
                title: junction wasm contract address
                type: string
            chainId:
                type: string
            createdBy:
                type: string
            daLatestHash:
                type: string
            daType:
                title: da data for a rollup
                type: string
            denomName:
                type: string
            gatewayContractAddress:
                type: string
            keys:
                items:
                    type: string
                type: array
            kmsVerifierAddress:
                type: string
            moniker:
                title: rollup genesis data
                type: string
            proverEndpoint:
                type: string
            proverType:
                title: prover data for a rollup
                type: string
            proverVerificationKey:
                format: byte
                type: string
            relayerASCAddress:
                type: string
            relayerGAddress:
                title: relayer data
                type: string
            rollupId:
                type: string
            rollupLatestBatchNo:
                format: uint64
                type: string
            rollupLatestFinalizedBatchNo:
                format: uint64
                type: string
            supply:
                items:
                    format: uint64
                    type: string
                type: array
            tfheExecutorAddress:
                type: string
        type: object
    junction.rollup.RollupStake:
        properties:
            amount_staked:
                format: int64
                type: string
            denom:
                type: string
            rollup_id:
                type: string
        type: object
    junction.wasm.v1.AbsoluteTxPosition:
        description: |-
            AbsoluteTxPosition is a unique transaction position that allows for global
            ordering of transactions.
        properties:
            block_height:
                format: uint64
                title: BlockHeight is the block the contract was created at
                type: string
            tx_index:
                format: uint64
                title: |-
                    TxIndex is a monotonic counter within the block (actual transaction index,
                    or gas consumed)
                type: string
        type: object
    junction.wasm.v1.AccessConfig:
        description: AccessConfig access control type.
        properties:
            addresses:
                items:
                    type: string
                type: array
            permission:
                $ref: '#/definitions/junction.wasm.v1.AccessType'
        type: object
    junction.wasm.v1.AccessType:
        default: ACCESS_TYPE_UNSPECIFIED
        description: |-
            - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
             - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
             - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
             - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
        enum:
            - ACCESS_TYPE_UNSPECIFIED
            - ACCESS_TYPE_NOBODY
            - ACCESS_TYPE_EVERYBODY
            - ACCESS_TYPE_ANY_OF_ADDRESSES
        title: AccessType permission types
        type: string
    junction.wasm.v1.CodeInfoResponse:
        properties:
            code_id:
                format: uint64
                title: id for legacy support
                type: string
            creator:
                type: string
            data_hash:
                format: byte
                type: string
            instantiate_permission:
                $ref: '#/definitions/junction.wasm.v1.AccessConfig'
        title: CodeInfoResponse contains code meta data from CodeInfo
        type: object
    junction.wasm.v1.ContractCodeHistoryEntry:
        description: ContractCodeHistoryEntry metadata to a contract.
        properties:
            code_id:
                format: uint64
                title: CodeID is the reference to the stored WASM code
                type: string
            msg:
                format: byte
                type: string
            operation:
                $ref: '#/definitions/junction.wasm.v1.ContractCodeHistoryOperationType'
            updated:
                $ref: '#/definitions/junction.wasm.v1.AbsoluteTxPosition'
                description: Updated Tx position when the operation was executed.
        type: object
    junction.wasm.v1.ContractCodeHistoryOperationType:
        default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
        description: |-
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
        enum:
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
        title: ContractCodeHistoryOperationType actions that caused a code change
        type: string
    junction.wasm.v1.ContractInfo:
        properties:
            admin:
                title: Admin is an optional address that can execute migrations
                type: string
            code_id:
                format: uint64
                title: CodeID is the reference to the stored Wasm code
                type: string
            created:
                $ref: '#/definitions/junction.wasm.v1.AbsoluteTxPosition'
                description: Created Tx position when the contract was instantiated.
            creator:
                title: Creator address who initially instantiated the contract
                type: string
            extension:
                $ref: '#/definitions/google.protobuf.Any'
                description: |-
                    Extension is an extension point to store custom metadata within the
                    persistence model.
            ibc_port_id:
                type: string
            label:
                description: Label is optional metadata to be stored with a contract instance.
                type: string
        title: ContractInfo stores a WASM contract instance
        type: object
    junction.wasm.v1.Model:
        properties:
            key:
                format: byte
                title: hex-encode key to read it better (this is often ascii)
                type: string
            value:
                format: byte
                title: base64-encode raw value
                type: string
        title: Model is a struct that holds a KV pair
        type: object
    junction.wasm.v1.MsgAddCodeUploadParamsAddresses:
        description: |-
            MsgAddCodeUploadParamsAddresses is the
            MsgAddCodeUploadParamsAddresses request type.
        properties:
            addresses:
                items:
                    type: string
                type: array
            authority:
                description: Authority is the address of the governance account.
                type: string
        type: object
    junction.wasm.v1.MsgAddCodeUploadParamsAddressesResponse:
        description: |-
            MsgAddCodeUploadParamsAddressesResponse defines the response
            structure for executing a MsgAddCodeUploadParamsAddresses message.
        type: object
    junction.wasm.v1.MsgClearAdmin:
        properties:
            contract:
                title: Contract is the address of the smart contract
                type: string
            sender:
                title: Sender is the actor that signed the messages
                type: string
        title: MsgClearAdmin removes any admin stored for a smart contract
        type: object
    junction.wasm.v1.MsgClearAdminResponse:
        title: MsgClearAdminResponse returns empty data
        type: object
    junction.wasm.v1.MsgExecuteContract:
        properties:
            contract:
                title: Contract is the address of the smart contract
                type: string
            funds:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: Funds coins that are transferred to the contract on execution
                type: array
            msg:
                format: byte
                title: Msg json encoded message to be passed to the contract
                type: string
            sender:
                title: Sender is the that actor that signed the messages
                type: string
        title: MsgExecuteContract submits the given message data to a smart contract
        type: object
    junction.wasm.v1.MsgExecuteContractResponse:
        description: MsgExecuteContractResponse returns execution result data.
        properties:
            data:
                format: byte
                title: Data contains bytes to returned from the contract
                type: string
        type: object
    junction.wasm.v1.MsgInstantiateContract:
        description: |-
            MsgInstantiateContract create a new smart contract instance for the given
            code id.
        properties:
            admin:
                title: Admin is an optional address that can execute migrations
                type: string
            code_id:
                format: uint64
                title: CodeID is the reference to the stored WASM code
                type: string
            funds:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: Funds coins that are transferred to the contract on instantiation
                type: array
            label:
                description: Label is optional metadata to be stored with a contract instance.
                type: string
            msg:
                format: byte
                title: Msg json encoded message to be passed to the contract on instantiation
                type: string
            sender:
                title: Sender is the that actor that signed the messages
                type: string
        type: object
    junction.wasm.v1.MsgInstantiateContract2:
        description: |-
            MsgInstantiateContract2 create a new smart contract instance for the given
            code id with a predictable address.
        properties:
            admin:
                title: Admin is an optional address that can execute migrations
                type: string
            code_id:
                format: uint64
                title: CodeID is the reference to the stored WASM code
                type: string
            fix_msg:
                title: |-
                    FixMsg include the msg value into the hash for the predictable address.
                    Default is false
                type: boolean
            funds:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: Funds coins that are transferred to the contract on instantiation
                type: array
            label:
                description: Label is optional metadata to be stored with a contract instance.
                type: string
            msg:
                format: byte
                title: Msg json encoded message to be passed to the contract on instantiation
                type: string
            salt:
                description: Salt is an arbitrary value provided by the sender. Size can be 1 to 64.
                format: byte
                type: string
            sender:
                title: Sender is the that actor that signed the messages
                type: string
        type: object
    junction.wasm.v1.MsgInstantiateContract2Response:
        properties:
            address:
                description: Address is the bech32 address of the new contract instance.
                type: string
            data:
                format: byte
                title: Data contains bytes to returned from the contract
                type: string
        title: MsgInstantiateContract2Response return instantiation result data
        type: object
    junction.wasm.v1.MsgInstantiateContractResponse:
        properties:
            address:
                description: Address is the bech32 address of the new contract instance.
                type: string
            data:
                format: byte
                title: Data contains bytes to returned from the contract
                type: string
        title: MsgInstantiateContractResponse return instantiation result data
        type: object
    junction.wasm.v1.MsgMigrateContract:
        properties:
            code_id:
                format: uint64
                title: CodeID references the new WASM code
                type: string
            contract:
                title: Contract is the address of the smart contract
                type: string
            msg:
                format: byte
                title: Msg json encoded message to be passed to the contract on migration
                type: string
            sender:
                title: Sender is the that actor that signed the messages
                type: string
        title: MsgMigrateContract runs a code upgrade/ downgrade for a smart contract
        type: object
    junction.wasm.v1.MsgMigrateContractResponse:
        description: MsgMigrateContractResponse returns contract migration result data.
        properties:
            data:
                format: byte
                title: |-
                    Data contains same raw bytes returned as data from the wasm contract.
                    (May be empty)
                type: string
        type: object
    junction.wasm.v1.MsgPinCodes:
        description: |-
            MsgPinCodes is the MsgPinCodes request type.

            Since: 0.40
        properties:
            authority:
                description: Authority is the address of the governance account.
                type: string
            code_ids:
                items:
                    format: uint64
                    type: string
                title: CodeIDs references the new WASM codes
                type: array
        type: object
    junction.wasm.v1.MsgPinCodesResponse:
        description: |-
            MsgPinCodesResponse defines the response structure for executing a
            MsgPinCodes message.

            Since: 0.40
        type: object
    junction.wasm.v1.MsgRemoveCodeUploadParamsAddresses:
        description: |-
            MsgRemoveCodeUploadParamsAddresses is the
            MsgRemoveCodeUploadParamsAddresses request type.
        properties:
            addresses:
                items:
                    type: string
                type: array
            authority:
                description: Authority is the address of the governance account.
                type: string
        type: object
    junction.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse:
        description: |-
            MsgRemoveCodeUploadParamsAddressesResponse defines the response
            structure for executing a MsgRemoveCodeUploadParamsAddresses message.
        type: object
    junction.wasm.v1.MsgStoreAndInstantiateContract:
        description: |-
            MsgStoreAndInstantiateContract is the MsgStoreAndInstantiateContract
            request type.

            Since: 0.40
        properties:
            admin:
                title: Admin is an optional address that can execute migrations
                type: string
            authority:
                description: Authority is the address of the governance account.
                type: string
            builder:
                title: |-
                    Builder is the docker image used to build the code deterministically, used
                    for smart contract verification
                type: string
            code_hash:
                format: byte
                title: |-
                    CodeHash is the SHA256 sum of the code outputted by builder, used for smart
                    contract verification
                type: string
            funds:
                items:
                    $ref: '#/definitions/cosmos.base.v1beta1.Coin'
                    type: object
                title: |-
                    Funds coins that are transferred from the authority account to the contract
                    on instantiation
                type: array
            instantiate_permission:
                $ref: '#/definitions/junction.wasm.v1.AccessConfig'
                title: InstantiatePermission to apply on contract creation, optional
            label:
                description: Label is optional metadata to be stored with a constract instance.
                type: string
            msg:
                format: byte
                title: Msg json encoded message to be passed to the contract on instantiation
                type: string
            source:
                title: Source is the URL where the code is hosted
                type: string
            unpin_code:
                description: |-
                    UnpinCode code on upload, optional. As default the uploaded contract is
                    pinned to cache.
                type: boolean
            wasm_byte_code:
                format: byte
                title: WASMByteCode can be raw or gzip compressed
                type: string
        type: object
    junction.wasm.v1.MsgStoreAndInstantiateContractResponse:
        description: |-
            MsgStoreAndInstantiateContractResponse defines the response structure
            for executing a MsgStoreAndInstantiateContract message.

            Since: 0.40
        properties:
            address:
                description: Address is the bech32 address of the new contract instance.
                type: string
            data:
                format: byte
                title: Data contains bytes to returned from the contract
                type: string
        type: object
    junction.wasm.v1.MsgStoreAndMigrateContract:
        description: |-
            MsgStoreAndMigrateContract is the MsgStoreAndMigrateContract
            request type.

            Since: 0.42
        properties:
            authority:
                description: Authority is the address of the governance account.
                type: string
            contract:
                title: Contract is the address of the smart contract
                type: string
            instantiate_permission:
                $ref: '#/definitions/junction.wasm.v1.AccessConfig'
                title: InstantiatePermission to apply on contract creation, optional
            msg:
                format: byte
                title: Msg json encoded message to be passed to the contract on migration
                type: string
            wasm_byte_code:
                format: byte
                title: WASMByteCode can be raw or gzip compressed
                type: string
        type: object
    junction.wasm.v1.MsgStoreAndMigrateContractResponse:
        description: |-
            MsgStoreAndMigrateContractResponse defines the response structure
            for executing a MsgStoreAndMigrateContract message.

            Since: 0.42
        properties:
            checksum:
                format: byte
                title: Checksum is the sha256 hash of the stored code
                type: string
            code_id:
                format: uint64
                title: CodeID is the reference to the stored WASM code
                type: string
            data:
                format: byte
                title: Data contains bytes to returned from the contract
                type: string
        type: object
    junction.wasm.v1.MsgStoreCode:
        properties:
            instantiate_permission:
                $ref: '#/definitions/junction.wasm.v1.AccessConfig'
                title: |-
                    InstantiatePermission access control to apply on contract creation,
                    optional
            sender:
                title: Sender is the actor that signed the messages
                type: string
            wasm_byte_code:
                format: byte
                title: WASMByteCode can be raw or gzip compressed
                type: string
        title: MsgStoreCode submit Wasm code to the system
        type: object
    junction.wasm.v1.MsgStoreCodeResponse:
        description: MsgStoreCodeResponse returns store result data.
        properties:
            checksum:
                format: byte
                title: Checksum is the sha256 hash of the stored code
                type: string
            code_id:
                format: uint64
                title: CodeID is the reference to the stored WASM code
                type: string
        type: object
    junction.wasm.v1.MsgSudoContract:
        description: |-
            MsgSudoContract is the MsgSudoContract request type.

            Since: 0.40
        properties:
            authority:
                description: Authority is the address of the governance account.
                type: string
            contract:
                title: Contract is the address of the smart contract
                type: string
            msg:
                format: byte
                title: Msg json encoded message to be passed to the contract as sudo
                type: string
        type: object
    junction.wasm.v1.MsgSudoContractResponse:
        description: |-
            MsgSudoContractResponse defines the response structure for executing a
            MsgSudoContract message.

            Since: 0.40
        properties:
            data:
                format: byte
                title: Data contains bytes to returned from the contract
                type: string
        type: object
    junction.wasm.v1.MsgUnpinCodes:
        description: |-
            MsgUnpinCodes is the MsgUnpinCodes request type.

            Since: 0.40
        properties:
            authority:
                description: Authority is the address of the governance account.
                type: string
            code_ids:
                items:
                    format: uint64
                    type: string
                title: CodeIDs references the WASM codes
                type: array
        type: object
    junction.wasm.v1.MsgUnpinCodesResponse:
        description: |-
            MsgUnpinCodesResponse defines the response structure for executing a
            MsgUnpinCodes message.

            Since: 0.40
        type: object
    junction.wasm.v1.MsgUpdateAdmin:
        properties:
            contract:
                title: Contract is the address of the smart contract
                type: string
            new_admin:
                title: NewAdmin address to be set
                type: string
            sender:
                title: Sender is the that actor that signed the messages
                type: string
        title: MsgUpdateAdmin sets a new admin for a smart contract
        type: object
    junction.wasm.v1.MsgUpdateAdminResponse:
        title: MsgUpdateAdminResponse returns empty data
        type: object
    junction.wasm.v1.MsgUpdateContractLabel:
        properties:
            contract:
                title: Contract is the address of the smart contract
                type: string
            new_label:
                title: NewLabel string to be set
                type: string
            sender:
                title: Sender is the that actor that signed the messages
                type: string
        title: MsgUpdateContractLabel sets a new label for a smart contract
        type: object
    junction.wasm.v1.MsgUpdateContractLabelResponse:
        title: MsgUpdateContractLabelResponse returns empty data
        type: object
    junction.wasm.v1.MsgUpdateInstantiateConfig:
        properties:
            code_id:
                format: uint64
                title: CodeID references the stored WASM code
                type: string
            new_instantiate_permission:
                $ref: '#/definitions/junction.wasm.v1.AccessConfig'
                title: NewInstantiatePermission is the new access control
            sender:
                title: Sender is the that actor that signed the messages
                type: string
        title: MsgUpdateInstantiateConfig updates instantiate config for a smart contract
        type: object
    junction.wasm.v1.MsgUpdateInstantiateConfigResponse:
        title: MsgUpdateInstantiateConfigResponse returns empty data
        type: object
    junction.wasm.v1.MsgUpdateParams:
        description: |-
            MsgUpdateParams is the MsgUpdateParams request type.

            Since: 0.40
        properties:
            authority:
                description: Authority is the address of the governance account.
                type: string
            params:
                $ref: '#/definitions/junction.wasm.v1.Params'
                description: |-
                    params defines the x/wasm parameters to update.

                    NOTE: All parameters must be supplied.
        type: object
    junction.wasm.v1.MsgUpdateParamsResponse:
        description: |-
            MsgUpdateParamsResponse defines the response structure for executing a
            MsgUpdateParams message.

            Since: 0.40
        type: object
    junction.wasm.v1.Params:
        description: Params defines the set of wasm parameters.
        properties:
            code_upload_access:
                $ref: '#/definitions/junction.wasm.v1.AccessConfig'
            instantiate_default_permission:
                $ref: '#/definitions/junction.wasm.v1.AccessType'
        type: object
    junction.wasm.v1.QueryAllContractStateResponse:
        properties:
            models:
                items:
                    $ref: '#/definitions/junction.wasm.v1.Model'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: |-
            QueryAllContractStateResponse is the response type for the
            Query/AllContractState RPC method
        type: object
    junction.wasm.v1.QueryBuildAddressResponse:
        description: |-
            QueryBuildAddressResponse is the response type for the Query/BuildAddress RPC
            method.
        properties:
            address:
                title: Address is the contract address
                type: string
        type: object
    junction.wasm.v1.QueryCodeResponse:
        properties:
            code_info:
                $ref: '#/definitions/junction.wasm.v1.CodeInfoResponse'
            data:
                format: byte
                type: string
        title: QueryCodeResponse is the response type for the Query/Code RPC method
        type: object
    junction.wasm.v1.QueryCodesResponse:
        properties:
            code_infos:
                items:
                    $ref: '#/definitions/junction.wasm.v1.CodeInfoResponse'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: QueryCodesResponse is the response type for the Query/Codes RPC method
        type: object
    junction.wasm.v1.QueryContractHistoryResponse:
        properties:
            entries:
                items:
                    $ref: '#/definitions/junction.wasm.v1.ContractCodeHistoryEntry'
                    type: object
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: |-
            QueryContractHistoryResponse is the response type for the
            Query/ContractHistory RPC method
        type: object
    junction.wasm.v1.QueryContractInfoResponse:
        properties:
            address:
                title: address is the address of the contract
                type: string
            contract_info:
                $ref: '#/definitions/junction.wasm.v1.ContractInfo'
        title: |-
            QueryContractInfoResponse is the response type for the Query/ContractInfo RPC
            method
        type: object
    junction.wasm.v1.QueryContractsByCodeResponse:
        properties:
            contracts:
                items:
                    type: string
                title: contracts are a set of contract addresses
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: |-
            QueryContractsByCodeResponse is the response type for the
            Query/ContractsByCode RPC method
        type: object
    junction.wasm.v1.QueryContractsByCreatorResponse:
        description: |-
            QueryContractsByCreatorResponse is the response type for the
            Query/ContractsByCreator RPC method.
        properties:
            contract_addresses:
                items:
                    type: string
                title: ContractAddresses result set
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: Pagination defines the pagination in the response.
        type: object
    junction.wasm.v1.QueryParamsResponse:
        description: QueryParamsResponse is the response type for the Query/Params RPC method.
        properties:
            params:
                $ref: '#/definitions/junction.wasm.v1.Params'
                description: params defines the parameters of the module.
        type: object
    junction.wasm.v1.QueryPinnedCodesResponse:
        properties:
            code_ids:
                items:
                    format: uint64
                    type: string
                type: array
            pagination:
                $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
                description: pagination defines the pagination in the response.
        title: |-
            QueryPinnedCodesResponse is the response type for the
            Query/PinnedCodes RPC method
        type: object
    junction.wasm.v1.QueryRawContractStateResponse:
        properties:
            data:
                format: byte
                title: Data contains the raw store data
                type: string
        title: |-
            QueryRawContractStateResponse is the response type for the
            Query/RawContractState RPC method
        type: object
    junction.wasm.v1.QuerySmartContractStateResponse:
        properties:
            data:
                format: byte
                title: Data contains the json data returned from the smart contract
                type: string
        title: |-
            QuerySmartContractStateResponse is the response type for the
            Query/SmartContractState RPC method
        type: object
    tendermint.abci.CheckTxType:
        default: NEW
        enum:
            - NEW
            - RECHECK
        type: string
    tendermint.abci.CommitInfo:
        properties:
            round:
                format: int32
                type: integer
            votes:
                items:
                    $ref: '#/definitions/tendermint.abci.VoteInfo'
                    type: object
                type: array
        type: object
    tendermint.abci.Event:
        description: |-
            Event allows application developers to attach additional information to
            ResponseFinalizeBlock and ResponseCheckTx.
            Later, transactions may be queried using these events.
        properties:
            attributes:
                items:
                    $ref: '#/definitions/tendermint.abci.EventAttribute'
                    type: object
                type: array
            type:
                type: string
        type: object
    tendermint.abci.EventAttribute:
        description: EventAttribute is a single key-value pair, associated with an event.
        properties:
            index:
                title: nondeterministic
                type: boolean
            key:
                type: string
            value:
                type: string
        type: object
    tendermint.abci.ExecTxResult:
        description: |-
            ExecTxResult contains results of executing one individual transaction.

            * Its structure is equivalent to #ResponseDeliverTx which will be deprecated/deleted
        properties:
            code:
                format: int64
                type: integer
            codespace:
                type: string
            data:
                format: byte
                type: string
            events:
                items:
                    $ref: '#/definitions/tendermint.abci.Event'
                    type: object
                title: nondeterministic
                type: array
            gas_used:
                format: int64
                type: string
            gas_wanted:
                format: int64
                type: string
            info:
                title: nondeterministic
                type: string
            log:
                title: nondeterministic
                type: string
        type: object
    tendermint.abci.ExtendedCommitInfo:
        description: |-
            ExtendedCommitInfo is similar to CommitInfo except that it is only used in
            the PrepareProposal request such that CometBFT can provide vote extensions
            to the application.
        properties:
            round:
                description: The round at which the block proposer decided in the previous height.
                format: int32
                type: integer
            votes:
                description: |-
                    List of validators' addresses in the last validator set with their voting
                    information, including vote extensions.
                items:
                    $ref: '#/definitions/tendermint.abci.ExtendedVoteInfo'
                    type: object
                type: array
        type: object
    tendermint.abci.ExtendedVoteInfo:
        properties:
            block_id_flag:
                $ref: '#/definitions/tendermint.types.BlockIDFlag'
                title: block_id_flag indicates whether the validator voted for a block, nil, or did not vote at all
            extension_signature:
                format: byte
                title: Vote extension signature created by CometBFT
                type: string
            validator:
                $ref: '#/definitions/tendermint.abci.Validator'
                description: The validator that sent the vote.
            vote_extension:
                description: Non-deterministic extension provided by the sending validator's application.
                format: byte
                type: string
        type: object
    tendermint.abci.Misbehavior:
        properties:
            height:
                format: int64
                title: The height when the offense occurred
                type: string
            time:
                format: date-time
                title: The corresponding time where the offense occurred
                type: string
            total_voting_power:
                format: int64
                title: |-
                    Total voting power of the validator set in case the ABCI application does
                    not store historical validators.
                    https://github.com/tendermint/tendermint/issues/4581
                type: string
            type:
                $ref: '#/definitions/tendermint.abci.MisbehaviorType'
            validator:
                $ref: '#/definitions/tendermint.abci.Validator'
                title: The offending validator
        type: object
    tendermint.abci.MisbehaviorType:
        default: UNKNOWN
        enum:
            - UNKNOWN
            - DUPLICATE_VOTE
            - LIGHT_CLIENT_ATTACK
        type: string
    tendermint.abci.RequestApplySnapshotChunk:
        properties:
            chunk:
                format: byte
                type: string
            index:
                format: int64
                type: integer
            sender:
                type: string
        title: Applies a snapshot chunk
        type: object
    tendermint.abci.RequestCheckTx:
        properties:
            tx:
                format: byte
                type: string
            type:
                $ref: '#/definitions/tendermint.abci.CheckTxType'
        type: object
    tendermint.abci.RequestCommit:
        type: object
    tendermint.abci.RequestEcho:
        properties:
            message:
                type: string
        type: object
    tendermint.abci.RequestExtendVote:
        properties:
            hash:
                format: byte
                title: the hash of the block that this vote may be referring to
                type: string
            height:
                format: int64
                title: the height of the extended vote
                type: string
            misbehavior:
                items:
                    $ref: '#/definitions/tendermint.abci.Misbehavior'
                    type: object
                type: array
            next_validators_hash:
                format: byte
                type: string
            proposed_last_commit:
                $ref: '#/definitions/tendermint.abci.CommitInfo'
            proposer_address:
                description: address of the public key of the original proposer of the block.
                format: byte
                type: string
            time:
                format: date-time
                title: info of the block that this vote may be referring to
                type: string
            txs:
                items:
                    format: byte
                    type: string
                type: array
        title: Extends a vote with application-injected data
        type: object
    tendermint.abci.RequestFinalizeBlock:
        properties:
            decided_last_commit:
                $ref: '#/definitions/tendermint.abci.CommitInfo'
            hash:
                description: hash is the merkle root hash of the fields of the decided block.
                format: byte
                type: string
            height:
                format: int64
                type: string
            misbehavior:
                items:
                    $ref: '#/definitions/tendermint.abci.Misbehavior'
                    type: object
                type: array
            next_validators_hash:
                format: byte
                type: string
            proposer_address:
                description: proposer_address is the address of the public key of the original proposer of the block.
                format: byte
                type: string
            time:
                format: date-time
                type: string
            txs:
                items:
                    format: byte
                    type: string
                type: array
        type: object
    tendermint.abci.RequestFlush:
        type: object
    tendermint.abci.RequestInfo:
        properties:
            abci_version:
                type: string
            block_version:
                format: uint64
                type: string
            p2p_version:
                format: uint64
                type: string
            version:
                type: string
        type: object
    tendermint.abci.RequestInitChain:
        properties:
            app_state_bytes:
                format: byte
                type: string
            chain_id:
                type: string
            consensus_params:
                $ref: '#/definitions/tendermint.types.ConsensusParams'
            initial_height:
                format: int64
                type: string
            time:
                format: date-time
                type: string
            validators:
                items:
                    $ref: '#/definitions/tendermint.abci.ValidatorUpdate'
                    type: object
                type: array
        type: object
    tendermint.abci.RequestListSnapshots:
        title: lists available snapshots
        type: object
    tendermint.abci.RequestLoadSnapshotChunk:
        properties:
            chunk:
                format: int64
                type: integer
            format:
                format: int64
                type: integer
            height:
                format: uint64
                type: string
        title: loads a snapshot chunk
        type: object
    tendermint.abci.RequestOfferSnapshot:
        properties:
            app_hash:
                format: byte
                title: light client-verified app hash for snapshot height
                type: string
            snapshot:
                $ref: '#/definitions/tendermint.abci.Snapshot'
                title: snapshot offered by peers
        title: offers a snapshot to the application
        type: object
    tendermint.abci.RequestPrepareProposal:
        properties:
            height:
                format: int64
                type: string
            local_last_commit:
                $ref: '#/definitions/tendermint.abci.ExtendedCommitInfo'
            max_tx_bytes:
                description: the modified transactions cannot exceed this size.
                format: int64
                type: string
            misbehavior:
                items:
                    $ref: '#/definitions/tendermint.abci.Misbehavior'
                    type: object
                type: array
            next_validators_hash:
                format: byte
                type: string
            proposer_address:
                description: address of the public key of the validator proposing the block.
                format: byte
                type: string
            time:
                format: date-time
                type: string
            txs:
                description: |-
                    txs is an array of transactions that will be included in a block,
                    sent to the app for possible modifications.
                items:
                    format: byte
                    type: string
                type: array
        type: object
    tendermint.abci.RequestProcessProposal:
        properties:
            hash:
                description: hash is the merkle root hash of the fields of the proposed block.
                format: byte
                type: string
            height:
                format: int64
                type: string
            misbehavior:
                items:
                    $ref: '#/definitions/tendermint.abci.Misbehavior'
                    type: object
                type: array
            next_validators_hash:
                format: byte
                type: string
            proposed_last_commit:
                $ref: '#/definitions/tendermint.abci.CommitInfo'
            proposer_address:
                description: address of the public key of the original proposer of the block.
                format: byte
                type: string
            time:
                format: date-time
                type: string
            txs:
                items:
                    format: byte
                    type: string
                type: array
        type: object
    tendermint.abci.RequestQuery:
        properties:
            data:
                format: byte
                type: string
            height:
                format: int64
                type: string
            path:
                type: string
            prove:
                type: boolean
        type: object
    tendermint.abci.RequestVerifyVoteExtension:
        properties:
            hash:
                format: byte
                title: the hash of the block that this received vote corresponds to
                type: string
            height:
                format: int64
                type: string
            validator_address:
                format: byte
                title: the validator that signed the vote extension
                type: string
            vote_extension:
                format: byte
                type: string
        title: Verify the vote extension
        type: object
    tendermint.abci.ResponseApplySnapshotChunk:
        properties:
            refetch_chunks:
                items:
                    format: int64
                    type: integer
                title: Chunks to refetch and reapply
                type: array
            reject_senders:
                items:
                    type: string
                title: Chunk senders to reject and ban
                type: array
            result:
                $ref: '#/definitions/tendermint.abci.ResponseApplySnapshotChunk.Result'
        type: object
    tendermint.abci.ResponseApplySnapshotChunk.Result:
        default: UNKNOWN
        enum:
            - UNKNOWN
            - ACCEPT
            - ABORT
            - RETRY
            - RETRY_SNAPSHOT
            - REJECT_SNAPSHOT
        title: |-
            - UNKNOWN: Unknown result, abort all snapshot restoration
             - ACCEPT: Chunk successfully accepted
             - ABORT: Abort all snapshot restoration
             - RETRY: Retry chunk (combine with refetch and reject)
             - RETRY_SNAPSHOT: Retry snapshot (combine with refetch and reject)
             - REJECT_SNAPSHOT: Reject this snapshot, try others
        type: string
    tendermint.abci.ResponseCheckTx:
        properties:
            code:
                format: int64
                type: integer
            codespace:
                type: string
            data:
                format: byte
                type: string
            events:
                items:
                    $ref: '#/definitions/tendermint.abci.Event'
                    type: object
                type: array
            gas_used:
                format: int64
                type: string
            gas_wanted:
                format: int64
                type: string
            info:
                title: nondeterministic
                type: string
            log:
                title: nondeterministic
                type: string
        type: object
    tendermint.abci.ResponseCommit:
        properties:
            retain_height:
                format: int64
                type: string
        type: object
    tendermint.abci.ResponseEcho:
        properties:
            message:
                type: string
        type: object
    tendermint.abci.ResponseExtendVote:
        properties:
            vote_extension:
                format: byte
                type: string
        type: object
    tendermint.abci.ResponseFinalizeBlock:
        properties:
            app_hash:
                description: |-
                    app_hash is the hash of the applications' state which is used to confirm that execution of the transactions was
                    deterministic. It is up to the application to decide which algorithm to use.
                format: byte
                type: string
            consensus_param_updates:
                $ref: '#/definitions/tendermint.types.ConsensusParams'
                description: updates to the consensus params, if any.
            events:
                items:
                    $ref: '#/definitions/tendermint.abci.Event'
                    type: object
                title: set of block events emmitted as part of executing the block
                type: array
            tx_results:
                items:
                    $ref: '#/definitions/tendermint.abci.ExecTxResult'
                    type: object
                title: |-
                    the result of executing each transaction including the events
                    the particular transction emitted. This should match the order
                    of the transactions delivered in the block itself
                type: array
            validator_updates:
                description: a list of updates to the validator set. These will reflect the validator set at current height + 2.
                items:
                    $ref: '#/definitions/tendermint.abci.ValidatorUpdate'
                    type: object
                type: array
        type: object
    tendermint.abci.ResponseFlush:
        type: object
    tendermint.abci.ResponseInfo:
        properties:
            app_version:
                format: uint64
                type: string
            data:
                type: string
            last_block_app_hash:
                format: byte
                type: string
            last_block_height:
                format: int64
                type: string
            version:
                type: string
        type: object
    tendermint.abci.ResponseInitChain:
        properties:
            app_hash:
                format: byte
                type: string
            consensus_params:
                $ref: '#/definitions/tendermint.types.ConsensusParams'
            validators:
                items:
                    $ref: '#/definitions/tendermint.abci.ValidatorUpdate'
                    type: object
                type: array
        type: object
    tendermint.abci.ResponseListSnapshots:
        properties:
            snapshots:
                items:
                    $ref: '#/definitions/tendermint.abci.Snapshot'
                    type: object
                type: array
        type: object
    tendermint.abci.ResponseLoadSnapshotChunk:
        properties:
            chunk:
                format: byte
                type: string
        type: object
    tendermint.abci.ResponseOfferSnapshot:
        properties:
            result:
                $ref: '#/definitions/tendermint.abci.ResponseOfferSnapshot.Result'
        type: object
    tendermint.abci.ResponseOfferSnapshot.Result:
        default: UNKNOWN
        enum:
            - UNKNOWN
            - ACCEPT
            - ABORT
            - REJECT
            - REJECT_FORMAT
            - REJECT_SENDER
        title: |-
            - UNKNOWN: Unknown result, abort all snapshot restoration
             - ACCEPT: Snapshot accepted, apply chunks
             - ABORT: Abort all snapshot restoration
             - REJECT: Reject this specific snapshot, try others
             - REJECT_FORMAT: Reject all snapshots of this format, try others
             - REJECT_SENDER: Reject all snapshots from the sender(s), try others
        type: string
    tendermint.abci.ResponsePrepareProposal:
        properties:
            txs:
                items:
                    format: byte
                    type: string
                type: array
        type: object
    tendermint.abci.ResponseProcessProposal:
        properties:
            status:
                $ref: '#/definitions/tendermint.abci.ResponseProcessProposal.ProposalStatus'
        type: object
    tendermint.abci.ResponseProcessProposal.ProposalStatus:
        default: UNKNOWN
        enum:
            - UNKNOWN
            - ACCEPT
            - REJECT
        type: string
    tendermint.abci.ResponseQuery:
        properties:
            code:
                format: int64
                type: integer
            codespace:
                type: string
            height:
                format: int64
                type: string
            index:
                format: int64
                type: string
            info:
                title: nondeterministic
                type: string
            key:
                format: byte
                type: string
            log:
                description: |-
                    bytes data = 2; // use "value" instead.

                    nondeterministic
                type: string
            proof_ops:
                $ref: '#/definitions/tendermint.crypto.ProofOps'
            value:
                format: byte
                type: string
        type: object
    tendermint.abci.ResponseVerifyVoteExtension:
        properties:
            status:
                $ref: '#/definitions/tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus'
        type: object
    tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus:
        default: UNKNOWN
        description: |4-
             - REJECT: Rejecting the vote extension will reject the entire precommit by the sender.
            Incorrectly implementing this thus has liveness implications as it may affect
            CometBFT's ability to receive 2/3+ valid votes to finalize the block.
            Honest nodes should never be rejected.
        enum:
            - UNKNOWN
            - ACCEPT
            - REJECT
        type: string
    tendermint.abci.Snapshot:
        properties:
            chunks:
                format: int64
                title: Number of chunks in the snapshot
                type: integer
            format:
                format: int64
                title: The application-specific snapshot format
                type: integer
            hash:
                format: byte
                title: Arbitrary snapshot hash, equal only if identical
                type: string
            height:
                format: uint64
                title: The height at which the snapshot was taken
                type: string
            metadata:
                format: byte
                title: Arbitrary application metadata
                type: string
        type: object
    tendermint.abci.Validator:
        properties:
            address:
                format: byte
                title: The first 20 bytes of SHA256(public key)
                type: string
            power:
                description: The voting power
                format: int64
                title: PubKey pub_key = 2 [(gogoproto.nullable)=false];
                type: string
        type: object
    tendermint.abci.ValidatorUpdate:
        properties:
            power:
                format: int64
                type: string
            pub_key:
                $ref: '#/definitions/tendermint.crypto.PublicKey'
        type: object
    tendermint.abci.VoteInfo:
        properties:
            block_id_flag:
                $ref: '#/definitions/tendermint.types.BlockIDFlag'
            validator:
                $ref: '#/definitions/tendermint.abci.Validator'
        type: object
    tendermint.crypto.ProofOp:
        properties:
            data:
                format: byte
                type: string
            key:
                format: byte
                type: string
            type:
                type: string
        title: |-
            ProofOp defines an operation used for calculating Merkle root
            The data could be arbitrary format, providing nessecary data
            for example neighbouring node hash
        type: object
    tendermint.crypto.ProofOps:
        properties:
            ops:
                items:
                    $ref: '#/definitions/tendermint.crypto.ProofOp'
                    type: object
                type: array
        title: ProofOps is Merkle proof defined by the list of ProofOps
        type: object
    tendermint.crypto.PublicKey:
        properties:
            ed25519:
                format: byte
                type: string
            secp256k1:
                format: byte
                type: string
        title: PublicKey defines the keys available for use with Validators
        type: object
    tendermint.p2p.DefaultNodeInfo:
        properties:
            channels:
                format: byte
                type: string
            default_node_id:
                type: string
            listen_addr:
                type: string
            moniker:
                type: string
            network:
                type: string
            other:
                $ref: '#/definitions/tendermint.p2p.DefaultNodeInfoOther'
            protocol_version:
                $ref: '#/definitions/tendermint.p2p.ProtocolVersion'
            version:
                type: string
        type: object
    tendermint.p2p.DefaultNodeInfoOther:
        properties:
            rpc_address:
                type: string
            tx_index:
                type: string
        type: object
    tendermint.p2p.ProtocolVersion:
        properties:
            app:
                format: uint64
                type: string
            block:
                format: uint64
                type: string
            p2p:
                format: uint64
                type: string
        type: object
    tendermint.types.ABCIParams:
        description: ABCIParams configure functionality specific to the Application Blockchain Interface.
        properties:
            vote_extensions_enable_height:
                description: |-
                    vote_extensions_enable_height configures the first height during which
                    vote extensions will be enabled. During this specified height, and for all
                    subsequent heights, precommit messages that do not contain valid extension data
                    will be considered invalid. Prior to this height, vote extensions will not
                    be used or accepted by validators on the network.

                    Once enabled, vote extensions will be created by the application in ExtendVote,
                    passed to the application for validation in VerifyVoteExtension and given
                    to the application to use when proposing a block during PrepareProposal.
                format: int64
                type: string
        type: object
    tendermint.types.Block:
        properties:
            data:
                $ref: '#/definitions/tendermint.types.Data'
            evidence:
                $ref: '#/definitions/tendermint.types.EvidenceList'
            header:
                $ref: '#/definitions/tendermint.types.Header'
            last_commit:
                $ref: '#/definitions/tendermint.types.Commit'
        type: object
    tendermint.types.BlockID:
        properties:
            hash:
                format: byte
                type: string
            part_set_header:
                $ref: '#/definitions/tendermint.types.PartSetHeader'
        title: BlockID
        type: object
    tendermint.types.BlockIDFlag:
        default: BLOCK_ID_FLAG_UNKNOWN
        description: |-
            - BLOCK_ID_FLAG_UNKNOWN: indicates an error condition
             - BLOCK_ID_FLAG_ABSENT: the vote was not received
             - BLOCK_ID_FLAG_COMMIT: voted for the block that received the majority
             - BLOCK_ID_FLAG_NIL: voted for nil
        enum:
            - BLOCK_ID_FLAG_UNKNOWN
            - BLOCK_ID_FLAG_ABSENT
            - BLOCK_ID_FLAG_COMMIT
            - BLOCK_ID_FLAG_NIL
        title: BlockIdFlag indicates which BlockID the signature is for
        type: string
    tendermint.types.BlockParams:
        description: BlockParams contains limits on the block size.
        properties:
            max_bytes:
                format: int64
                title: |-
                    Max block size, in bytes.
                    Note: must be greater than 0
                type: string
            max_gas:
                format: int64
                title: |-
                    Max gas per block.
                    Note: must be greater or equal to -1
                type: string
        type: object
    tendermint.types.Commit:
        description: Commit contains the evidence that a block was committed by a set of validators.
        properties:
            block_id:
                $ref: '#/definitions/tendermint.types.BlockID'
            height:
                format: int64
                type: string
            round:
                format: int32
                type: integer
            signatures:
                items:
                    $ref: '#/definitions/tendermint.types.CommitSig'
                    type: object
                type: array
        type: object
    tendermint.types.CommitSig:
        description: CommitSig is a part of the Vote included in a Commit.
        properties:
            block_id_flag:
                $ref: '#/definitions/tendermint.types.BlockIDFlag'
            signature:
                format: byte
                type: string
            timestamp:
                format: date-time
                type: string
            validator_address:
                format: byte
                type: string
        type: object
    tendermint.types.ConsensusParams:
        description: |-
            ConsensusParams contains consensus critical parameters that determine the
            validity of blocks.
        properties:
            abci:
                $ref: '#/definitions/tendermint.types.ABCIParams'
            block:
                $ref: '#/definitions/tendermint.types.BlockParams'
            evidence:
                $ref: '#/definitions/tendermint.types.EvidenceParams'
            validator:
                $ref: '#/definitions/tendermint.types.ValidatorParams'
            version:
                $ref: '#/definitions/tendermint.types.VersionParams'
        type: object
    tendermint.types.Data:
        properties:
            txs:
                description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                items:
                    format: byte
                    type: string
                type: array
        title: Data contains the set of transactions included in the block
        type: object
    tendermint.types.DuplicateVoteEvidence:
        description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
        properties:
            timestamp:
                format: date-time
                type: string
            total_voting_power:
                format: int64
                type: string
            validator_power:
                format: int64
                type: string
            vote_a:
                $ref: '#/definitions/tendermint.types.Vote'
            vote_b:
                $ref: '#/definitions/tendermint.types.Vote'
        type: object
    tendermint.types.Evidence:
        properties:
            duplicate_vote_evidence:
                $ref: '#/definitions/tendermint.types.DuplicateVoteEvidence'
            light_client_attack_evidence:
                $ref: '#/definitions/tendermint.types.LightClientAttackEvidence'
        type: object
    tendermint.types.EvidenceList:
        properties:
            evidence:
                items:
                    $ref: '#/definitions/tendermint.types.Evidence'
                    type: object
                type: array
        type: object
    tendermint.types.EvidenceParams:
        description: EvidenceParams determine how we handle evidence of malfeasance.
        properties:
            max_age_duration:
                description: |-
                    Max age of evidence, in time.

                    It should correspond with an app's "unbonding period" or other similar
                    mechanism for handling [Nothing-At-Stake
                    attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                type: string
            max_age_num_blocks:
                description: |-
                    Max age of evidence, in blocks.

                    The basic formula for calculating this is: MaxAgeDuration / {average block
                    time}.
                format: int64
                type: string
            max_bytes:
                format: int64
                title: |-
                    This sets the maximum size of total evidence in bytes that can be committed in a single block.
                    and should fall comfortably under the max block bytes.
                    Default is 1048576 or 1MB
                type: string
        type: object
    tendermint.types.Header:
        description: Header defines the structure of a block header.
        properties:
            app_hash:
                format: byte
                title: state after txs from the previous block
                type: string
            chain_id:
                type: string
            consensus_hash:
                format: byte
                title: consensus params for current block
                type: string
            data_hash:
                format: byte
                title: transactions
                type: string
            evidence_hash:
                description: evidence included in the block
                format: byte
                title: consensus info
                type: string
            height:
                format: int64
                type: string
            last_block_id:
                $ref: '#/definitions/tendermint.types.BlockID'
                title: prev block info
            last_commit_hash:
                description: commit from validators from the last block
                format: byte
                title: hashes of block data
                type: string
            last_results_hash:
                format: byte
                title: root hash of all results from the txs from the previous block
                type: string
            next_validators_hash:
                format: byte
                title: validators for the next block
                type: string
            proposer_address:
                format: byte
                title: original proposer of the block
                type: string
            time:
                format: date-time
                type: string
            validators_hash:
                description: validators for the current block
                format: byte
                title: hashes from the app output from the prev block
                type: string
            version:
                $ref: '#/definitions/tendermint.version.Consensus'
                title: basic block info
        type: object
    tendermint.types.LightBlock:
        properties:
            signed_header:
                $ref: '#/definitions/tendermint.types.SignedHeader'
            validator_set:
                $ref: '#/definitions/tendermint.types.ValidatorSet'
        type: object
    tendermint.types.LightClientAttackEvidence:
        description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
        properties:
            byzantine_validators:
                items:
                    $ref: '#/definitions/tendermint.types.Validator'
                    type: object
                type: array
            common_height:
                format: int64
                type: string
            conflicting_block:
                $ref: '#/definitions/tendermint.types.LightBlock'
            timestamp:
                format: date-time
                type: string
            total_voting_power:
                format: int64
                type: string
        type: object
    tendermint.types.PartSetHeader:
        properties:
            hash:
                format: byte
                type: string
            total:
                format: int64
                type: integer
        title: PartsetHeader
        type: object
    tendermint.types.SignedHeader:
        properties:
            commit:
                $ref: '#/definitions/tendermint.types.Commit'
            header:
                $ref: '#/definitions/tendermint.types.Header'
        type: object
    tendermint.types.SignedMsgType:
        default: SIGNED_MSG_TYPE_UNKNOWN
        description: |-
            SignedMsgType is a type of signed message in the consensus.

             - SIGNED_MSG_TYPE_PREVOTE: Votes
             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
        enum:
            - SIGNED_MSG_TYPE_UNKNOWN
            - SIGNED_MSG_TYPE_PREVOTE
            - SIGNED_MSG_TYPE_PRECOMMIT
            - SIGNED_MSG_TYPE_PROPOSAL
        type: string
    tendermint.types.Validator:
        properties:
            address:
                format: byte
                type: string
            proposer_priority:
                format: int64
                type: string
            pub_key:
                $ref: '#/definitions/tendermint.crypto.PublicKey'
            voting_power:
                format: int64
                type: string
        type: object
    tendermint.types.ValidatorParams:
        description: |-
            ValidatorParams restrict the public key types validators can use.
            NOTE: uses ABCI pubkey naming, not Amino names.
        properties:
            pub_key_types:
                items:
                    type: string
                type: array
        type: object
    tendermint.types.ValidatorSet:
        properties:
            proposer:
                $ref: '#/definitions/tendermint.types.Validator'
            total_voting_power:
                format: int64
                type: string
            validators:
                items:
                    $ref: '#/definitions/tendermint.types.Validator'
                    type: object
                type: array
        type: object
    tendermint.types.VersionParams:
        description: VersionParams contains the ABCI application version.
        properties:
            app:
                format: uint64
                type: string
        type: object
    tendermint.types.Vote:
        description: |-
            Vote represents a prevote or precommit vote from validators for
            consensus.
        properties:
            block_id:
                $ref: '#/definitions/tendermint.types.BlockID'
                description: zero if vote is nil.
            extension:
                description: |-
                    Vote extension provided by the application. Only valid for precommit
                    messages.
                format: byte
                type: string
            extension_signature:
                description: |-
                    Vote extension signature by the validator if they participated in
                    consensus for the associated block.
                    Only valid for precommit messages.
                format: byte
                type: string
            height:
                format: int64
                type: string
            round:
                format: int32
                type: integer
            signature:
                description: |-
                    Vote signature by the validator if they participated in consensus for the
                    associated block.
                format: byte
                type: string
            timestamp:
                format: date-time
                type: string
            type:
                $ref: '#/definitions/tendermint.types.SignedMsgType'
            validator_address:
                format: byte
                type: string
            validator_index:
                format: int32
                type: integer
        type: object
    tendermint.version.Consensus:
        description: |-
            Consensus captures the consensus rules for processing a block in the blockchain,
            including all blockchain data structures and the rules of the application's
            state transition machine.
        properties:
            app:
                format: uint64
                type: string
            block:
                format: uint64
                type: string
        type: object
